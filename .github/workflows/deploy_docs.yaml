name: Deploy Docs

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - v*
      - e*

jobs:
  deploy:
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'emqx'
    steps:
    - name: clone docs
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: docs-files

    - name: set env
      run: |
         BRANCH=$(echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g")
         echo "DOCS_BRANCH=$BRANCH" >> $GITHUB_ENV
         version=${BRANCH%%-*}
         if [[ $BRANCH == v* ]];
         then
           echo "DOCS_TYPE=broker" >> $GITHUB_ENV
         else
           version=${version/e/v}
           echo "DOCS_TYPE=enterprise" >> $GITHUB_ENV
         fi
         echo "VERSION=$version" >> $GITHUB_ENV

    - name: clone ce frontend
      uses: actions/checkout@v2
      if: env.DOCS_TYPE == 'broker'
      with:
        repository: "emqx/emqx-io-docs-frontend"
        token: ${{ secrets.CI_GIT_TOKEN }}
        path: frontend

    - name: clone ee frontend
      uses: actions/checkout@v2
      if: env.DOCS_TYPE == 'enterprise'
      with:
        repository: 'emqx/docs-emqx-com-frontend'
        token: ${{ secrets.CI_GIT_TOKEN }}
        path: frontend

    - name: use node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.15

    - name: remove unused files
      run: |
        cd docs-files
        if [[ $DOCS_TYPE == "broker" ]];
        then
          python3 .github/scripts/remove_unused.py directory.json $(pwd)
        else
          python3 .github/scripts/remove_unused.py directory_ee.json $(pwd)
        fi

    - name: move ce files
      if: env.DOCS_TYPE == 'broker'
      run: |
        rm frontend/docs/en/README.md || true
        rm frontend/docs/zh/README.md || true
        rm frontend/docs/*.md || true
        rm frontend/README.md
        mkdir -p frontend/docs/en/${VERSION}/
        mkdir -p frontend/docs/zh/${VERSION}/
        mkdir -p frontend/docs/.vuepress/public/api/
        cp -r docs-files/en_US/* frontend/docs/en/${VERSION}/
        cp -r docs-files/zh_CN/* frontend/docs/zh/${VERSION}/
        cp docs-files/directory.json frontend/docs/.vuepress/config/directory.json

    - name: move ee files
      if: env.DOCS_TYPE == 'enterprise'
      run: |
        rm frontend/docs/en/README.md || true
        rm frontend/docs/zh/README.md || true
        rm frontend/docs/*.md || true
        rm frontend/README.md
        mkdir -p frontend/docs/en/${DOCS_TYPE}/${VERSION}/
        mkdir -p frontend/docs/zh/${DOCS_TYPE}/${VERSION}/
        mkdir -p frontend/docs/.vuepress/public/api/
        cp -r docs-files/en_US/* frontend/docs/en/${DOCS_TYPE}/${VERSION}/
        cp -r docs-files/zh_CN/* frontend/docs/zh/${DOCS_TYPE}/${VERSION}/
        cp docs-files/directory_ee.json frontend/docs/.vuepress/config/directory.json

    - name: generate version config
      run: |
        cd docs-files
        if [[ $DOCS_TYPE == "broker" ]];
        then
          version_list=$(git tag | egrep "^v.*$" | xargs echo -n)
        else
          version_list=$(git tag | egrep "^e.*$" | xargs echo -n)
        fi
        python3 .github/scripts/generate_version.py $version_list > ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json
        cat ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json
        latest_version=$(cat ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json  | jq -r '.[0]')
        echo "LATEST_VERSION=$latest_version" >> $GITHUB_ENV

    - name: build docs
      run: |
        cd frontend
        yarn && yarn build

    - name: upload ce files
      if: env.DOCS_TYPE == 'broker'
      run: |
        cd frontend/docs/.vuepress/
        wget http://gosspublic.alicdn.com/ossutil/1.7.8/ossutil64
        chmod 755 ./ossutil64
        ./ossutil64 config -e https://oss-accelerate.aliyuncs.com -i ${{ secrets.ALI_OSS_ACCESSKEY_ID }} -k ${{ secrets.ALI_OSS_ACCESSKEY_SECRET }} -L CH
        ./ossutil64 cp -r dist/ oss://emqx-io-docs/docs/ -u

    - name: upload ee file
      if: env.DOCS_TYPE == 'enterprise'
      run: |
        pip3 install coscmd
        coscmd config -a ${{ secrets.TENCENT_COS_ID }} -s ${{ secrets.TENCENT_COS_KEY }} -b docs-1302406139 -r ap-shanghai
        coscmd delete -r -f en/${DOCS_TYPE}/${VERSION} || true
        coscmd delete -r -f zh/${DOCS_TYPE}/${VERSION} || true
        coscmd config -a ${{ secrets.TENCENT_COS_ID }} -s ${{ secrets.TENCENT_COS_KEY }} -b docs-1302406139 -e cos.accelerate.myqcloud.com
        cd frontend/docs/.vuepress/dist/
        zip -rq docs-dist-${DOCS_TYPE}-${VERSION}.zip ./
        coscmd upload docs-dist-${DOCS_TYPE}-${VERSION}.zip docs-zip/
        sleep 90

    - name: flush ee cdn
      if: env.DOCS_TYPE == 'enterprise'
      run: |
        pip3 install tccli
        tccli configure set secretId ${{ secrets.TENCENT_COS_ID }}
        tccli configure set secretKey ${{ secrets.TENCENT_COS_KEY }}
        tccli configure set region ap-shanghai
        tccli cdn UpdateDomainConfig --cli-unfold-argument --Domain docs.emqx.com \
            --UrlRedirect.Switch on \
            --UrlRedirect.PathRules.0.RedirectStatusCode 302 \
            --UrlRedirect.PathRules.0.Pattern "/zh/enterprise/latest/*" \
            --UrlRedirect.PathRules.0.RedirectUrl "/zh/enterprise/${LATEST_VERSION}/\$1" \
            --UrlRedirect.PathRules.0.RedirectHost https://docs.emqx.com \
            --UrlRedirect.PathRules.1.RedirectStatusCode 302 \
            --UrlRedirect.PathRules.1.Pattern "/en/enterprise/latest/*" \
            --UrlRedirect.PathRules.1.RedirectUrl "/en/enterprise/${LATEST_VERSION}/\$1" \
            --UrlRedirect.PathRules.1.RedirectHost https://docs.emqx.com
        tccli cdn PurgePathCache --cli-unfold-argument --Paths https://docs.emqx.com/zh/${DOCS_TYPE}/${VERSION}/ https://docs.emqx.com/en/${DOCS_TYPE}/${VERSION}/ --FlushType delete
        tccli cdn PurgeUrlsCache --cli-unfold-argument --Urls https://docs.emqx.com/api/${DOCS_TYPE}_versions.json https://docs.emqx.com/sitemap_${DOCS_TYPE}_${VERSION}.xml

    - name: update ee search index
      if: env.DOCS_TYPE == 'enterprise'
      uses: Swilder-M/docsearch-scraper-simple@v4
      env:
        APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
        API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
      with:
        docs_type: ${{ env.DOCS_TYPE }}
        docs_version: ${{ env.VERSION }}

    - name: update ce search index
      if: env.DOCS_TYPE == 'broker'
      uses: Swilder-M/docsearch-scraper-simple@v4
      env:
        APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID_CE }}
        API_KEY: ${{ secrets.ALGOLIA_API_KEY_CE }}
      with:
        docs_type: ${{ env.DOCS_TYPE }}
        docs_version: ${{ env.VERSION }}
