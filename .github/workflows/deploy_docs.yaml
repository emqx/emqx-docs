name: Deploy Docs

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - v*

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
    - name: clone docs
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: docs-files

    - name: clone frontend
      uses: actions/checkout@v2
      with:
        repository: 'emqx/docs-frontend'
        path: frontend

    - name: use node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.15

    - name: use python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: 'x64'

    - name: set env
      run: |
         BRANCH=$(echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g")
         echo "DOCS_BRANCH=$BRANCH" >> $GITHUB_ENV
         echo "VERSION=$BRANCH" >> $GITHUB_ENV
         echo "DOCS_TYPE=emqx" >> $GITHUB_ENV

    - name: remove unused files
      run: |
        cd docs-files
        python3 .ci/remove_unused.py $(pwd)

    - name: move files
      run: |
        rm frontend/docs/en/README.md || true
        rm frontend/docs/zh/README.md || true
        rm frontend/docs/*.md || true
        rm frontend/README.md
        mkdir -p frontend/docs/en/${DOCS_TYPE}/${VERSION}/
        mkdir -p frontend/docs/zh/${DOCS_TYPE}/${VERSION}/
        mkdir -p frontend/docs/.vuepress/public/api/
        cp -r docs-files/en_US/* frontend/docs/en/${DOCS_TYPE}/${VERSION}/
        cp -r docs-files/zh_CN/* frontend/docs/zh/${DOCS_TYPE}/${VERSION}/
        cp docs-files/directory.json frontend/docs/.vuepress/config/directory.json

    - name: generate version config
      run: |
        cd docs-files
        python3 .ci/generate_version.py $(git tag | egrep "v[0-9](\.[0-9])*$" | xargs echo -n) > ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json
        cat ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json
        echo '<?xml version="1.0" encoding="UTF-8"?>' > sitemap_all.xml
        echo '<sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> sitemap_all.xml
        for i in $(cat ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json | jq -r '.[]'); \
            do echo '<sitemap>' >> sitemap_all.xml; \
            echo "<loc>https://docs.emqx.com/sitemap_${DOCS_TYPE}_$i.xml</loc>">> sitemap_all.xml; \
            echo '<changefreq>daily</changefreq>  </sitemap>' >> sitemap_all.xml;  done
        echo '</sitemapindex>' >> sitemap_all.xml
        mv sitemap_all.xml ../frontend/docs/.vuepress/public/sitemap_${DOCS_TYPE}.xml

    - name: build docs
      run: |
        cd frontend
        yarn && yarn build

    - name: upload dist
      run: |
        pip3 install coscmd
        coscmd config -a ${{ secrets.COS_ID }} -s ${{ secrets.COS_KEY }} -b ${{ secrets.COS_NAME }} -r ${{ secrets.COS_REGION }}
        coscmd delete -r -f en/${DOCS_TYPE}/${VERSION} || true
        coscmd delete -r -f zh/${DOCS_TYPE}/${VERSION} || true
        coscmd config -a ${{ secrets.COS_ID }} -s ${{ secrets.COS_KEY }} -b ${{ secrets.COS_NAME }} -e cos.accelerate.myqcloud.com
        cd frontend/docs/.vuepress/dist/
        zip -rq docs-dist-${DOCS_TYPE}-${VERSION}.zip ./
        coscmd upload docs-dist-${DOCS_TYPE}-${VERSION}.zip docs-zip/
        sleep 90

    - name: flush CDN
      run: |
        pip3 install tccli
        tccli configure set secretId ${{ secrets.COS_ID }}
        tccli configure set secretKey ${{ secrets.COS_KEY }}
        tccli configure set region ${{ secrets.COS_REGION }}
        latest_version=$(cat frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json  | jq -r '.[0]')
        echo "LATEST_VERSION=$latest_version" >> $GITHUB_ENV
        tccli cdn UpdateDomainConfig --cli-unfold-argument --Domain docs.emqx.com \
            --UrlRedirect.Switch on \
            --UrlRedirect.PathRules.0.RedirectStatusCode 302 \
            --UrlRedirect.PathRules.0.Pattern "/zh/emqx/latest/*" \
            --UrlRedirect.PathRules.0.RedirectUrl "/zh/emqx/${latest_version}/index.html" \
            --UrlRedirect.PathRules.0.RedirectHost https://docs.emqx.com \
            --UrlRedirect.PathRules.1.RedirectStatusCode 302 \
            --UrlRedirect.PathRules.1.Pattern "/en/emqx/latest/*" \
            --UrlRedirect.PathRules.1.RedirectUrl "/en/emqx/${latest_version}/index.html" \
            --UrlRedirect.PathRules.1.RedirectHost https://docs.emqx.com
        tccli cdn PurgePathCache --cli-unfold-argument --Paths https://docs.emqx.com/zh/${DOCS_TYPE}/${VERSION}/ https://docs.emqx.com/en/${DOCS_TYPE}/${VERSION}/ --FlushType delete
        tccli cdn PurgeUrlsCache --cli-unfold-argument --Urls https://docs.emqx.com/api/${DOCS_TYPE}_versions.json https://docs.emqx.com/sitemap_${DOCS_TYPE}_${VERSION}.xml https://docs.emqx.com/sitemap_${DOCS_TYPE}.xml

    - name: clone docsearch
      uses: actions/checkout@v2
      with:
        repository: 'Swilder-M/docsearch-scraper-simple'
        path: docsearch

    - name: Install pipenv
      run: |
          python -m pip install --upgrade pipenv wheel

    - id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

    - name: install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        cd docsearch
        pipenv install --keep-outdated

    - name: update current version
      if: ${{ env.LATEST_VERSION == env.VERSION }}
      env:
        APPLICATION_ID: ${{ secrets.DOCS_APPLICATION_ID }}
        API_KEY: ${{ secrets.DOCS_API_KEY }}
      run: |
        cd docsearch
        pipenv run python -m src.index config ${DOCS_TYPE} ${VERSION}
