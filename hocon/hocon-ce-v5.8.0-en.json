{
  "doc" : "",
  "hash" : "T-root",
  "fields" : [
    {
      "refs" : [
        {
          "doc" : "MQTT listeners identified by their protocol type and assigned names",
          "hash" : "T-listeners-S-listeners",
          "fields" : [
            {
              "doc" : "TCP listeners.",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over TCP listener.",
                  "hash" : "T-listeners-S-listeners-tcp-S-mqtt_tcp_listener",
                  "fields" : [
                    {
                      "doc" : "IP address and port for the listening socket.",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "1883"
                    },
                    {
                      "doc" : "The size of the listener's receiving pool.",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message\nis delivered to the subscriber. The mountpoint is a way that users can use\nto implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint`\nset to `some_tenant`, then the client actually subscribes to the topic\n`some_tenant/t`. Similarly, if another client B (connected to the same listener\nas the client A) sends a message to topic `t`, the message is routed\nto all the clients subscribed `some_tenant/t`, so client A will receive the\nmessage, with topic name `t`.<br/>\nSet to `\"\"` to disable the feature.<br/>\n\nVariables in mountpoint string:\n  - <code>${clientid}</code>: clientid\n  - <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "Used to limit the rate at which the current listener accepts connections.\n\nOnce the limit is reached, EMQX will pause fetching connections from the Accept queue, thereby delaying or rejecting new connections.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "Used to limit the number of messages a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be delayed.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be delayed.",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "Used to limit the number of bytes a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be delayed.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be delayed.",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses. The rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-access_rules",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "doc" : "Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-proxy_protocol",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP, this option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\n\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-proxy_protocol_timeout",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "TCP listener options.",
                          "hash" : "T-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-active_n",
                              "text" : "active_n",
                              "type" : "Integer(0..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-backlog",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Close the connection if send timeout.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-buffer",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "The TCP_NODELAY flag for the connections.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The SO_REUSEADDR flag for the connections.",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none'",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-keepalive",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    }
                  ],
                  "text" : "mqtt_tcp_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-tcp",
              "text" : "tcp",
              "type" : "Map($name->OneOf(Struct(mqtt_tcp_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc" : "SSL listeners.",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over SSL listener.",
                  "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener",
                  "fields" : [
                    {
                      "doc" : "IP address and port for the listening socket.",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8883"
                    },
                    {
                      "doc" : "The size of the listener's receiving pool.",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message\nis delivered to the subscriber. The mountpoint is a way that users can use\nto implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint`\nset to `some_tenant`, then the client actually subscribes to the topic\n`some_tenant/t`. Similarly, if another client B (connected to the same listener\nas the client A) sends a message to topic `t`, the message is routed\nto all the clients subscribed `some_tenant/t`, so client A will receive the\nmessage, with topic name `t`.<br/>\nSet to `\"\"` to disable the feature.<br/>\n\nVariables in mountpoint string:\n  - <code>${clientid}</code>: clientid\n  - <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "Used to limit the rate at which the current listener accepts connections.\n\nOnce the limit is reached, EMQX will pause fetching connections from the Accept queue, thereby delaying or rejecting new connections.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "Used to limit the number of messages a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be delayed.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be delayed.",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "Used to limit the number of bytes a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be delayed.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be delayed.",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses. The rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-access_rules",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "doc" : "Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-proxy_protocol",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP, this option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\n\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-proxy_protocol_timeout",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "TCP listener options.",
                          "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-active_n",
                              "text" : "active_n",
                              "type" : "Integer(0..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-backlog",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Close the connection if send timeout.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-buffer",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "The TCP_NODELAY flag for the connections.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The SO_REUSEADDR flag for the connections.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none'",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-keepalive",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL connections.",
                          "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                              "text" : "dhfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                              "text" : "fail_if_no_peer_cert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                              "text" : "honor_cipher_order",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                              "text" : "client_renegotiation",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                              "text" : "handshake_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                              "text" : "gc_after_handshake",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "refs" : [
                                {
                                  "doc" : "Per listener OCSP Stapling configuration.",
                                  "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                  "fields" : [
                                    {
                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                      "text" : "enable_ocsp_stapling",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                      "text" : "responder_url",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                      "text" : "issuer_pem",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                      "text" : "refresh_interval",
                                      "type" : "Duration",
                                      "default" : "\"5m\""
                                    },
                                    {
                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                      "text" : "refresh_http_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "text" : "ocsp"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                              "text" : "ocsp",
                              "type" : "Struct(ocsp)"
                            },
                            {
                              "doc" : "Whether to enable CRL verification for this listener.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                              "text" : "enable_crl_check",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "text" : "listener_ssl_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_ssl_opts)"
                    }
                  ],
                  "text" : "mqtt_ssl_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-ssl",
              "text" : "ssl",
              "type" : "Map($name->OneOf(Struct(mqtt_ssl_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc" : "HTTP websocket listeners.",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over WebSocket listener.",
                  "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener",
                  "fields" : [
                    {
                      "doc" : "IP address and port for the listening socket.",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8083"
                    },
                    {
                      "doc" : "The size of the listener's receiving pool.",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message\nis delivered to the subscriber. The mountpoint is a way that users can use\nto implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint`\nset to `some_tenant`, then the client actually subscribes to the topic\n`some_tenant/t`. Similarly, if another client B (connected to the same listener\nas the client A) sends a message to topic `t`, the message is routed\nto all the clients subscribed `some_tenant/t`, so client A will receive the\nmessage, with topic name `t`.<br/>\nSet to `\"\"` to disable the feature.<br/>\n\nVariables in mountpoint string:\n  - <code>${clientid}</code>: clientid\n  - <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "Used to limit the rate at which the current listener accepts connections.\n\nOnce the limit is reached, EMQX will pause fetching connections from the Accept queue, thereby delaying or rejecting new connections.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "Used to limit the number of messages a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be delayed.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be delayed.",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "Used to limit the number of bytes a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be delayed.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be delayed.",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses. The rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-access_rules",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "doc" : "Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-proxy_protocol",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP, this option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\n\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-proxy_protocol_timeout",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "TCP listener options.",
                          "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-active_n",
                              "text" : "active_n",
                              "type" : "Integer(0..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-backlog",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Close the connection if send timeout.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-buffer",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "The TCP_NODELAY flag for the connections.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The SO_REUSEADDR flag for the connections.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none'",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-keepalive",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "WebSocket listener options.",
                          "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts",
                          "fields" : [
                            {
                              "doc" : "WebSocket's MQTT protocol path. By default, the full URL for the WebSocket client to connect is:\n`ws://{host}:{port}/mqtt`.\nAppend `/[...]` to the end of the path to make EMQX accept any subpath.\nFor example, specifying `mqtt/[...]` would allow clients to connect at paths like\n`mqtt/org1` or `mqtt/group2`, etc.\n\nNOTE: An unmatched path will cause the client to be rejected immediately at the HTTP layer,\nmeaning it will not be traceable at the MQTT layer.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-mqtt_path",
                              "text" : "mqtt_path",
                              "type" : "String",
                              "default" : "\"/mqtt\""
                            },
                            {
                              "doc" : "Whether a WebSocket message is allowed to contain multiple MQTT packets.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-mqtt_piggyback",
                              "text" : "mqtt_piggyback",
                              "type" : "Enum(single,multiple)",
                              "default" : "multiple"
                            },
                            {
                              "doc" : "If <code>true</code>, compress WebSocket messages using <code>zlib</code>.\n\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-compress",
                              "text" : "compress",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "The timeout for waiting for the WebSocket upgrade request. After the timeout, the connection will be closed.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-idle_timeout",
                              "text" : "idle_timeout",
                              "type" : "Duration",
                              "default" : "\"7200s\""
                            },
                            {
                              "doc" : "The maximum length of a single MQTT packet.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-max_frame_size",
                              "text" : "max_frame_size",
                              "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                              "default" : "infinity"
                            },
                            {
                              "doc" : "If <code>true</code>, the server will return an error when\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\n <br/>Note: WeChat applet needs to disable this verification.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-fail_if_no_subprotocol",
                              "text" : "fail_if_no_subprotocol",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Comma-separated list of supported subprotocols.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-supported_subprotocols",
                              "text" : "supported_subprotocols",
                              "type" : "String",
                              "default" : "\"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5\""
                            },
                            {
                              "doc" : "If <code>true</code>, <code>origin</code> HTTP header will be\n validated against the list of allowed origins configured in <code>check_origins</code>\n parameter.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-check_origin_enable",
                              "text" : "check_origin_enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "If <code>false</code> and <code>check_origin_enable</code> is\n <code>true</code>, the server will reject requests that don't have <code>origin</code>\n HTTP header.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-allow_origin_absence",
                              "text" : "allow_origin_absence",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "List of allowed origins.<br/>See <code>check_origin_enable</code>.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-check_origins",
                              "text" : "check_origins",
                              "type" : "String",
                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                            },
                            {
                              "doc" : "The HTTP request header that carries the original client's IP address, EMQX will take the leftmost IP in the header as the original client's IP.\n\nThis option is typically used when EMQX is deployed behind a WebSocket proxy.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-proxy_address_header",
                              "text" : "proxy_address_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-for\""
                            },
                            {
                              "doc" : "The HTTP request header that carries the original client's source port, EMQX will take the leftmost port in the header as the original client's source port.\n\nThis option is typically used when EMQX is deployed behind a WebSocket proxy.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-proxy_port_header",
                              "text" : "proxy_port_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-port\""
                            },
                            {
                              "refs" : [
                                {
                                  "doc" : "Compression options.",
                                  "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts",
                                  "fields" : [
                                    {
                                      "doc" : "Compression level.",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-level",
                                      "text" : "level",
                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                    },
                                    {
                                      "doc" : "Specifies the size of the compression state.<br/>\nLower values decrease memory usage per connection.",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-mem_level",
                                      "text" : "mem_level",
                                      "type" : "Integer(1..9)",
                                      "default" : "8"
                                    },
                                    {
                                      "doc" : "Specifies the compression strategy.",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-strategy",
                                      "text" : "strategy",
                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                      "default" : "default"
                                    },
                                    {
                                      "doc" : "Takeover means the compression state is retained between server messages.",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_context_takeover",
                                      "text" : "server_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "doc" : "Takeover means the compression state is retained between client messages.",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_context_takeover",
                                      "text" : "client_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "doc" : "Specifies the size of the compression context for the server.",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_max_window_bits",
                                      "text" : "server_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    },
                                    {
                                      "doc" : "Specifies the size of the compression context for the client.",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_max_window_bits",
                                      "text" : "client_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    }
                                  ],
                                  "text" : "deflate_opts"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts",
                              "text" : "deflate_opts",
                              "type" : "Struct(deflate_opts)"
                            },
                            {
                              "doc" : "Whether to verify that the payload of `text` and `close` frames is valid UTF-8. Disabling it can save resources and improve performance.",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-validate_utf8",
                              "text" : "validate_utf8",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "text" : "ws_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket",
                      "text" : "websocket",
                      "type" : "Struct(ws_opts)"
                    }
                  ],
                  "text" : "mqtt_ws_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-ws",
              "text" : "ws",
              "type" : "Map($name->OneOf(Struct(mqtt_ws_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc" : "HTTPS websocket listeners.",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over WebSocket/SSL listener.",
                  "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener",
                  "fields" : [
                    {
                      "doc" : "IP address and port for the listening socket.",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8084"
                    },
                    {
                      "doc" : "The size of the listener's receiving pool.",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message\nis delivered to the subscriber. The mountpoint is a way that users can use\nto implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint`\nset to `some_tenant`, then the client actually subscribes to the topic\n`some_tenant/t`. Similarly, if another client B (connected to the same listener\nas the client A) sends a message to topic `t`, the message is routed\nto all the clients subscribed `some_tenant/t`, so client A will receive the\nmessage, with topic name `t`.<br/>\nSet to `\"\"` to disable the feature.<br/>\n\nVariables in mountpoint string:\n  - <code>${clientid}</code>: clientid\n  - <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "Used to limit the rate at which the current listener accepts connections.\n\nOnce the limit is reached, EMQX will pause fetching connections from the Accept queue, thereby delaying or rejecting new connections.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "Used to limit the number of messages a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be delayed.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be delayed.",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "Used to limit the number of bytes a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be delayed.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be delayed.",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses. The rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-access_rules",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "doc" : "Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-proxy_protocol",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP, this option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\n\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-proxy_protocol_timeout",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "TCP listener options.",
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-active_n",
                              "text" : "active_n",
                              "type" : "Integer(0..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-backlog",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Close the connection if send timeout.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-buffer",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "The TCP_NODELAY flag for the connections.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The SO_REUSEADDR flag for the connections.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none'",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-keepalive",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Socket options for WebSocket/SSL connections.",
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-certfile",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-dhfile",
                              "text" : "dhfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-fail_if_no_peer_cert",
                              "text" : "fail_if_no_peer_cert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-honor_cipher_order",
                              "text" : "honor_cipher_order",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-client_renegotiation",
                              "text" : "client_renegotiation",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-handshake_timeout",
                              "text" : "handshake_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "listener_wss_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_wss_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "WebSocket listener options.",
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts",
                          "fields" : [
                            {
                              "doc" : "WebSocket's MQTT protocol path. By default, the full URL for the WebSocket client to connect is:\n`ws://{host}:{port}/mqtt`.\nAppend `/[...]` to the end of the path to make EMQX accept any subpath.\nFor example, specifying `mqtt/[...]` would allow clients to connect at paths like\n`mqtt/org1` or `mqtt/group2`, etc.\n\nNOTE: An unmatched path will cause the client to be rejected immediately at the HTTP layer,\nmeaning it will not be traceable at the MQTT layer.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-mqtt_path",
                              "text" : "mqtt_path",
                              "type" : "String",
                              "default" : "\"/mqtt\""
                            },
                            {
                              "doc" : "Whether a WebSocket message is allowed to contain multiple MQTT packets.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-mqtt_piggyback",
                              "text" : "mqtt_piggyback",
                              "type" : "Enum(single,multiple)",
                              "default" : "multiple"
                            },
                            {
                              "doc" : "If <code>true</code>, compress WebSocket messages using <code>zlib</code>.\n\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-compress",
                              "text" : "compress",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "The timeout for waiting for the WebSocket upgrade request. After the timeout, the connection will be closed.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-idle_timeout",
                              "text" : "idle_timeout",
                              "type" : "Duration",
                              "default" : "\"7200s\""
                            },
                            {
                              "doc" : "The maximum length of a single MQTT packet.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-max_frame_size",
                              "text" : "max_frame_size",
                              "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                              "default" : "infinity"
                            },
                            {
                              "doc" : "If <code>true</code>, the server will return an error when\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\n <br/>Note: WeChat applet needs to disable this verification.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-fail_if_no_subprotocol",
                              "text" : "fail_if_no_subprotocol",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Comma-separated list of supported subprotocols.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-supported_subprotocols",
                              "text" : "supported_subprotocols",
                              "type" : "String",
                              "default" : "\"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5\""
                            },
                            {
                              "doc" : "If <code>true</code>, <code>origin</code> HTTP header will be\n validated against the list of allowed origins configured in <code>check_origins</code>\n parameter.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-check_origin_enable",
                              "text" : "check_origin_enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "If <code>false</code> and <code>check_origin_enable</code> is\n <code>true</code>, the server will reject requests that don't have <code>origin</code>\n HTTP header.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-allow_origin_absence",
                              "text" : "allow_origin_absence",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "List of allowed origins.<br/>See <code>check_origin_enable</code>.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-check_origins",
                              "text" : "check_origins",
                              "type" : "String",
                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                            },
                            {
                              "doc" : "The HTTP request header that carries the original client's IP address, EMQX will take the leftmost IP in the header as the original client's IP.\n\nThis option is typically used when EMQX is deployed behind a WebSocket proxy.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-proxy_address_header",
                              "text" : "proxy_address_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-for\""
                            },
                            {
                              "doc" : "The HTTP request header that carries the original client's source port, EMQX will take the leftmost port in the header as the original client's source port.\n\nThis option is typically used when EMQX is deployed behind a WebSocket proxy.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-proxy_port_header",
                              "text" : "proxy_port_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-port\""
                            },
                            {
                              "refs" : [
                                {
                                  "doc" : "Compression options.",
                                  "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts",
                                  "fields" : [
                                    {
                                      "doc" : "Compression level.",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-level",
                                      "text" : "level",
                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                    },
                                    {
                                      "doc" : "Specifies the size of the compression state.<br/>\nLower values decrease memory usage per connection.",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-mem_level",
                                      "text" : "mem_level",
                                      "type" : "Integer(1..9)",
                                      "default" : "8"
                                    },
                                    {
                                      "doc" : "Specifies the compression strategy.",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-strategy",
                                      "text" : "strategy",
                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                      "default" : "default"
                                    },
                                    {
                                      "doc" : "Takeover means the compression state is retained between server messages.",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_context_takeover",
                                      "text" : "server_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "doc" : "Takeover means the compression state is retained between client messages.",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_context_takeover",
                                      "text" : "client_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "doc" : "Specifies the size of the compression context for the server.",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_max_window_bits",
                                      "text" : "server_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    },
                                    {
                                      "doc" : "Specifies the size of the compression context for the client.",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_max_window_bits",
                                      "text" : "client_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    }
                                  ],
                                  "text" : "deflate_opts"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts",
                              "text" : "deflate_opts",
                              "type" : "Struct(deflate_opts)"
                            },
                            {
                              "doc" : "Whether to verify that the payload of `text` and `close` frames is valid UTF-8. Disabling it can save resources and improve performance.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-validate_utf8",
                              "text" : "validate_utf8",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "text" : "ws_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket",
                      "text" : "websocket",
                      "type" : "Struct(ws_opts)"
                    }
                  ],
                  "text" : "mqtt_wss_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-wss",
              "text" : "wss",
              "type" : "Map($name->OneOf(Struct(mqtt_wss_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc" : "QUIC listeners.",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over QUIC listener.",
                  "hash" : "T-listeners-S-listeners-quic-S-mqtt_quic_listener",
                  "fields" : [
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br/>\n\nNOTE: QUIC listener supports only 'tlsv1.3' ciphers",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256]"
                    },
                    {
                      "doc" : "TLS options for QUIC transport",
                      "refs" : [
                        {
                          "doc" : "TLS options for QUIC transport.",
                          "hash" : "T-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-certfile",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-password",
                              "text" : "password",
                              "type" : "String"
                            }
                          ],
                          "text" : "listener_quic_ssl_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_quic_ssl_opts)"
                    },
                    {
                      "doc" : "IP address and port for the listening socket.",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "14567"
                    },
                    {
                      "doc" : "The size of the listener's receiving pool.",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message\nis delivered to the subscriber. The mountpoint is a way that users can use\nto implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint`\nset to `some_tenant`, then the client actually subscribes to the topic\n`some_tenant/t`. Similarly, if another client B (connected to the same listener\nas the client A) sends a message to topic `t`, the message is routed\nto all the clients subscribed `some_tenant/t`, so client A will receive the\nmessage, with topic name `t`.<br/>\nSet to `\"\"` to disable the feature.<br/>\n\nVariables in mountpoint string:\n  - <code>${clientid}</code>: clientid\n  - <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "Used to limit the rate at which the current listener accepts connections.\n\nOnce the limit is reached, EMQX will pause fetching connections from the Accept queue, thereby delaying or rejecting new connections.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "Used to limit the number of messages a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be delayed.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be delayed.",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "Used to limit the number of bytes a single client can send to EMQX per second.\n\nOnce the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be delayed.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be delayed.",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    }
                  ],
                  "text" : "mqtt_quic_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-quic",
              "text" : "quic",
              "type" : "Map($name->OneOf(Struct(mqtt_quic_listener),String(\"marked_for_deletion\")))"
            }
          ],
          "text" : "listeners"
        }
      ],
      "hash" : "V-listeners",
      "text" : "listeners",
      "type" : "Struct(listeners)"
    },
    {
      "doc" : "Global MQTT configuration.\nThe configs here work as default values which can be overridden in <code>zone</code> configs",
      "refs" : [
        {
          "doc" : "Global MQTT configuration.",
          "hash" : "T-mqtt-S-mqtt",
          "fields" : [
            {
              "doc" : "Configure the duration of time that a connection can remain idle (i.e., without any data transfer) before being:\n  - Automatically disconnected  if no CONNECT package is received from the client yet.\n  - Put into hibernation mode to save resources if some CONNECT packages are already received.\nNote: Please set the parameter with caution as long idle time will lead to resource waste.",
              "hash" : "V-mqtt-S-mqtt-idle_timeout",
              "text" : "idle_timeout",
              "type" : "OneOf(String(\"infinity\"),Duration)",
              "default" : "\"15s\""
            },
            {
              "doc" : "Maximum MQTT packet size allowed. Default: 1 MB, Maximum: 256 MB<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "hash" : "V-mqtt-S-mqtt-max_packet_size",
              "text" : "max_packet_size",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "Maximum allowed length of MQTT Client ID.",
              "hash" : "V-mqtt-S-mqtt-max_clientid_len",
              "text" : "max_clientid_len",
              "type" : "Integer(23..65535)",
              "default" : "65535"
            },
            {
              "doc" : "Maximum topic levels allowed.",
              "hash" : "V-mqtt-S-mqtt-max_topic_levels",
              "text" : "max_topic_levels",
              "type" : "Integer(1..65535)",
              "default" : "128"
            },
            {
              "doc" : "Maximum topic alias, 0 means no topic alias supported.",
              "hash" : "V-mqtt-S-mqtt-max_topic_alias",
              "text" : "max_topic_alias",
              "type" : "Integer(0..65535)",
              "default" : "65535"
            },
            {
              "doc" : "Whether to enable support for MQTT retained message.",
              "hash" : "V-mqtt-S-mqtt-retain_available",
              "text" : "retain_available",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "Whether to enable support for MQTT wildcard subscription.",
              "hash" : "V-mqtt-S-mqtt-wildcard_subscription",
              "text" : "wildcard_subscription",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "Whether to enable support for MQTT shared subscription.",
              "hash" : "V-mqtt-S-mqtt-shared_subscription",
              "text" : "shared_subscription",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "Dispatch strategy for shared subscription.\n - `random`: Randomly select a subscriber for dispatch;\n - `round_robin`: Clients in a shared subscription group will consume messages in turn, and the progress of the loop is recorded independently in each publisher, so two adjacent messages from **different publishers** may be consumed by the same client in the subscription group;\n - `round_robin_per_group`: Clients in a shared subscription group will consume messages in turn, and the progress of the loop is recorded independently in each node, so two adjacent messages from **different nodes** may be consumed by the same client in the subscription group;\n - `local`: Randomly select a subscriber on the current node, if there are no subscribers on the current node, then randomly select within the cluster;\n - `sticky`: Continuously dispatch messages to the initially selected subscriber until their session ends;\n - `hash_clientid`: Hash the publisher's client ID to select a subscriber;\n - `hash_topic`: Hash the publishing topic to select a subscriber.",
              "hash" : "V-mqtt-S-mqtt-shared_subscription_strategy",
              "text" : "shared_subscription_strategy",
              "type" : "Enum(random,round_robin,round_robin_per_group,sticky,local,hash_topic,hash_clientid)",
              "default" : "round_robin"
            },
            {
              "doc" : "Whether to enable support for MQTT exclusive subscription.",
              "hash" : "V-mqtt-S-mqtt-exclusive_subscription",
              "text" : "exclusive_subscription",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Whether the messages sent by the MQTT v3.1.1/v3.1.0 client will be looped back to the publisher itself, similar to <code>No Local</code> in MQTT 5.0.",
              "hash" : "V-mqtt-S-mqtt-ignore_loop_deliver",
              "text" : "ignore_loop_deliver",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Whether to parse MQTT messages in strict mode.\nIn strict mode, invalid utf8 strings in for example client ID, topic name, etc. will cause the client to be disconnected.",
              "hash" : "V-mqtt-S-mqtt-strict_mode",
              "text" : "strict_mode",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "UTF-8 string, for creating the response topic, for example, if set to <code>reqrsp/</code>, the publisher/subscriber will communicate using the topic prefix <code>reqrsp/</code>.\nTo disable this feature, input <code>\"\"</code> in the text box below. Only applicable to MQTT 5.0 clients.",
              "hash" : "V-mqtt-S-mqtt-response_information",
              "text" : "response_information",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "doc" : "The keep alive duration required by EMQX. To use the setting from the client side, choose disabled from the drop-down list. Only applicable to MQTT 5.0 clients.",
              "hash" : "V-mqtt-S-mqtt-server_keepalive",
              "text" : "server_keepalive",
              "type" : "OneOf(Integer(1..+inf),String(\"disabled\"))",
              "default" : "disabled"
            },
            {
              "doc" : "Keep-Alive Timeout = Keep-Alive interval × Keep-Alive Multiplier.\nThe default value 1.5 is following the MQTT 5.0 specification. This multiplier is adjustable, providing system administrators flexibility for tailoring to their specific needs. For instance, if a client's 10-second Keep-Alive interval PINGREQ gets delayed by an extra 10 seconds, changing the multiplier to 2 lets EMQX tolerate this delay.",
              "hash" : "V-mqtt-S-mqtt-keepalive_multiplier",
              "text" : "keepalive_multiplier",
              "type" : "Number",
              "default" : "1.5"
            },
            {
              "doc" : "The frequency of checking for incoming MQTT packets determines how often the server will check for new MQTT packets.\nIf a certain amount of time passes without any packets being sent from the client, this time will be added up.\nOnce the accumulated time exceeds `keepalive-interval * keepalive-multiplier`, the connection will be terminated.\nThe default is set to 30 seconds, with a minimum value of 1 second and a maximum value of `keepalive-interval / 2`.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-mqtt-S-mqtt-keepalive_check_interval",
              "text" : "keepalive_check_interval",
              "type" : "Duration",
              "default" : "\"30s\""
            },
            {
              "doc" : "Retry interval for QoS 1/2 message delivering.",
              "hash" : "V-mqtt-S-mqtt-retry_interval",
              "text" : "retry_interval",
              "type" : "OneOf(String(\"infinity\"),Duration)",
              "default" : "infinity"
            },
            {
              "doc" : "Whether to use Username as Client ID.\nThis setting takes effect later than `peer_cert_as_username` and `peer_cert_as_clientid`.",
              "hash" : "V-mqtt-S-mqtt-use_username_as_clientid",
              "text" : "use_username_as_clientid",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Use the CN, DN field in the peer certificate or the entire certificate content as Username. Only works for the TLS connection.\nSupported configurations are the following:\n- <code>cn</code>: CN field of the certificate\n- <code>dn</code>: DN field of the certificate\n- <code>crt</code>: Content of the <code>DER</code> or <code>PEM</code> certificate\n- <code>pem</code>: Convert <code>DER</code> certificate content to <code>PEM</code> format and use as Username\n- <code>md5</code>: MD5 value of the <code>DER</code> or <code>PEM</code> certificate",
              "hash" : "V-mqtt-S-mqtt-peer_cert_as_username",
              "text" : "peer_cert_as_username",
              "type" : "Enum(disabled,cn,dn,crt,pem,md5)",
              "default" : "disabled"
            },
            {
              "doc" : "Use the CN, DN field in the peer certificate or the entire certificate content as Client ID. Only works for the TLS connection.\nSupported configurations are the following:\n- <code>cn</code>: CN field of the certificate\n- <code>dn</code>: DN field of the certificate\n- <code>crt</code>: <code>DER</code> or <code>PEM</code> certificate\n- <code>pem</code>: Convert <code>DER</code> certificate content to <code>PEM</code> format and use as Client ID\n- <code>md5</code>: MD5 value of the <code>DER</code> or <code>PEM</code> certificate",
              "hash" : "V-mqtt-S-mqtt-peer_cert_as_clientid",
              "text" : "peer_cert_as_clientid",
              "type" : "Enum(disabled,cn,dn,crt,pem,md5)",
              "default" : "disabled"
            },
            {
              "doc" : "Specify how to initialize client attributes.\nEach client attribute can be initialized as `client_attrs.{NAME}`,\nwhere `{NAME}` is the name of the attribute specified in the config field `set_as_attr`.\nThe initialized client attribute will be stored in the `client_attrs` property with the specified name,\nand can be used as a placeholder in a template for authentication and authorization.\nFor example, use `${client_attrs.alias}` to render an HTTP POST body when `set_as_attr = alias`,\nor render listener config `moutpoint = devices/${client_attrs.alias}/` to initialize a per-client topic namespace.",
              "refs" : [
                {
                  "doc" : "Specify how to initialize client attributes.\nEach client attribute can be initialized as `client_attrs.{NAME}`,\nwhere `{NAME}` is the name of the attribute specified in the config field `set_as_attr`.\nThe initialized client attribute will be stored in the `client_attrs` property with the specified name,\nand can be used as a placeholder in a template for authentication and authorization.\nFor example, use `${client_attrs.alias}` to render an HTTP POST body when `set_as_attr = alias`,\nor render listener config `moutpoint = devices/${client_attrs.alias}/` to initialize a per-client topic namespace.",
                  "hash" : "T-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init",
                  "fields" : [
                    {
                      "doc" : "A one line expression to evaluate a set of predefined string functions (like in the rule engine SQL statements).\nThe expression can be a function call with nested calls as its arguments, or direct variable reference.\nSo far, it does not provide user-defined variable binding (like `var a=1`) or user-defined functions.\nAs an example, to extract the prefix of client ID delimited by a dot: `nth(1, tokens(clientid, '.'))`.\n\nThe variables pre-bound variables are:\n- `cn`: Client's TLS certificate common name.\n- `dn`: Client's TLS certificate distinguished name (the subject).\n- `clientid`: MQTT Client ID.\n- `username`: MQTT Client's username.\n- `user_property.{NAME}`: User properties in the CONNECT packet.\n\nYou can read more about variform expressions in EMQX docs.",
                      "hash" : "V-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init-expression",
                      "text" : "expression",
                      "type" : "String"
                    },
                    {
                      "doc" : "The name of the client attribute extracted from the client data.\nThe extracted attribute will be stored in the `client_attrs` property with this name.",
                      "hash" : "V-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init-set_as_attr",
                      "text" : "set_as_attr",
                      "type" : "String"
                    }
                  ],
                  "text" : "client_attrs_init"
                }
              ],
              "hash" : "V-mqtt-S-mqtt-client_attrs_init",
              "text" : "client_attrs_init",
              "type" : "Array(Struct(client_attrs_init))",
              "default" : "[]"
            },
            {
              "doc" : "Specifies how long the session will expire after the connection is disconnected, only for non-MQTT 5.0 connections.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-mqtt-S-mqtt-session_expiry_interval",
              "text" : "session_expiry_interval",
              "type" : "Duration",
              "default" : "\"2h\""
            },
            {
              "doc" : "The expiry interval of MQTT messages. For MQTT 5.0 clients, this configuration will only take effect when the `Message-Expiry-Interval` property is not set in the message; otherwise, the value of the `Message-Expiry-Interval` property will be used. For MQTT versions older than 5.0, this configuration will always take effect. Please note that setting `message_expiry_interval` greater than `session_expiry_interval` is meaningless, as all messages will be cleared when the session expires.",
              "hash" : "V-mqtt-S-mqtt-message_expiry_interval",
              "text" : "message_expiry_interval",
              "type" : "OneOf(Duration,String(\"infinity\"))",
              "default" : "infinity"
            },
            {
              "doc" : "For each publisher session, the maximum number of outstanding QoS 2 messages pending on the client to send PUBREL. After reaching this limit, new QoS 2 PUBLISH requests will be rejected with `147(0x93)` until either PUBREL is received or timed out.",
              "hash" : "V-mqtt-S-mqtt-max_awaiting_rel",
              "text" : "max_awaiting_rel",
              "type" : "OneOf(Integer(0..+inf),String(\"infinity\"))",
              "default" : "100"
            },
            {
              "doc" : "Maximum QoS allowed.",
              "hash" : "V-mqtt-S-mqtt-max_qos_allowed",
              "text" : "max_qos_allowed",
              "type" : "Integer(0..2)",
              "default" : "2"
            },
            {
              "doc" : "Topic priority list. Prioritize messages in the message queue by topic. The priority range is `[1, 255]`.\n\nThe larger the value, the higher the priority. Messages with higher priority will be sent first.\n\nTopics not in this list will use the default priority (specified by `mqueue_default_priority`).\n\nBy default, this list is empty, which means all topics have the same priority.\n\nNote: commas and equal signs are not supported in topic names.\n\nFor example, if you want `topic/1` to have a higher priority than `topic/2`, you can configure it like this:\n\n`mqueue_priorities: {\\\"topic/1\\\": 10, \\\"topic/2\\\": 8}`",
              "hash" : "V-mqtt-S-mqtt-mqueue_priorities",
              "text" : "mqueue_priorities",
              "type" : "OneOf(String(\"disabled\"),Map)",
              "default" : "disabled"
            },
            {
              "doc" : "Default topic priority, which will be used by topics not in <code>Topic Priorities</code> (<code>mqueue_priorities</code>).",
              "hash" : "V-mqtt-S-mqtt-mqueue_default_priority",
              "text" : "mqueue_default_priority",
              "type" : "Enum(highest,lowest)",
              "default" : "lowest"
            },
            {
              "doc" : "Specifies whether to store QoS 0 messages in the message queue while the connection is down but the session remains.",
              "hash" : "V-mqtt-S-mqtt-mqueue_store_qos0",
              "text" : "mqueue_store_qos0",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "Maximum queue length. Enqueued messages when persistent client disconnected, or inflight window is full.",
              "hash" : "V-mqtt-S-mqtt-max_mqueue_len",
              "text" : "max_mqueue_len",
              "type" : "OneOf(Integer(0..+inf),String(\"infinity\"))",
              "default" : "1000"
            },
            {
              "doc" : "Maximum number of QoS 1 and QoS 2 messages that are allowed to be delivered simultaneously before completing the acknowledgment.",
              "hash" : "V-mqtt-S-mqtt-max_inflight",
              "text" : "max_inflight",
              "type" : "Integer(1..65535)",
              "default" : "32"
            },
            {
              "doc" : "Maximum number of subscriptions allowed per client.",
              "hash" : "V-mqtt-S-mqtt-max_subscriptions",
              "text" : "max_subscriptions",
              "type" : "OneOf(Integer(1..inf),String(\"infinity\"))",
              "default" : "infinity"
            },
            {
              "doc" : "Force upgrade of QoS level according to subscription.",
              "hash" : "V-mqtt-S-mqtt-upgrade_qos",
              "text" : "upgrade_qos",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "For client to broker QoS 2 message, the time limit for the broker to wait before the `PUBREL` message is received. The wait is aborted after timed out, meaning the packet ID is freed for new `PUBLISH` requests. Receiving a stale `PUBREL` causes a warning level log. Note, the message is delivered to subscribers before entering the wait for PUBREL.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-mqtt-S-mqtt-await_rel_timeout",
              "text" : "await_rel_timeout",
              "type" : "Duration",
              "default" : "\"300s\""
            }
          ],
          "text" : "mqtt"
        }
      ],
      "hash" : "V-mqtt",
      "text" : "mqtt",
      "type" : "Struct(mqtt)"
    },
    {
      "doc" : "Default authentication configs for all MQTT listeners.\n\nFor per-listener overrides see <code>authentication</code> in listener configs\n\nThis option can be configured with:\n<ul>\n  <li><code>[]</code>: The default value, it allows *ALL* logins</li>\n  <li>one: For example <code>{enable:true,backend:\"built_in_database\",mechanism=\"password_based\"}</code></li>\n  <li>chain: An array of structs.</li>\n</ul>\n\nWhen a chain is configured, the login credentials are checked against the backends per the configured order, until an 'allow' or 'deny' decision can be made.\n\nIf there is no decision after a full chain exhaustion, the login is rejected.",
      "refs" : [
        {
          "doc" : "Configuration of authenticator using built-in database as data source.",
          "hash" : "T-authentication-S-builtin_db",
          "fields" : [
            {
              "doc" : "Options for password hash creation and verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm (for DB backends with write capability).",
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    },
                    {
                      "doc" : "Work factor for BCRYPT password generation.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw-salt_rounds",
                      "text" : "salt_rounds",
                      "type" : "Integer(5..10)",
                      "default" : "10"
                    }
                  ],
                  "text" : "bcrypt_rw"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-builtin_db-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt_rw),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-builtin_db-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-builtin_db-backend",
              "text" : "backend",
              "type" : "String(\"built_in_database\")"
            },
            {
              "doc" : "Specify whether to use `clientid` or `username` for authentication.",
              "hash" : "V-authentication-S-builtin_db-user_id_type",
              "text" : "user_id_type",
              "type" : "Enum(clientid,username)",
              "default" : "username"
            },
            {
              "doc" : "The bootstrap file imports users into the built-in database.\nIt will not import a user ID that already exists in the database.\nThe file content format is determined by `bootstrap_type`.",
              "hash" : "V-authentication-S-builtin_db-bootstrap_file",
              "text" : "bootstrap_file",
              "type" : "String",
              "default" : "\"${EMQX_ETC_DIR}/auth-built-in-db-bootstrap.csv\""
            },
            {
              "doc" : "Specify which type of content the bootstrap file has.\n\n- **`plain`**:\n  - Expected data fields: `user_id`, `password`, `is_superuser`\n  - `user_id`: Can be Client ID or username, depending on built-in database authentication's `user_id_type` config.\n  - `password`: User's plaintext password.\n  - `is_superuser`: Boolean, user's administrative status.\n\n- **`hash`**:\n  - Expected data fields: `user_id`,`password_hash`,`salt`,`is_superuser`\n  - Definitions similar to `plain` type, with `password_hash` and `salt` added for security.\n\nThe content can be either in CSV, or JSON format.\n\nHere is a CSV example: `user_id,password_hash,salt,is_superuser\\nmy_user,b6c743545a7817ae8c8f624371d5f5f0373234bb0ff36b8ffbf19bce0e06ab75,de1024f462fb83910fd13151bd4bd235,true`\n\nAnd JSON content should be decoded into an array of objects, for example: `[{\"user_id\": \"my_user\",\"password\": \"s3cr3tp@ssw0rd\",\"is_superuser\": true}]`.\n\nThe hash string for `password_hash` depends on how `password_hash_algorithm` is configured for the built-in database authentication mechanism. For example, if it's configured as `password_hash_algorithm {name = sha256, salt_position = suffix}`, then the salt is appended to the password before hashed. Here is the equivalent Python expression: `hashlib.sha256(password + salt).hexdigest()`.",
              "hash" : "V-authentication-S-builtin_db-bootstrap_type",
              "text" : "bootstrap_type",
              "type" : "Enum(hash,plain)",
              "default" : "plain"
            }
          ],
          "text" : "builtin_db"
        },
        {
          "doc" : "Configuration of authenticator using MySQL as authentication data source.",
          "hash" : "T-authentication-S-mysql",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-mysql-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-mysql-backend",
              "text" : "backend",
              "type" : "String(\"mysql\")"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mysql-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "SQL used to query data for authentication, such as password hash.",
              "hash" : "V-authentication-S-mysql-query",
              "text" : "query",
              "type" : "String"
            },
            {
              "doc" : "Timeout for the SQL query.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-mysql-query_timeout",
              "text" : "query_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MySQL default port 3306 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-mysql-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "Database name.",
              "hash" : "V-authentication-S-mysql-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-mysql-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-mysql-username",
              "text" : "username",
              "type" : "String",
              "default" : "root"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-mysql-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-mysql-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-mysql-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mysql-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "mysql"
        },
        {
          "doc" : "Configuration of authenticator using PostgreSQL as authentication data source.",
          "hash" : "T-authentication-S-postgresql",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-postgresql-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-postgresql-backend",
              "text" : "backend",
              "type" : "String(\"postgresql\")"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-postgresql-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "SQL used to query data for authentication, such as password hash.",
              "hash" : "V-authentication-S-postgresql-query",
              "text" : "query",
              "type" : "String"
            },
            {
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe PostgreSQL default port 5432 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-postgresql-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "Disables the usage of prepared statements in the connections.\nSome endpoints, like PGBouncer or Supabase in Transaction mode, do not\nsupport session features such as prepared statements.  For such connections,\nthis option should be enabled.",
              "hash" : "V-authentication-S-postgresql-disable_prepared_statements",
              "text" : "disable_prepared_statements",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Database name.",
              "hash" : "V-authentication-S-postgresql-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-postgresql-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-postgresql-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-postgresql-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-postgresql-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-postgresql-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-postgresql-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "postgresql"
        },
        {
          "doc" : "Configuration of authenticator using MongoDB (Standalone) as authentication data source.",
          "hash" : "T-authentication-S-mongo_single",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-mongo_single-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-mongo_single-backend",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "doc" : "Collection used to store authentication data.",
              "hash" : "V-authentication-S-mongo_single-collection",
              "text" : "collection",
              "type" : "String"
            },
            {
              "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "hash" : "V-authentication-S-mongo_single-filter",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "Document field that contains password hash.",
              "hash" : "V-authentication-S-mongo_single-password_hash_field",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "doc" : "Document field that contains the password salt.",
              "hash" : "V-authentication-S-mongo_single-salt_field",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "doc" : "Document field that defines if the user has superuser privileges.",
              "hash" : "V-authentication-S-mongo_single-is_superuser_field",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "Standalone instance. Must be set to 'single' when MongoDB server is running in standalone mode.",
              "hash" : "V-authentication-S-mongo_single-mongo_type",
              "text" : "mongo_type",
              "type" : "String(\"single\")",
              "default" : "single"
            },
            {
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-mongo_single-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "Write mode.",
              "hash" : "V-authentication-S-mongo_single-w_mode",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "doc" : "Use DNS SRV record.",
              "hash" : "V-authentication-S-mongo_single-srv_record",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-mongo_single-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-mongo_single-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-mongo_single-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
              "hash" : "V-authentication-S-mongo_single-use_legacy_protocol",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "doc" : "Database name associated with the user's credentials.",
              "hash" : "V-authentication-S-mongo_single-auth_source",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "doc" : "Database name.",
              "hash" : "V-authentication-S-mongo_single-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "doc" : "Topology of MongoDB.",
                  "hash" : "T-authentication-S-mongo_single-topology-S-topology",
                  "fields" : [
                    {
                      "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-max_overflow",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-overflow_ttl",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-overflow_check_period",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-local_threshold_ms",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-connect_timeout_ms",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-socket_timeout_ms",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-server_selection_timeout_ms",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-wait_queue_timeout_ms",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-heartbeat_frequency_ms",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-min_heartbeat_frequency_ms",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-mongo_single-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "mongo_single"
        },
        {
          "doc" : "Configuration of authenticator using MongoDB (Replica Set) as authentication data source.",
          "hash" : "T-authentication-S-mongo_rs",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-mongo_rs-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-mongo_rs-backend",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "doc" : "Collection used to store authentication data.",
              "hash" : "V-authentication-S-mongo_rs-collection",
              "text" : "collection",
              "type" : "String"
            },
            {
              "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "hash" : "V-authentication-S-mongo_rs-filter",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "Document field that contains password hash.",
              "hash" : "V-authentication-S-mongo_rs-password_hash_field",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "doc" : "Document field that contains the password salt.",
              "hash" : "V-authentication-S-mongo_rs-salt_field",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "doc" : "Document field that defines if the user has superuser privileges.",
              "hash" : "V-authentication-S-mongo_rs-is_superuser_field",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "Replica set. Must be set to 'rs' when MongoDB server is running in 'replica set' mode.",
              "hash" : "V-authentication-S-mongo_rs-mongo_type",
              "text" : "mongo_type",
              "type" : "String(\"rs\")",
              "default" : "rs"
            },
            {
              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-mongo_rs-servers",
              "text" : "servers",
              "type" : "String"
            },
            {
              "doc" : "Write mode.",
              "hash" : "V-authentication-S-mongo_rs-w_mode",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "doc" : "Read mode.",
              "hash" : "V-authentication-S-mongo_rs-r_mode",
              "text" : "r_mode",
              "type" : "Enum(master,slave_ok)",
              "default" : "master"
            },
            {
              "doc" : "Name of the replica set.",
              "hash" : "V-authentication-S-mongo_rs-replica_set_name",
              "text" : "replica_set_name",
              "type" : "String"
            },
            {
              "doc" : "Use DNS SRV record.",
              "hash" : "V-authentication-S-mongo_rs-srv_record",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-mongo_rs-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-mongo_rs-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-mongo_rs-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
              "hash" : "V-authentication-S-mongo_rs-use_legacy_protocol",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "doc" : "Database name associated with the user's credentials.",
              "hash" : "V-authentication-S-mongo_rs-auth_source",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "doc" : "Database name.",
              "hash" : "V-authentication-S-mongo_rs-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "doc" : "Topology of MongoDB.",
                  "hash" : "T-authentication-S-mongo_rs-topology-S-topology",
                  "fields" : [
                    {
                      "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-max_overflow",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-overflow_ttl",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-overflow_check_period",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-local_threshold_ms",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-connect_timeout_ms",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-socket_timeout_ms",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-server_selection_timeout_ms",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-wait_queue_timeout_ms",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-heartbeat_frequency_ms",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-min_heartbeat_frequency_ms",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-mongo_rs-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "mongo_rs"
        },
        {
          "doc" : "Configuration of authenticator using MongoDB (Sharded Cluster) as authentication data source.",
          "hash" : "T-authentication-S-mongo_sharded",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-mongo_sharded-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-mongo_sharded-backend",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "doc" : "Collection used to store authentication data.",
              "hash" : "V-authentication-S-mongo_sharded-collection",
              "text" : "collection",
              "type" : "String"
            },
            {
              "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "hash" : "V-authentication-S-mongo_sharded-filter",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "Document field that contains password hash.",
              "hash" : "V-authentication-S-mongo_sharded-password_hash_field",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "doc" : "Document field that contains the password salt.",
              "hash" : "V-authentication-S-mongo_sharded-salt_field",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "doc" : "Document field that defines if the user has superuser privileges.",
              "hash" : "V-authentication-S-mongo_sharded-is_superuser_field",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "Sharded cluster. Must be set to 'sharded' when MongoDB server is running in 'sharded' mode.",
              "hash" : "V-authentication-S-mongo_sharded-mongo_type",
              "text" : "mongo_type",
              "type" : "String(\"sharded\")",
              "default" : "sharded"
            },
            {
              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-mongo_sharded-servers",
              "text" : "servers",
              "type" : "String"
            },
            {
              "doc" : "Write mode.",
              "hash" : "V-authentication-S-mongo_sharded-w_mode",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "doc" : "Use DNS SRV record.",
              "hash" : "V-authentication-S-mongo_sharded-srv_record",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-mongo_sharded-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-mongo_sharded-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-mongo_sharded-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
              "hash" : "V-authentication-S-mongo_sharded-use_legacy_protocol",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "doc" : "Database name associated with the user's credentials.",
              "hash" : "V-authentication-S-mongo_sharded-auth_source",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "doc" : "Database name.",
              "hash" : "V-authentication-S-mongo_sharded-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "doc" : "Topology of MongoDB.",
                  "hash" : "T-authentication-S-mongo_sharded-topology-S-topology",
                  "fields" : [
                    {
                      "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-max_overflow",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-overflow_ttl",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-overflow_check_period",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-local_threshold_ms",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-connect_timeout_ms",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-socket_timeout_ms",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-server_selection_timeout_ms",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-wait_queue_timeout_ms",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-heartbeat_frequency_ms",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-mongo_sharded-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "mongo_sharded"
        },
        {
          "doc" : "Configuration of authenticator using Redis (Standalone) as authentication data source.",
          "hash" : "T-authentication-S-redis_single",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-redis_single-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-redis_single-backend",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "doc" : "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "hash" : "V-authentication-S-redis_single-cmd",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_single-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-redis_single-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "Single mode. Must be set to 'single' when Redis server is running in single mode.",
              "hash" : "V-authentication-S-redis_single-redis_type",
              "text" : "redis_type",
              "type" : "String(\"single\")",
              "default" : "single"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-redis_single-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-redis_single-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-redis_single-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Redis database ID.",
              "hash" : "V-authentication-S-redis_single-database",
              "text" : "database",
              "type" : "Integer(0..+inf)",
              "default" : "0"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-redis_single-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-redis_single-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_single-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "redis_single"
        },
        {
          "doc" : "Configuration of authenticator using Redis (Cluster) as authentication data source.",
          "hash" : "T-authentication-S-redis_cluster",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-redis_cluster-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-redis_cluster-backend",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "doc" : "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "hash" : "V-authentication-S-redis_cluster-cmd",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-redis_cluster-servers",
              "text" : "servers",
              "type" : "String"
            },
            {
              "doc" : "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
              "hash" : "V-authentication-S-redis_cluster-redis_type",
              "text" : "redis_type",
              "type" : "String(\"cluster\")",
              "default" : "cluster"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-redis_cluster-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-redis_cluster-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-redis_cluster-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-redis_cluster-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-redis_cluster-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_cluster-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "redis_cluster"
        },
        {
          "doc" : "Configuration of authenticator using Redis (Sentinel) as authentication data source.",
          "hash" : "T-authentication-S-redis_sentinel",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-redis_sentinel-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-redis_sentinel-backend",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "doc" : "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "hash" : "V-authentication-S-redis_sentinel-cmd",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-redis_sentinel-servers",
              "text" : "servers",
              "type" : "String"
            },
            {
              "doc" : "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
              "hash" : "V-authentication-S-redis_sentinel-redis_type",
              "text" : "redis_type",
              "type" : "String(\"sentinel\")",
              "default" : "sentinel"
            },
            {
              "doc" : "The cluster name in Redis sentinel mode.",
              "hash" : "V-authentication-S-redis_sentinel-sentinel",
              "text" : "sentinel",
              "type" : "String"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-redis_sentinel-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-redis_sentinel-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-redis_sentinel-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Redis database ID.",
              "hash" : "V-authentication-S-redis_sentinel-database",
              "text" : "database",
              "type" : "Integer(0..+inf)",
              "default" : "0"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-redis_sentinel-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-redis_sentinel-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_sentinel-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "redis_sentinel"
        },
        {
          "doc" : "Configuration of authenticator using HTTP Server as authentication service (Using GET request).",
          "hash" : "T-authentication-S-http_get",
          "fields" : [
            {
              "doc" : "HTTP request method.",
              "hash" : "V-authentication-S-http_get-method",
              "text" : "method",
              "type" : "String(\"get\")"
            },
            {
              "doc" : "List of HTTP headers (without <code>content-type</code>).",
              "hash" : "V-authentication-S-http_get-headers",
              "text" : "headers",
              "type" : "Map",
              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", keep-alive = \"timeout=30, max=1000\"}"
            },
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-http_get-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-http_get-backend",
              "text" : "backend",
              "type" : "String(\"http\")"
            },
            {
              "doc" : "URL of the HTTP server.",
              "hash" : "V-authentication-S-http_get-url",
              "text" : "url",
              "type" : "String"
            },
            {
              "doc" : "HTTP request body.",
              "hash" : "V-authentication-S-http_get-body",
              "text" : "body",
              "type" : "Map"
            },
            {
              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-http_get-request_timeout",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "Configure HTTP request parameters.",
              "refs" : [
                {
                  "doc" : "",
                  "hash" : "T-authentication-S-http_get-request-S-request",
                  "fields" : [
                    {
                      "doc" : "HTTP method.",
                      "hash" : "V-authentication-S-http_get-request-S-request-method",
                      "text" : "method",
                      "type" : "String"
                    },
                    {
                      "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "hash" : "V-authentication-S-http_get-request-S-request-path",
                      "text" : "path",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "hash" : "V-authentication-S-http_get-request-S-request-body",
                      "text" : "body",
                      "type" : "String"
                    },
                    {
                      "doc" : "List of HTTP headers.",
                      "hash" : "V-authentication-S-http_get-request-S-request-headers",
                      "text" : "headers",
                      "type" : "Map"
                    },
                    {
                      "doc" : "Max retry times if error on sending request.",
                      "hash" : "V-authentication-S-http_get-request-S-request-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-http_get-request-S-request-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "request"
                }
              ],
              "hash" : "V-authentication-S-http_get-request",
              "text" : "request",
              "type" : "Struct(request)"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-http_get-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-http_get-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "The pool size.",
              "hash" : "V-authentication-S-http_get-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-http_get-connect_timeout",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "doc" : "Deprecated since 5.0.4.",
              "hash" : "V-authentication-S-http_get-max_retries",
              "text" : "max_retries",
              "type" : "Integer(0..+inf)"
            },
            {
              "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
              "hash" : "V-authentication-S-http_get-enable_pipelining",
              "text" : "enable_pipelining",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            },
            {
              "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-http_get-retry_interval",
              "text" : "retry_interval",
              "type" : "Duration"
            }
          ],
          "text" : "http_get"
        },
        {
          "doc" : "Configuration of authenticator using HTTP Server as authentication service (Using POST request).",
          "hash" : "T-authentication-S-http_post",
          "fields" : [
            {
              "doc" : "HTTP request method.",
              "hash" : "V-authentication-S-http_post-method",
              "text" : "method",
              "type" : "String(\"post\")"
            },
            {
              "doc" : "List of HTTP Headers.",
              "hash" : "V-authentication-S-http_post-headers",
              "text" : "headers",
              "type" : "Map",
              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=30, max=1000\"}"
            },
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-http_post-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-http_post-backend",
              "text" : "backend",
              "type" : "String(\"http\")"
            },
            {
              "doc" : "URL of the HTTP server.",
              "hash" : "V-authentication-S-http_post-url",
              "text" : "url",
              "type" : "String"
            },
            {
              "doc" : "HTTP request body.",
              "hash" : "V-authentication-S-http_post-body",
              "text" : "body",
              "type" : "Map"
            },
            {
              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-http_post-request_timeout",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "Configure HTTP request parameters.",
              "refs" : [
                {
                  "doc" : "",
                  "hash" : "T-authentication-S-http_post-request-S-request",
                  "fields" : [
                    {
                      "doc" : "HTTP method.",
                      "hash" : "V-authentication-S-http_post-request-S-request-method",
                      "text" : "method",
                      "type" : "String"
                    },
                    {
                      "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "hash" : "V-authentication-S-http_post-request-S-request-path",
                      "text" : "path",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "hash" : "V-authentication-S-http_post-request-S-request-body",
                      "text" : "body",
                      "type" : "String"
                    },
                    {
                      "doc" : "List of HTTP headers.",
                      "hash" : "V-authentication-S-http_post-request-S-request-headers",
                      "text" : "headers",
                      "type" : "Map"
                    },
                    {
                      "doc" : "Max retry times if error on sending request.",
                      "hash" : "V-authentication-S-http_post-request-S-request-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-http_post-request-S-request-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "request"
                }
              ],
              "hash" : "V-authentication-S-http_post-request",
              "text" : "request",
              "type" : "Struct(request)"
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-http_post-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-http_post-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "The pool size.",
              "hash" : "V-authentication-S-http_post-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-http_post-connect_timeout",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "doc" : "Deprecated since 5.0.4.",
              "hash" : "V-authentication-S-http_post-max_retries",
              "text" : "max_retries",
              "type" : "Integer(0..+inf)"
            },
            {
              "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
              "hash" : "V-authentication-S-http_post-enable_pipelining",
              "text" : "enable_pipelining",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            },
            {
              "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-http_post-retry_interval",
              "text" : "retry_interval",
              "type" : "Duration"
            }
          ],
          "text" : "http_post"
        },
        {
          "doc" : "Configuration when the JWT for authentication is issued using the HMAC algorithm.",
          "hash" : "T-authentication-S-jwt_hmac",
          "fields" : [
            {
              "doc" : "JWT signing algorithm, Supports HMAC (configured as <code>hmac-based</code>) and RSA, ECDSA (configured as <code>public-key</code>).",
              "hash" : "V-authentication-S-jwt_hmac-algorithm",
              "text" : "algorithm",
              "type" : "Enum(hmac-based)"
            },
            {
              "doc" : "The key to verify the JWT using HMAC algorithm.",
              "hash" : "V-authentication-S-jwt_hmac-secret",
              "text" : "secret",
              "type" : "String"
            },
            {
              "doc" : "Whether secret is base64 encoded.",
              "hash" : "V-authentication-S-jwt_hmac-secret_base64_encoded",
              "text" : "secret_base64_encoded",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-jwt_hmac-mechanism",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "doc" : "The JWT claim designated for accessing ACL (Access Control List) rules can be specified,\nsuch as using the `acl` claim. A typical decoded JWT with this claim might appear as:\n`{\"username\": \"user1\", \"acl\": ...}`.\n\nSupported ACL Rule Formats:\n\n- Object Format:\n  Utilizes action types pub (publish), sub (subscribe), or all (both publish and subscribe).\n  The value is a list of topic filters.\n  Example: `{\"pub\": [\"topic1\"], \"sub\": [], \"all\": [\"${username}/#\"]}`.\n  This example signifies that the token owner can publish to topic1 and perform both publish and subscribe\n  actions on topics starting with their username.\n  Note: In this format, if no topic matches, the action is denied, and the authorization process terminates.\n\n- Array Format (resembles File-Based ACL Rules):\n  Example: `[{\"permission\": \"allow\", \"action\": \"all\", \"topic\": \"${username}/#\"}]`.\n  Additionally, the `pub` or `publish` action rules can be extended with `qos` and `retain` field,\n  and `sub` or `subscribe` action rules can be extended with a `qos` field.\n  Note: Here, if no rule matches, the action is not immediately denied.\n  The process continues to other configured authorization sources,\n  and ultimately falls back to the default permission in config `authorization.no_match`.\n\nThe ACL claim utilizes MQTT topic wildcard matching rules for publishing or subscribing.\nA special syntax for the 'subscribe' action allows the use of `eq` for an exact match.\nFor instance, `eq t/#` permits or denies subscription to `t/#`, but not to `t/1`.",
              "hash" : "V-authentication-S-jwt_hmac-acl_claim_name",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "doc" : "A list of custom claims to validate. The allowed formats are the following:\nA map where claim names are map keys and expected values are map values:\n <code>{ claim_name = \"${username}\", ...}</code>.\n\nA list of maps with <code>name</code> (claim name) and <code>value</code> (expected claim value) keys:\n <code>[{name = \"claim_name\", value = \"${username}\"}, ...]</code>.\n\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\n\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "hash" : "V-authentication-S-jwt_hmac-verify_claims",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "Disconnect the client after the token expires.",
              "hash" : "V-authentication-S-jwt_hmac-disconnect_after_expire",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "Field to take JWT from.",
              "hash" : "V-authentication-S-jwt_hmac-from",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            }
          ],
          "text" : "jwt_hmac"
        },
        {
          "doc" : "Configuration when the JWT for authentication is issued using RSA or ECDSA algorithm.",
          "hash" : "T-authentication-S-jwt_public_key",
          "fields" : [
            {
              "doc" : "JWT signing algorithm, Supports HMAC (configured as <code>hmac-based</code>) and RSA, ECDSA (configured as <code>public-key</code>).",
              "hash" : "V-authentication-S-jwt_public_key-algorithm",
              "text" : "algorithm",
              "type" : "Enum(public-key)"
            },
            {
              "doc" : "The public key used to verify the JWT.",
              "hash" : "V-authentication-S-jwt_public_key-public_key",
              "text" : "public_key",
              "type" : "String"
            },
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-jwt_public_key-mechanism",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "doc" : "The JWT claim designated for accessing ACL (Access Control List) rules can be specified,\nsuch as using the `acl` claim. A typical decoded JWT with this claim might appear as:\n`{\"username\": \"user1\", \"acl\": ...}`.\n\nSupported ACL Rule Formats:\n\n- Object Format:\n  Utilizes action types pub (publish), sub (subscribe), or all (both publish and subscribe).\n  The value is a list of topic filters.\n  Example: `{\"pub\": [\"topic1\"], \"sub\": [], \"all\": [\"${username}/#\"]}`.\n  This example signifies that the token owner can publish to topic1 and perform both publish and subscribe\n  actions on topics starting with their username.\n  Note: In this format, if no topic matches, the action is denied, and the authorization process terminates.\n\n- Array Format (resembles File-Based ACL Rules):\n  Example: `[{\"permission\": \"allow\", \"action\": \"all\", \"topic\": \"${username}/#\"}]`.\n  Additionally, the `pub` or `publish` action rules can be extended with `qos` and `retain` field,\n  and `sub` or `subscribe` action rules can be extended with a `qos` field.\n  Note: Here, if no rule matches, the action is not immediately denied.\n  The process continues to other configured authorization sources,\n  and ultimately falls back to the default permission in config `authorization.no_match`.\n\nThe ACL claim utilizes MQTT topic wildcard matching rules for publishing or subscribing.\nA special syntax for the 'subscribe' action allows the use of `eq` for an exact match.\nFor instance, `eq t/#` permits or denies subscription to `t/#`, but not to `t/1`.",
              "hash" : "V-authentication-S-jwt_public_key-acl_claim_name",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "doc" : "A list of custom claims to validate. The allowed formats are the following:\nA map where claim names are map keys and expected values are map values:\n <code>{ claim_name = \"${username}\", ...}</code>.\n\nA list of maps with <code>name</code> (claim name) and <code>value</code> (expected claim value) keys:\n <code>[{name = \"claim_name\", value = \"${username}\"}, ...]</code>.\n\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\n\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "hash" : "V-authentication-S-jwt_public_key-verify_claims",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "Disconnect the client after the token expires.",
              "hash" : "V-authentication-S-jwt_public_key-disconnect_after_expire",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "Field to take JWT from.",
              "hash" : "V-authentication-S-jwt_public_key-from",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            }
          ],
          "text" : "jwt_public_key"
        },
        {
          "doc" : "Configuration when JWTs used for authentication need to be fetched from the JWKS endpoint.",
          "hash" : "T-authentication-S-jwt_jwks",
          "fields" : [
            {
              "doc" : "Whether to use JWKS.",
              "hash" : "V-authentication-S-jwt_jwks-use_jwks",
              "text" : "use_jwks",
              "type" : "Enum(true)"
            },
            {
              "doc" : "JWKS endpoint, it's a read-only endpoint that returns the server's public key set in the JWKS format.",
              "hash" : "V-authentication-S-jwt_jwks-endpoint",
              "text" : "endpoint",
              "type" : "String"
            },
            {
              "doc" : "List of HTTP headers to send with the JWKS request.",
              "hash" : "V-authentication-S-jwt_jwks-headers",
              "text" : "headers",
              "type" : "Map",
              "default" : "{Accept = \"application/json\"}"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-jwt_jwks-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "JWKS refresh interval.",
              "hash" : "V-authentication-S-jwt_jwks-refresh_interval",
              "text" : "refresh_interval",
              "type" : "Integer",
              "default" : "300"
            },
            {
              "doc" : "SSL options.",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-jwt_jwks-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-jwt_jwks-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-jwt_jwks-mechanism",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "doc" : "The JWT claim designated for accessing ACL (Access Control List) rules can be specified,\nsuch as using the `acl` claim. A typical decoded JWT with this claim might appear as:\n`{\"username\": \"user1\", \"acl\": ...}`.\n\nSupported ACL Rule Formats:\n\n- Object Format:\n  Utilizes action types pub (publish), sub (subscribe), or all (both publish and subscribe).\n  The value is a list of topic filters.\n  Example: `{\"pub\": [\"topic1\"], \"sub\": [], \"all\": [\"${username}/#\"]}`.\n  This example signifies that the token owner can publish to topic1 and perform both publish and subscribe\n  actions on topics starting with their username.\n  Note: In this format, if no topic matches, the action is denied, and the authorization process terminates.\n\n- Array Format (resembles File-Based ACL Rules):\n  Example: `[{\"permission\": \"allow\", \"action\": \"all\", \"topic\": \"${username}/#\"}]`.\n  Additionally, the `pub` or `publish` action rules can be extended with `qos` and `retain` field,\n  and `sub` or `subscribe` action rules can be extended with a `qos` field.\n  Note: Here, if no rule matches, the action is not immediately denied.\n  The process continues to other configured authorization sources,\n  and ultimately falls back to the default permission in config `authorization.no_match`.\n\nThe ACL claim utilizes MQTT topic wildcard matching rules for publishing or subscribing.\nA special syntax for the 'subscribe' action allows the use of `eq` for an exact match.\nFor instance, `eq t/#` permits or denies subscription to `t/#`, but not to `t/1`.",
              "hash" : "V-authentication-S-jwt_jwks-acl_claim_name",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "doc" : "A list of custom claims to validate. The allowed formats are the following:\nA map where claim names are map keys and expected values are map values:\n <code>{ claim_name = \"${username}\", ...}</code>.\n\nA list of maps with <code>name</code> (claim name) and <code>value</code> (expected claim value) keys:\n <code>[{name = \"claim_name\", value = \"${username}\"}, ...]</code>.\n\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\n\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "hash" : "V-authentication-S-jwt_jwks-verify_claims",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "Disconnect the client after the token expires.",
              "hash" : "V-authentication-S-jwt_jwks-disconnect_after_expire",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "Field to take JWT from.",
              "hash" : "V-authentication-S-jwt_jwks-from",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            }
          ],
          "text" : "jwt_jwks"
        },
        {
          "doc" : "Settings for Salted Challenge Response Authentication Mechanism\n(SCRAM) authentication.",
          "hash" : "T-authentication-S-scram",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-scram-mechanism",
              "text" : "mechanism",
              "type" : "String(\"scram\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-scram-backend",
              "text" : "backend",
              "type" : "String(\"built_in_database\")"
            },
            {
              "doc" : "Hashing algorithm.",
              "hash" : "V-authentication-S-scram-algorithm",
              "text" : "algorithm",
              "type" : "Enum(sha256,sha512)",
              "default" : "sha256"
            },
            {
              "doc" : "Iteration count.",
              "hash" : "V-authentication-S-scram-iteration_count",
              "text" : "iteration_count",
              "type" : "Integer(0..+inf)",
              "default" : "4096"
            }
          ],
          "text" : "scram"
        },
        {
          "doc" : "Configuration of authenticator using LDAP as authentication data source.",
          "hash" : "T-authentication-S-ldap",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-ldap-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-ldap-backend",
              "text" : "backend",
              "type" : "String(\"ldap\")"
            },
            {
              "doc" : "Timeout for the LDAP query.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-ldap-query_timeout",
              "text" : "query_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe LDAP default port 389 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-ldap-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-ldap-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-ldap-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-ldap-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "The name of the base object entry (or possibly the root) relative to\nwhich the Search is to be performed.",
              "hash" : "V-authentication-S-ldap-base_dn",
              "text" : "base_dn",
              "type" : "String"
            },
            {
              "doc" : "The filter that defines the conditions that must be fulfilled in order\nfor the Search to match a given entry.<br>\nThe syntax of the filter follows RFC 4515 and also supports placeholders.",
              "hash" : "V-authentication-S-ldap-filter",
              "text" : "filter",
              "type" : "String",
              "default" : "\"(objectClass=mqttUser)\""
            },
            {
              "doc" : "Sets the maximum time in milliseconds that is used for each individual request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-ldap-request_timeout",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "SSL connection settings.",
                  "hash" : "T-authentication-S-ldap-ssl-S-ssl",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl"
                }
              ],
              "hash" : "V-authentication-S-ldap-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "Authentication method.",
              "refs" : [
                {
                  "doc" : "Authenticate by comparing the hashed password which was provided by the `password attribute`.",
                  "hash" : "T-authentication-S-ldap-method-S-hash_method",
                  "fields" : [
                    {
                      "doc" : "Authentication method type.",
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-type",
                      "text" : "type",
                      "type" : "Enum(hash)",
                      "default" : "hash"
                    },
                    {
                      "doc" : "Indicates which attribute is used to represent the user's password.",
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-password_attribute",
                      "text" : "password_attribute",
                      "type" : "String",
                      "default" : "userPassword"
                    },
                    {
                      "doc" : "Indicates which attribute is used to represent whether the user is a superuser.",
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-is_superuser_attribute",
                      "text" : "is_superuser_attribute",
                      "type" : "String",
                      "default" : "isSuperuser"
                    }
                  ],
                  "text" : "hash_method"
                },
                {
                  "doc" : "Authenticate by the LDAP bind operation.",
                  "hash" : "T-authentication-S-ldap-method-S-bind_method",
                  "fields" : [
                    {
                      "doc" : "Authentication method type.",
                      "hash" : "V-authentication-S-ldap-method-S-bind_method-type",
                      "text" : "type",
                      "type" : "Enum(bind)",
                      "default" : "bind"
                    },
                    {
                      "doc" : "The template for password to bind.",
                      "hash" : "V-authentication-S-ldap-method-S-bind_method-bind_password",
                      "text" : "bind_password",
                      "type" : "String",
                      "default" : "\"${password}\""
                    }
                  ],
                  "text" : "bind_method"
                }
              ],
              "hash" : "V-authentication-S-ldap-method",
              "text" : "method",
              "type" : "OneOf(Struct(hash_method),Struct(bind_method))"
            }
          ],
          "text" : "ldap"
        },
        {
          "doc" : "This is a deprecated form, and you should avoid using it.",
          "hash" : "T-authentication-S-ldap_deprecated",
          "fields" : [
            {
              "doc" : "Authentication mechanism.",
              "hash" : "V-authentication-S-ldap_deprecated-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "Backend type.",
              "hash" : "V-authentication-S-ldap_deprecated-backend",
              "text" : "backend",
              "type" : "String(\"ldap\")"
            },
            {
              "doc" : "Timeout for the LDAP query.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-ldap_deprecated-query_timeout",
              "text" : "query_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe LDAP default port 389 is used if `[:Port]` is not specified.",
              "hash" : "V-authentication-S-ldap_deprecated-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "Size of the connection pool towards the bridge target service.",
              "hash" : "V-authentication-S-ldap_deprecated-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "hash" : "V-authentication-S-ldap_deprecated-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "hash" : "V-authentication-S-ldap_deprecated-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "The name of the base object entry (or possibly the root) relative to\nwhich the Search is to be performed.",
              "hash" : "V-authentication-S-ldap_deprecated-base_dn",
              "text" : "base_dn",
              "type" : "String"
            },
            {
              "doc" : "The filter that defines the conditions that must be fulfilled in order\nfor the Search to match a given entry.<br>\nThe syntax of the filter follows RFC 4515 and also supports placeholders.",
              "hash" : "V-authentication-S-ldap_deprecated-filter",
              "text" : "filter",
              "type" : "String",
              "default" : "\"(objectClass=mqttUser)\""
            },
            {
              "doc" : "Sets the maximum time in milliseconds that is used for each individual request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-authentication-S-ldap_deprecated-request_timeout",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "doc" : "SSL connection settings.",
              "refs" : [
                {
                  "doc" : "SSL connection settings.",
                  "hash" : "T-authentication-S-ldap_deprecated-ssl-S-ssl",
                  "fields" : [
                    {
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM format private key file.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Enable or disable peer verification.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Enable TLS.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl"
                }
              ],
              "hash" : "V-authentication-S-ldap_deprecated-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "Indicates which attribute is used to represent the user's password.",
              "hash" : "V-authentication-S-ldap_deprecated-password_attribute",
              "text" : "password_attribute",
              "type" : "String",
              "default" : "userPassword"
            },
            {
              "doc" : "Indicates which attribute is used to represent whether the user is a superuser.",
              "hash" : "V-authentication-S-ldap_deprecated-is_superuser_attribute",
              "text" : "is_superuser_attribute",
              "type" : "String",
              "default" : "isSuperuser"
            }
          ],
          "text" : "ldap_deprecated"
        }
      ],
      "hash" : "V-authentication",
      "text" : "authentication",
      "type" : "Array(OneOf(Struct(builtin_db),Struct(mysql),Struct(postgresql),Struct(mongo_single),Struct(mongo_rs),Struct(mongo_sharded),Struct(redis_single),Struct(redis_cluster),Struct(redis_sentinel),Struct(http_get),Struct(http_post),Struct(jwt_hmac),Struct(jwt_public_key),Struct(jwt_jwks),Struct(scram),Struct(ldap),Struct(ldap_deprecated)))",
      "default" : "[]"
    },
    {
      "doc" : "Authorization a.k.a. ACL.<br/>\nIn EMQX, MQTT client access control is extremely flexible.<br/>\nAn out-of-the-box set of authorization data sources are supported.\nFor example,<br/>\n'file' source is to support concise and yet generic ACL rules in a file;<br/>\n'built_in_database' source can be used to store per-client customizable rule sets,\nnatively in the EMQX node;<br/>\n'http' source to make EMQX call an external HTTP API to make the decision;<br/>\n'PostgreSQL' etc. to look up clients or rules from external databases",
      "refs" : [
        {
          "doc" : "Settings that control client authorization.",
          "hash" : "T-authorization-S-authorization",
          "fields" : [
            {
              "doc" : "Default access control action if the user or client matches no ACL rules,\nor if no such user or client is found by the configurable authorization\nsources such as built_in_database, an HTTP API, or a query against PostgreSQL.\nFind more details in 'authorization.sources' config.",
              "hash" : "V-authorization-S-authorization-no_match",
              "text" : "no_match",
              "type" : "Enum(allow,deny)",
              "default" : "allow"
            },
            {
              "doc" : "The action when the authorization check rejects an operation.",
              "hash" : "V-authorization-S-authorization-deny_action",
              "text" : "deny_action",
              "type" : "Enum(ignore,disconnect)",
              "default" : "ignore"
            },
            {
              "refs" : [
                {
                  "doc" : "Settings for the authorization cache.",
                  "hash" : "T-authorization-S-authorization-cache-S-authz_cache",
                  "fields" : [
                    {
                      "doc" : "Maximum number of cached items.",
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-max_size",
                      "text" : "max_size",
                      "type" : "Integer(1..1048576)",
                      "default" : "32"
                    },
                    {
                      "doc" : "Time to live for the cached data.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-ttl",
                      "text" : "ttl",
                      "type" : "Duration",
                      "default" : "\"1m\""
                    },
                    {
                      "doc" : "Exclude caching ACL check results for topics matching the given patterns.",
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-excludes",
                      "text" : "excludes",
                      "type" : "Array(String)",
                      "default" : "[]"
                    }
                  ],
                  "text" : "authz_cache"
                }
              ],
              "hash" : "V-authorization-S-authorization-cache",
              "text" : "cache",
              "type" : "Struct(authz_cache)"
            },
            {
              "doc" : "Authorization data sources.<br/>\nAn array of authorization (ACL) data providers.\nIt is designed as an array, not a hash-map, so the sources can be\nordered to form a chain of access controls.<br/>\n\nWhen authorizing a 'publish' or 'subscribe' action, the configured\nsources are checked in order. When checking an ACL source,\nin case the client (identified by username or client ID) is not found,\nit moves on to the next source. And it stops immediately\nonce an 'allow' or 'deny' decision is returned.<br/>\n\nIf the client is not found in any of the sources,\nthe default action configured in 'authorization.no_match' is applied.<br/>\n\nNOTE:\nThe source elements are identified by their 'type'.\nIt is NOT allowed to configure two or more sources of the same type.",
              "refs" : [
                {
                  "doc" : "Authorization using a static file.",
                  "hash" : "T-authorization-S-authorization-sources-S-file",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-file-type",
                      "text" : "type",
                      "type" : "String(\"file\")"
                    },
                    {
                      "doc" : "Path to the file which contains the ACL rules.\nIf the file provisioned before starting EMQX node,\nit can be placed anywhere as long as EMQX has read access to it.\nThat is, EMQX will treat it as read only.\n\nIn case the rule-set is created or updated from EMQX Dashboard or HTTP API,\na new file will be created and placed in `authz` subdirectory inside EMQX's `data_dir`,\nand the old file will not be used anymore.",
                      "hash" : "V-authorization-S-authorization-sources-S-file-path",
                      "text" : "path",
                      "type" : "String"
                    }
                  ],
                  "text" : "file"
                },
                {
                  "doc" : "Authorization using a built-in database (mnesia).",
                  "hash" : "T-authorization-S-authorization-sources-S-builtin_db",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-builtin_db-type",
                      "text" : "type",
                      "type" : "String(\"built_in_database\")"
                    },
                    {
                      "doc" : "Maximum number of rules per client/user. Note that performance may decrease as number of rules increases.",
                      "hash" : "V-authorization-S-authorization-sources-S-builtin_db-max_rules",
                      "text" : "max_rules",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    }
                  ],
                  "text" : "builtin_db"
                },
                {
                  "doc" : "Authorization using an external HTTP server (via GET requests).",
                  "hash" : "T-authorization-S-authorization-sources-S-http_get",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-type",
                      "text" : "type",
                      "type" : "String(\"http\")"
                    },
                    {
                      "doc" : "URL of the auth server.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP request timeout.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-request_timeout",
                      "text" : "request_timeout",
                      "type" : "String",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "HTTP request body.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-body",
                      "text" : "body",
                      "type" : "Map($name->String)"
                    },
                    {
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-retry_interval",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The pool size.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "Configure HTTP request parameters.",
                      "refs" : [
                        {
                          "doc" : "",
                          "hash" : "T-authorization-S-authorization-sources-S-http_get-request-S-request",
                          "fields" : [
                            {
                              "doc" : "HTTP method.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-method",
                              "text" : "method",
                              "type" : "String"
                            },
                            {
                              "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-path",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-body",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "doc" : "List of HTTP headers.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-headers",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "doc" : "Max retry times if error on sending request.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)"
                            },
                            {
                              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-request_timeout",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "request"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-request",
                      "text" : "request",
                      "type" : "Struct(request)"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "HTTP method.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-method",
                      "text" : "method",
                      "type" : "String(\"get\")"
                    },
                    {
                      "doc" : "List of HTTP headers (without <code>content-type</code>).",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-headers",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", keep-alive = \"timeout=30, max=1000\"}"
                    }
                  ],
                  "text" : "http_get"
                },
                {
                  "doc" : "Authorization using an external HTTP server (via POST requests).",
                  "hash" : "T-authorization-S-authorization-sources-S-http_post",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-type",
                      "text" : "type",
                      "type" : "String(\"http\")"
                    },
                    {
                      "doc" : "URL of the auth server.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP request timeout.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-request_timeout",
                      "text" : "request_timeout",
                      "type" : "String",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "HTTP request body.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-body",
                      "text" : "body",
                      "type" : "Map($name->String)"
                    },
                    {
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-retry_interval",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The pool size.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "Configure HTTP request parameters.",
                      "refs" : [
                        {
                          "doc" : "",
                          "hash" : "T-authorization-S-authorization-sources-S-http_post-request-S-request",
                          "fields" : [
                            {
                              "doc" : "HTTP method.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-method",
                              "text" : "method",
                              "type" : "String"
                            },
                            {
                              "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-path",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-body",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "doc" : "List of HTTP headers.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-headers",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "doc" : "Max retry times if error on sending request.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)"
                            },
                            {
                              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-request_timeout",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "request"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-request",
                      "text" : "request",
                      "type" : "Struct(request)"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "HTTP method.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-method",
                      "text" : "method",
                      "type" : "String(\"post\")"
                    },
                    {
                      "doc" : "List of HTTP Headers.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-headers",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=30, max=1000\"}"
                    }
                  ],
                  "text" : "http_post"
                },
                {
                  "doc" : "Authorization using a single Redis instance.",
                  "hash" : "T-authorization-S-authorization-sources-S-redis_single",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-type",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Single mode. Must be set to 'single' when Redis server is running in single mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-redis_type",
                      "text" : "redis_type",
                      "type" : "String(\"single\")",
                      "default" : "single"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Redis database ID.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-database",
                      "text" : "database",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "Database query used to retrieve authorization data.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-cmd",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "text" : "redis_single"
                },
                {
                  "doc" : "Authorization using a Redis Sentinel.",
                  "hash" : "T-authorization-S-authorization-sources-S-redis_sentinel",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-type",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-redis_type",
                      "text" : "redis_type",
                      "type" : "String(\"sentinel\")",
                      "default" : "sentinel"
                    },
                    {
                      "doc" : "The cluster name in Redis sentinel mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-sentinel",
                      "text" : "sentinel",
                      "type" : "String"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Redis database ID.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-database",
                      "text" : "database",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "Database query used to retrieve authorization data.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-cmd",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "text" : "redis_sentinel"
                },
                {
                  "doc" : "Authorization using a Redis cluster.",
                  "hash" : "T-authorization-S-authorization-sources-S-redis_cluster",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-type",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-redis_type",
                      "text" : "redis_type",
                      "type" : "String(\"cluster\")",
                      "default" : "cluster"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "Database query used to retrieve authorization data.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-cmd",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "text" : "redis_cluster"
                },
                {
                  "doc" : "Authorization using a MySQL database.",
                  "hash" : "T-authorization-S-authorization-sources-S-mysql",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-type",
                      "text" : "type",
                      "type" : "String(\"mysql\")"
                    },
                    {
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MySQL default port 3306 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Database name.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-username",
                      "text" : "username",
                      "type" : "String",
                      "default" : "root"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "Key-value list of SQL prepared statements.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-prepare_statement",
                      "text" : "prepare_statement",
                      "type" : "Map"
                    },
                    {
                      "doc" : "Database query used to retrieve authorization data.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-query",
                      "text" : "query",
                      "type" : "String"
                    }
                  ],
                  "text" : "mysql"
                },
                {
                  "doc" : "Authorization using a PostgreSQL database.",
                  "hash" : "T-authorization-S-authorization-sources-S-postgresql",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-type",
                      "text" : "type",
                      "type" : "String(\"postgresql\")"
                    },
                    {
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe PostgreSQL default port 5432 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Disables the usage of prepared statements in the connections.\nSome endpoints, like PGBouncer or Supabase in Transaction mode, do not\nsupport session features such as prepared statements.  For such connections,\nthis option should be enabled.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-disable_prepared_statements",
                      "text" : "disable_prepared_statements",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Database name.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "Key-value list of SQL prepared statements.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-prepare_statement",
                      "text" : "prepare_statement",
                      "type" : "Map"
                    },
                    {
                      "doc" : "Database query used to retrieve authorization data.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-query",
                      "text" : "query",
                      "type" : "String"
                    }
                  ],
                  "text" : "postgresql"
                },
                {
                  "doc" : "Authorization using a single MongoDB instance.",
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_single",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-type",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "doc" : "`MongoDB` collection containing the authorization data.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-collection",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-filter",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "doc" : "Standalone instance. Must be set to 'single' when MongoDB server is running in standalone mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-mongo_type",
                      "text" : "mongo_type",
                      "type" : "String(\"single\")",
                      "default" : "single"
                    },
                    {
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Write mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-w_mode",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "doc" : "Use DNS SRV record.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-srv_record",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-use_legacy_protocol",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "Database name associated with the user's credentials.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-auth_source",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "doc" : "Database name.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Topology of MongoDB.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_single-topology-S-topology",
                          "fields" : [
                            {
                              "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-max_overflow",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-overflow_ttl",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-overflow_check_period",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-local_threshold_ms",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-connect_timeout_ms",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-socket_timeout_ms",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-server_selection_timeout_ms",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-wait_queue_timeout_ms",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-heartbeat_frequency_ms",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-min_heartbeat_frequency_ms",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "mongo_single"
                },
                {
                  "doc" : "Authorization using a MongoDB replica set.",
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_rs",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-type",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "doc" : "`MongoDB` collection containing the authorization data.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-collection",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-filter",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "doc" : "Replica set. Must be set to 'rs' when MongoDB server is running in 'replica set' mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-mongo_type",
                      "text" : "mongo_type",
                      "type" : "String(\"rs\")",
                      "default" : "rs"
                    },
                    {
                      "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "Write mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-w_mode",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "doc" : "Read mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-r_mode",
                      "text" : "r_mode",
                      "type" : "Enum(master,slave_ok)",
                      "default" : "master"
                    },
                    {
                      "doc" : "Name of the replica set.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-replica_set_name",
                      "text" : "replica_set_name",
                      "type" : "String"
                    },
                    {
                      "doc" : "Use DNS SRV record.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-srv_record",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-use_legacy_protocol",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "Database name associated with the user's credentials.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-auth_source",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "doc" : "Database name.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Topology of MongoDB.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology",
                          "fields" : [
                            {
                              "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-max_overflow",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-overflow_ttl",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-overflow_check_period",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-local_threshold_ms",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-connect_timeout_ms",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-socket_timeout_ms",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-server_selection_timeout_ms",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-wait_queue_timeout_ms",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-heartbeat_frequency_ms",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-min_heartbeat_frequency_ms",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "mongo_rs"
                },
                {
                  "doc" : "Authorization using a sharded MongoDB cluster.",
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-type",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "doc" : "`MongoDB` collection containing the authorization data.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-collection",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-filter",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "doc" : "Sharded cluster. Must be set to 'sharded' when MongoDB server is running in 'sharded' mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-mongo_type",
                      "text" : "mongo_type",
                      "type" : "String(\"sharded\")",
                      "default" : "sharded"
                    },
                    {
                      "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "Write mode.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-w_mode",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "doc" : "Use DNS SRV record.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-srv_record",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-use_legacy_protocol",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "Database name associated with the user's credentials.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-auth_source",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "doc" : "Database name.",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Topology of MongoDB.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology",
                          "fields" : [
                            {
                              "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-max_overflow",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-overflow_ttl",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-overflow_check_period",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-local_threshold_ms",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-connect_timeout_ms",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-socket_timeout_ms",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-server_selection_timeout_ms",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-wait_queue_timeout_ms",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-heartbeat_frequency_ms",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "mongo_sharded"
                },
                {
                  "doc" : "AuthZ with LDAP",
                  "hash" : "T-authorization-S-authorization-sources-S-ldap",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-type",
                      "text" : "type",
                      "type" : "String(\"ldap\")"
                    },
                    {
                      "doc" : "Indicates which attribute is used to represent the allowed topics list of the `publish`.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-publish_attribute",
                      "text" : "publish_attribute",
                      "type" : "String",
                      "default" : "mqttPublishTopic"
                    },
                    {
                      "doc" : "Indicates which attribute is used to represent the allowed topics list of the `subscribe`.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-subscribe_attribute",
                      "text" : "subscribe_attribute",
                      "type" : "String",
                      "default" : "mqttSubscriptionTopic"
                    },
                    {
                      "doc" : "Indicates which attribute is used to represent the both allowed topics list of  `publish` and `subscribe`.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-all_attribute",
                      "text" : "all_attribute",
                      "type" : "String",
                      "default" : "mqttPubSubTopic"
                    },
                    {
                      "doc" : "Timeout for the LDAP query.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-query_timeout",
                      "text" : "query_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe LDAP default port 389 is used if `[:Port]` is not specified.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "The name of the base object entry (or possibly the root) relative to\nwhich the Search is to be performed.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-base_dn",
                      "text" : "base_dn",
                      "type" : "String"
                    },
                    {
                      "doc" : "The filter that defines the conditions that must be fulfilled in order\nfor the Search to match a given entry.<br>\nThe syntax of the filter follows RFC 4515 and also supports placeholders.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-filter",
                      "text" : "filter",
                      "type" : "String",
                      "default" : "\"(objectClass=mqttUser)\""
                    },
                    {
                      "doc" : "Sets the maximum time in milliseconds that is used for each individual request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "SSL connection settings.",
                          "hash" : "T-authorization-S-authorization-sources-S-ldap-ssl-S-ssl",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "ldap"
                }
              ],
              "hash" : "V-authorization-S-authorization-sources",
              "text" : "sources",
              "type" : "Array(OneOf(Struct(file),Struct(builtin_db),Struct(http_get),Struct(http_post),Struct(redis_single),Struct(redis_sentinel),Struct(redis_cluster),Struct(mysql),Struct(postgresql),Struct(mongo_single),Struct(mongo_rs),Struct(mongo_sharded),Struct(ldap)))",
              "default" : "[{enable = true, path = \"${EMQX_ETC_DIR}/acl.conf\", type = file}]"
            }
          ],
          "text" : "authorization"
        }
      ],
      "hash" : "V-authorization",
      "text" : "authorization",
      "type" : "Struct(authorization)"
    },
    {
      "refs" : [
        {
          "doc" : "Node name, cookie, config & data directories and the Erlang virtual machine (BEAM) boot parameters.",
          "hash" : "T-node-S-node",
          "fields" : [
            {
              "doc" : "Unique name of the EMQX node. It must follow <code>%name%@FQDN</code> or\n<code>%name%@IPv4</code> format.",
              "hash" : "V-node-S-node-name",
              "text" : "name",
              "type" : "String",
              "default" : "\"emqx@127.0.0.1\""
            },
            {
              "doc" : "Secret cookie is a random string that should be the same on all nodes in\nthe given EMQX cluster, but unique per EMQX cluster. It is used to prevent EMQX nodes that\nbelong to different clusters from accidentally connecting to each other.",
              "hash" : "V-node-S-node-cookie",
              "text" : "cookie",
              "type" : "String"
            },
            {
              "doc" : "Maximum number of simultaneously open files and sockets for this Erlang system.\nFor more information, see: https://www.erlang.org/doc/man/erl.html",
              "hash" : "V-node-S-node-max_ports",
              "text" : "max_ports",
              "type" : "Integer(1024..134217727)",
              "default" : "1048576"
            },
            {
              "doc" : "Erlang's distribution buffer busy limit in kilobytes.",
              "hash" : "V-node-S-node-dist_buffer_size",
              "text" : "dist_buffer_size",
              "type" : "Integer(1..2097151)",
              "default" : "8192"
            },
            {
              "doc" : "Path to the persistent data directory.<br/>\nPossible auto-created subdirectories are:<br/>\n- `mnesia/<node_name>`: EMQX's built-in database directory.<br/>\nFor example, `mnesia/emqx@127.0.0.1`.<br/>\nThere should be only one such subdirectory.<br/>\nMeaning, in case the node is to be renamed (to e.g. `emqx@10.0.1.1`),<br/>\nthe old dir should be deleted first.<br/>\n- `configs`: Generated configs at boot time, and cluster/local override configs.<br/>\n- `patches`: Hot-patch beam files are to be placed here.<br/>\n- `trace`: Trace log files.<br/>\n\n**NOTE**: One data dir cannot be shared by two or more EMQX nodes.",
              "hash" : "V-node-S-node-data_dir",
              "text" : "data_dir",
              "type" : "String"
            },
            {
              "doc" : "Periodic garbage collection interval. Set to <code>disabled</code> to have it disabled.",
              "hash" : "V-node-S-node-global_gc_interval",
              "text" : "global_gc_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"15m\""
            },
            {
              "doc" : "Select a node role.<br/>\n<code>core</code> nodes provide durability of the data, and take care of writes.\nIt is recommended to place core nodes in different racks or different availability zones.<br/>\n<code>replicant</code> nodes are ephemeral worker nodes. Removing them from the cluster\ndoesn't affect database redundancy<br/>\nIt is recommended to have more replicant nodes than core nodes.<br/>\nNote: this parameter only takes effect when the <code>backend</code> is set\nto <code>rlog</code>.",
              "hash" : "V-node-S-node-role",
              "aliases" : [
                "db_role"
              ],
              "text" : "role",
              "type" : "Enum(core)",
              "default" : "core"
            }
          ],
          "text" : "node"
        }
      ],
      "hash" : "V-node",
      "text" : "node",
      "type" : "Struct(node)"
    },
    {
      "refs" : [
        {
          "doc" : "EMQX nodes can form a cluster to scale up the total capacity.<br/>\n      Here holds the configs to instruct how individual nodes can discover each other.",
          "hash" : "T-cluster-S-cluster",
          "fields" : [
            {
              "doc" : "Human-friendly name of the EMQX cluster.",
              "hash" : "V-cluster-S-cluster-name",
              "text" : "name",
              "type" : "String",
              "default" : "emqxcl"
            },
            {
              "doc" : "Service discovery method for the cluster nodes. Possible values are:\n- manual: Use <code>emqx ctl cluster</code> command to manage cluster.<br/>\n- static: Configure static nodes list by setting <code>seeds</code> in config file.<br/>\n- dns: Use DNS A record to discover peer nodes.<br/>\n- etcd: Use etcd to discover peer nodes.<br/>\n- k8s: Use Kubernetes API to discover peer pods.",
              "hash" : "V-cluster-S-cluster-discovery_strategy",
              "text" : "discovery_strategy",
              "type" : "Enum(manual,static,singleton,dns,etcd,k8s)",
              "default" : "manual"
            },
            {
              "doc" : "Remove disconnected nodes from the cluster after this interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-cluster-S-cluster-autoclean",
              "text" : "autoclean",
              "type" : "Duration",
              "default" : "\"24h\""
            },
            {
              "doc" : "If <code>true</code>, the node will try to heal network partitions automatically.",
              "hash" : "V-cluster-S-cluster-autoheal",
              "text" : "autoheal",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "The Erlang distribution protocol for the cluster.<br/>\n- inet_tcp: IPv4 TCP <br/>\n- inet_tls: IPv4 TLS, works together with <code>etc/ssl_dist.conf</code> <br/>\n- inet6_tcp: IPv6 TCP <br/>\n- inet6_tls: IPv6 TLS, works together with <code>etc/ssl_dist.conf</code>",
              "hash" : "V-cluster-S-cluster-proto_dist",
              "text" : "proto_dist",
              "type" : "Enum(inet_tcp,inet6_tcp,inet_tls,inet6_tls)",
              "default" : "inet_tcp"
            },
            {
              "doc" : "QUIC stack LB Mode\n- 0: disabled (Default)\n- 1: server_ip\n- 2: server_id_fixed",
              "hash" : "V-cluster-S-cluster-quic_lb_mode",
              "text" : "quic_lb_mode",
              "type" : "Integer",
              "default" : "0"
            },
            {
              "refs" : [
                {
                  "doc" : "Service discovery via static nodes.\nThe new node joins the cluster by connecting to one of the bootstrap nodes.",
                  "hash" : "T-cluster-S-cluster-static-S-cluster_static",
                  "fields" : [
                    {
                      "doc" : "List EMQX node names in the static cluster. See <code>node.name</code>.",
                      "hash" : "V-cluster-S-cluster-static-S-cluster_static-seeds",
                      "text" : "seeds",
                      "type" : "OneOf(String,Array(String))",
                      "default" : "[]"
                    }
                  ],
                  "text" : "cluster_static"
                }
              ],
              "hash" : "V-cluster-S-cluster-static",
              "text" : "static",
              "type" : "Struct(cluster_static)"
            },
            {
              "refs" : [
                {
                  "doc" : "Service discovery via DNS SRV records.",
                  "hash" : "T-cluster-S-cluster-dns-S-cluster_dns",
                  "fields" : [
                    {
                      "doc" : "The domain name from which to discover peer EMQX nodes' IP addresses.\nApplicable when <code>cluster.discovery_strategy = dns</code>",
                      "hash" : "V-cluster-S-cluster-dns-S-cluster_dns-name",
                      "text" : "name",
                      "type" : "String",
                      "default" : "localhost"
                    },
                    {
                      "doc" : "DNS record type.",
                      "hash" : "V-cluster-S-cluster-dns-S-cluster_dns-record_type",
                      "text" : "record_type",
                      "type" : "Enum(a,aaaa,srv)",
                      "default" : "a"
                    }
                  ],
                  "text" : "cluster_dns"
                }
              ],
              "hash" : "V-cluster-S-cluster-dns",
              "text" : "dns",
              "type" : "Struct(cluster_dns)"
            },
            {
              "refs" : [
                {
                  "doc" : "Service discovery using 'etcd' service.",
                  "hash" : "T-cluster-S-cluster-etcd-S-cluster_etcd",
                  "fields" : [
                    {
                      "doc" : "List of endpoint URLs of the etcd cluster",
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Key prefix used for EMQX service discovery.",
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-prefix",
                      "text" : "prefix",
                      "type" : "String",
                      "default" : "emqxcl"
                    },
                    {
                      "doc" : "Expiration time of the etcd key associated with the node.\nIt is refreshed automatically, as long as the node is alive.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-node_ttl",
                      "text" : "node_ttl",
                      "type" : "Duration",
                      "default" : "\"1m\""
                    },
                    {
                      "doc" : "Options for the TLS connection to the etcd cluster.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options",
                      "aliases" : [
                        "ssl"
                      ],
                      "text" : "ssl_options",
                      "type" : "Struct(ssl_client_opts)"
                    }
                  ],
                  "text" : "cluster_etcd"
                }
              ],
              "hash" : "V-cluster-S-cluster-etcd",
              "text" : "etcd",
              "type" : "Struct(cluster_etcd)"
            },
            {
              "refs" : [
                {
                  "doc" : "Service discovery via Kubernetes API server.",
                  "hash" : "T-cluster-S-cluster-k8s-S-cluster_k8s",
                  "fields" : [
                    {
                      "doc" : "Kubernetes API endpoint URL.",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-apiserver",
                      "text" : "apiserver",
                      "type" : "String",
                      "default" : "\"https://kubernetes.default.svc:443\""
                    },
                    {
                      "doc" : "EMQX broker service name.",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-service_name",
                      "text" : "service_name",
                      "type" : "String",
                      "default" : "emqx"
                    },
                    {
                      "doc" : "Address type used for connecting to the discovered nodes.\nSetting <code>cluster.k8s.address_type</code> to <code>ip</code> will\nmake EMQX to discover IP addresses of peer nodes from Kubernetes API.",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-address_type",
                      "text" : "address_type",
                      "type" : "Enum(ip,dns,hostname)",
                      "default" : "ip"
                    },
                    {
                      "doc" : "Kubernetes namespace.",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-namespace",
                      "text" : "namespace",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "Node name suffix.<br/>\nNote: this parameter is only relevant when <code>address_type</code> is <code>dns</code>\nor <code>hostname</code>.",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-suffix",
                      "text" : "suffix",
                      "type" : "String",
                      "default" : "\"pod.local\""
                    }
                  ],
                  "text" : "cluster_k8s"
                }
              ],
              "hash" : "V-cluster-S-cluster-k8s",
              "text" : "k8s",
              "type" : "Struct(cluster_k8s)"
            }
          ],
          "text" : "cluster"
        }
      ],
      "hash" : "V-cluster",
      "text" : "cluster",
      "type" : "Struct(cluster)"
    },
    {
      "doc" : "EMQX provides support for two primary log handlers: `file` and `console`, with an additional `audit` handler specifically designed to always direct logs to files.\nThe system's default log handling behavior can be configured via the environment variable `EMQX_DEFAULT_LOG_HANDLER`, which accepts the following settings:\n\n- `file`: Directs log output exclusively to files.\n- `console`: Channels log output solely to the console.\n\nIt's noteworthy that `EMQX_DEFAULT_LOG_HANDLER` is set to `file` when EMQX is initiated via systemd's `emqx.service` file.\nIn scenarios outside systemd initiation, `console` serves as the default log handler.",
      "refs" : [
        {
          "doc" : "EMQX supports multiple log handlers, one console handler and multiple file handlers.\nEMQX by default logs to console when running in docker or in console/foreground mode,\notherwise it logs to file $EMQX_LOG_DIR/emqx.log.\nFor advanced configuration, you can find more parameters in this section.",
          "hash" : "T-log-S-log",
          "fields" : [
            {
              "refs" : [
                {
                  "doc" : "Log handler that prints log events to the EMQX console.",
                  "hash" : "T-log-S-log-console-S-console_handler",
                  "fields" : [
                    {
                      "doc" : "The log level for the current log handler.\nDefaults to warning.",
                      "hash" : "V-log-S-log-console-S-console_handler-level",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "doc" : "Enable this log handler.",
                      "hash" : "V-log-S-log-console-S-console_handler-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Choose log formatter. <code>text</code> for free text, and <code>json</code> for structured logging.",
                      "hash" : "V-log-S-log-console-S-console_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "doc" : "Pick a timestamp format:\n- `auto`: automatically choose the best format based on log formatter. `epoch` for JSON and `rfc3339` for text.\n- `epoch`: Unix epoch time in microseconds.\n- `rfc3339`: RFC3339 format.",
                      "hash" : "V-log-S-log-console-S-console_handler-timestamp_format",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "The time offset to be used when formatting the timestamp.\nCan be one of:\n  - <code>system</code>: the time offset used by the local system\n  - <code>utc</code>: the UTC time offset\n  - <code>+-[hh]:[mm]</code>: user specified time offset, such as \"-02:00\" or \"+00:00\"\nDefaults to: <code>system</code>.\nThis config has no effect for when formatter is <code>json</code> as the timestamp in JSON is milliseconds since epoch.",
                      "hash" : "V-log-S-log-console-S-console_handler-time_offset",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    },
                    {
                      "doc" : "Determine the format of the payload format in the trace file.<br/>\n`text`: Text-based protocol or plain text protocol.\n It is recommended when payload is JSON encoded.<br/>\n`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>\n`hidden`: payload is obfuscated as `******`",
                      "hash" : "V-log-S-log-console-S-console_handler-payload_encode",
                      "text" : "payload_encode",
                      "type" : "Enum(hex,text,hidden)",
                      "default" : "text"
                    }
                  ],
                  "text" : "console_handler"
                }
              ],
              "hash" : "V-log-S-log-console",
              "aliases" : [
                "console_handler"
              ],
              "text" : "console",
              "type" : "Struct(console_handler)"
            },
            {
              "doc" : "File-based log handlers.",
              "refs" : [
                {
                  "doc" : "Log handler that prints log events to files.",
                  "hash" : "T-log-S-log-file-S-log_file_handler",
                  "fields" : [
                    {
                      "doc" : "Name the log file.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-path",
                      "aliases" : [
                        "file",
                        "to"
                      ],
                      "text" : "path",
                      "type" : "String",
                      "default" : "\"${EMQX_LOG_DIR}/emqx.log\""
                    },
                    {
                      "doc" : "Maximum number of log files.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_count",
                      "aliases" : [
                        "rotation"
                      ],
                      "text" : "rotation_count",
                      "type" : "Integer(1..128)",
                      "default" : "10"
                    },
                    {
                      "doc" : "This parameter controls log file rotation. The value `infinity` means the log file will grow indefinitely, otherwise the log file will be rotated once it reaches `rotation_size` in bytes.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_size",
                      "aliases" : [
                        "max_size"
                      ],
                      "text" : "rotation_size",
                      "type" : "OneOf(String(\"infinity\"),Bytesize)",
                      "default" : "\"50MB\""
                    },
                    {
                      "doc" : "The log level for the current log handler.\nDefaults to warning.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-level",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "doc" : "Choose log formatter. <code>text</code> for free text, and <code>json</code> for structured logging.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "doc" : "Pick a timestamp format:\n- `auto`: automatically choose the best format based on log formatter. `epoch` for JSON and `rfc3339` for text.\n- `epoch`: Unix epoch time in microseconds.\n- `rfc3339`: RFC3339 format.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-timestamp_format",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "The time offset to be used when formatting the timestamp.\nCan be one of:\n  - <code>system</code>: the time offset used by the local system\n  - <code>utc</code>: the UTC time offset\n  - <code>+-[hh]:[mm]</code>: user specified time offset, such as \"-02:00\" or \"+00:00\"\nDefaults to: <code>system</code>.\nThis config has no effect for when formatter is <code>json</code> as the timestamp in JSON is milliseconds since epoch.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-time_offset",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    },
                    {
                      "doc" : "Determine the format of the payload format in the trace file.<br/>\n`text`: Text-based protocol or plain text protocol.\n It is recommended when payload is JSON encoded.<br/>\n`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>\n`hidden`: payload is obfuscated as `******`",
                      "hash" : "V-log-S-log-file-S-log_file_handler-payload_encode",
                      "text" : "payload_encode",
                      "type" : "Enum(hex,text,hidden)",
                      "default" : "text"
                    }
                  ],
                  "text" : "log_file_handler"
                },
                {
                  "doc" : "Log handler that prints log events to files.",
                  "hash" : "T-log-S-log-file-S-log_file_handler",
                  "fields" : [
                    {
                      "doc" : "Name the log file.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-path",
                      "aliases" : [
                        "file",
                        "to"
                      ],
                      "text" : "path",
                      "type" : "String",
                      "default" : "\"${EMQX_LOG_DIR}/emqx.log\""
                    },
                    {
                      "doc" : "Maximum number of log files.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_count",
                      "aliases" : [
                        "rotation"
                      ],
                      "text" : "rotation_count",
                      "type" : "Integer(1..128)",
                      "default" : "10"
                    },
                    {
                      "doc" : "This parameter controls log file rotation. The value `infinity` means the log file will grow indefinitely, otherwise the log file will be rotated once it reaches `rotation_size` in bytes.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_size",
                      "aliases" : [
                        "max_size"
                      ],
                      "text" : "rotation_size",
                      "type" : "OneOf(String(\"infinity\"),Bytesize)",
                      "default" : "\"50MB\""
                    },
                    {
                      "doc" : "The log level for the current log handler.\nDefaults to warning.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-level",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "doc" : "Choose log formatter. <code>text</code> for free text, and <code>json</code> for structured logging.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "doc" : "Pick a timestamp format:\n- `auto`: automatically choose the best format based on log formatter. `epoch` for JSON and `rfc3339` for text.\n- `epoch`: Unix epoch time in microseconds.\n- `rfc3339`: RFC3339 format.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-timestamp_format",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "The time offset to be used when formatting the timestamp.\nCan be one of:\n  - <code>system</code>: the time offset used by the local system\n  - <code>utc</code>: the UTC time offset\n  - <code>+-[hh]:[mm]</code>: user specified time offset, such as \"-02:00\" or \"+00:00\"\nDefaults to: <code>system</code>.\nThis config has no effect for when formatter is <code>json</code> as the timestamp in JSON is milliseconds since epoch.",
                      "hash" : "V-log-S-log-file-S-log_file_handler-time_offset",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    },
                    {
                      "doc" : "Determine the format of the payload format in the trace file.<br/>\n`text`: Text-based protocol or plain text protocol.\n It is recommended when payload is JSON encoded.<br/>\n`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>\n`hidden`: payload is obfuscated as `******`",
                      "hash" : "V-log-S-log-file-S-log_file_handler-payload_encode",
                      "text" : "payload_encode",
                      "type" : "Enum(hex,text,hidden)",
                      "default" : "text"
                    }
                  ],
                  "text" : "log_file_handler"
                }
              ],
              "hash" : "V-log-S-log-file",
              "aliases" : [
                "file_handlers"
              ],
              "text" : "file",
              "type" : "OneOf(Struct(log_file_handler),Map($handler_name->Struct(log_file_handler)))",
              "default" : "{level = warning}"
            },
            {
              "refs" : [
                {
                  "doc" : "Log throttling feature reduces the number of potentially flooding logged events by\ndropping all but the first event within a configured time window.\nThe throttling is automatically disabled if `console` or `file` log level is set to debug.",
                  "hash" : "T-log-S-log-throttling-S-log_throttling",
                  "fields" : [
                    {
                      "doc" : "This configuration setting controls the logging behavior for throttled messages,\nincluding, but not limited to messages like 'authorization_permission_denied'.\nWithin each defined time window, only one instance of a throttled message will be logged to prevent log flooding.\nAt the conclusion of each time window, a summary log will be generated, detailing the occurrence of any throttled messages during that period.\nIt's important to note that the shortest effective time window for this setting is 1 second (`1s`).\nShould a value lower than `1s` be specified, it will automatically be adjusted to `1s`.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-log-S-log-throttling-S-log_throttling-time_window",
                      "text" : "time_window",
                      "type" : "Duration(s)",
                      "default" : "\"1m\""
                    }
                  ],
                  "text" : "log_throttling"
                }
              ],
              "hash" : "V-log-S-log-throttling",
              "text" : "throttling",
              "type" : "Struct(log_throttling)"
            }
          ],
          "text" : "log"
        }
      ],
      "hash" : "V-log",
      "text" : "log",
      "type" : "Struct(log)"
    },
    {
      "refs" : [
        {
          "doc" : "EMQX uses a library called <code>gen_rpc</code> for inter-broker communication.<br/>\nMost of the time the default config should work,\nbut in case you need to do performance fine-tuning or experiment a bit,\nthis is where to look.",
          "hash" : "T-rpc-S-rpc",
          "fields" : [
            {
              "doc" : "In <code>sync</code> mode the sending side waits for the ack from the receiving side.",
              "hash" : "V-rpc-S-rpc-mode",
              "text" : "mode",
              "type" : "Enum(sync,async)",
              "default" : "async"
            },
            {
              "doc" : "Transport protocol used for inter-broker communication",
              "hash" : "V-rpc-S-rpc-protocol",
              "aliases" : [
                "driver"
              ],
              "text" : "protocol",
              "type" : "Enum(tcp,ssl)",
              "default" : "tcp"
            },
            {
              "doc" : "The maximum number of batch messages sent in asynchronous mode.\n      Note that this configuration does not work in synchronous mode.",
              "hash" : "V-rpc-S-rpc-async_batch_size",
              "text" : "async_batch_size",
              "type" : "Integer",
              "default" : "256"
            },
            {
              "doc" : "<code>manual</code>: discover ports by <code>server_port</code>.<br/>\n<code>stateless</code>: discover ports in a stateless manner, using the following algorithm.\nIf node name is <code>emqxN@127.0.0.1</code>, where the N is an integer,\nthen the listening port will be 5370 + N.\nNOTE: when `port_discovery` is `manual`, `server_port` configuration has no effect.",
              "hash" : "V-rpc-S-rpc-port_discovery",
              "text" : "port_discovery",
              "type" : "Enum(manual,stateless)",
              "default" : "stateless"
            },
            {
              "doc" : "Listening port used by RPC local service.<br/>\nNote that this config only takes effect when rpc.port_discovery is set to manual.",
              "hash" : "V-rpc-S-rpc-server_port",
              "aliases" : [
                "tcp_server_port",
                "ssl_server_port"
              ],
              "text" : "server_port",
              "type" : "Integer(1..+inf)",
              "default" : "5369"
            },
            {
              "doc" : "Set the maximum number of RPC communication channels initiated by this node to each remote node.",
              "hash" : "V-rpc-S-rpc-client_num",
              "aliases" : [
                "tcp_client_num"
              ],
              "text" : "client_num",
              "type" : "Integer(1..256)",
              "default" : "10"
            },
            {
              "doc" : "Timeout for establishing an RPC connection.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-rpc-S-rpc-connect_timeout",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "Path to TLS certificate file used to validate identity of the cluster nodes.\nNote that this config only takes effect when <code>rpc.driver</code> is set to <code>ssl</code>.",
              "hash" : "V-rpc-S-rpc-certfile",
              "text" : "certfile",
              "type" : "String"
            },
            {
              "doc" : "Path to the private key file for the <code>rpc.certfile</code>.<br/>\nNote: contents of this file are secret, so it's necessary to set permissions to 600.",
              "hash" : "V-rpc-S-rpc-keyfile",
              "text" : "keyfile",
              "type" : "String"
            },
            {
              "doc" : "Path to certification authority TLS certificate file used to validate <code>rpc.certfile</code>.<br/>\nNote: certificates of all nodes in the cluster must be signed by the same CA.",
              "hash" : "V-rpc-S-rpc-cacertfile",
              "text" : "cacertfile",
              "type" : "String"
            },
            {
              "doc" : "Timeout for sending the RPC request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-rpc-S-rpc-send_timeout",
              "text" : "send_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "Timeout for the remote node authentication.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-rpc-S-rpc-authentication_timeout",
              "text" : "authentication_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "Timeout for the reply to a synchronous RPC.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-rpc-S-rpc-call_receive_timeout",
              "text" : "call_receive_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "doc" : "Corresponds to the `TCP_KEEPIDLE` socket option. The time (in seconds) the connection needs to remain idle before TCP starts sending keepalive probes.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-rpc-S-rpc-socket_keepalive_idle",
              "text" : "socket_keepalive_idle",
              "type" : "Duration(s)",
              "default" : "\"15m\""
            },
            {
              "doc" : "Corresponds to the `TCP_KEEPINTVL` socket option. The time (in seconds) between individual keepalive probes.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-rpc-S-rpc-socket_keepalive_interval",
              "text" : "socket_keepalive_interval",
              "type" : "Duration(s)",
              "default" : "\"75s\""
            },
            {
              "doc" : "Corresponds to the `TCP_KEEPCNT` socket option. The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end.",
              "hash" : "V-rpc-S-rpc-socket_keepalive_count",
              "text" : "socket_keepalive_count",
              "type" : "Integer",
              "default" : "9"
            },
            {
              "doc" : "TCP tuning parameters. TCP sending buffer size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "hash" : "V-rpc-S-rpc-socket_sndbuf",
              "text" : "socket_sndbuf",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "TCP tuning parameters. TCP receiving buffer size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "hash" : "V-rpc-S-rpc-socket_recbuf",
              "text" : "socket_recbuf",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "TCP tuning parameters. Socket buffer size in user mode.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "hash" : "V-rpc-S-rpc-socket_buffer",
              "text" : "socket_buffer",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "Enable compatibility with old RPC authentication.",
              "hash" : "V-rpc-S-rpc-insecure_fallback",
              "text" : "insecure_fallback",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
              "hash" : "V-rpc-S-rpc-ciphers",
              "text" : "ciphers",
              "type" : "Array(String)",
              "default" : "[]"
            },
            {
              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
              "hash" : "V-rpc-S-rpc-tls_versions",
              "text" : "tls_versions",
              "type" : "Array(String)",
              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
            },
            {
              "doc" : "Indicates the IP address for the RPC server to listen on. For example, use <code>\"0.0.0.0\"</code> for IPv4 or <code>\"::\"</code> for IPv6.",
              "hash" : "V-rpc-S-rpc-listen_address",
              "text" : "listen_address",
              "type" : "String",
              "default" : "\"0.0.0.0\""
            },
            {
              "doc" : "This setting is effective only when <code>rpc.listen_address</code> is assigned an IPv6 address.\nIf set to <code>true</code>, the RPC client will exclusively use IPv6 for connections.\nOtherwise, the client might opt for IPv4, even if the server is on IPv6.",
              "hash" : "V-rpc-S-rpc-ipv6_only",
              "text" : "ipv6_only",
              "type" : "Boolean",
              "default" : "false"
            }
          ],
          "text" : "rpc"
        }
      ],
      "hash" : "V-rpc",
      "text" : "rpc",
      "type" : "Struct(rpc)"
    },
    {
      "doc" : "System topics configuration.",
      "refs" : [
        {
          "doc" : "The EMQX Broker periodically publishes its own status, message statistics,\nclient online and offline events to the system topic starting with `$SYS/`.\n\nThe following options control the behavior of `$SYS` topics.",
          "hash" : "T-sys_topics-S-sys_topics",
          "fields" : [
            {
              "doc" : "Time interval for publishing following system messages:\n  - `$SYS/brokers`\n  - `$SYS/brokers/<node>/version`\n  - `$SYS/brokers/<node>/sysdescr`\n  - `$SYS/brokers/<node>/stats/<name>`\n  - `$SYS/brokers/<node>/metrics/<name>`",
              "hash" : "V-sys_topics-S-sys_topics-sys_msg_interval",
              "text" : "sys_msg_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"1m\""
            },
            {
              "doc" : "Time interval for publishing following heartbeat messages:\n  - `$SYS/brokers/<node>/uptime`\n  - `$SYS/brokers/<node>/datetime`",
              "hash" : "V-sys_topics-S-sys_topics-sys_heartbeat_interval",
              "text" : "sys_heartbeat_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"30s\""
            },
            {
              "doc" : "Client events messages.",
              "refs" : [
                {
                  "doc" : "Enable or disable client lifecycle event publishing.\n\nThe following options affect MQTT clients as well as\ngateway clients. The types of the clients\nare distinguished by the topic prefix:\n\n- For the MQTT clients, the format is:\n`$SYS/broker/<node>/clients/<clientid>/<event>`\n- For the Gateway clients, it is\n`$SYS/broker/<node>/gateway/<gateway-name>/clients/<clientid>/<event>`\n",
                  "hash" : "T-sys_topics-S-sys_topics-sys_event_messages-S-event_names",
                  "fields" : [
                    {
                      "doc" : "Enable to publish client connected event messages",
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_connected",
                      "text" : "client_connected",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Enable to publish client disconnected event messages.",
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_disconnected",
                      "text" : "client_disconnected",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Enable to publish event message that client subscribed a topic successfully.",
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_subscribed",
                      "text" : "client_subscribed",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Enable to publish event message that client unsubscribed a topic successfully.",
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_unsubscribed",
                      "text" : "client_unsubscribed",
                      "type" : "Boolean",
                      "default" : "false"
                    }
                  ],
                  "text" : "event_names"
                }
              ],
              "hash" : "V-sys_topics-S-sys_topics-sys_event_messages",
              "text" : "sys_event_messages",
              "type" : "Struct(event_names)"
            }
          ],
          "text" : "sys_topics"
        }
      ],
      "hash" : "V-sys_topics",
      "text" : "sys_topics",
      "type" : "Struct(sys_topics)"
    },
    {
      "refs" : [
        {
          "doc" : "When the process message queue length, or the memory bytes\nreaches a certain value, the process is forced to close.\n\nNote: \"message queue\" here refers to the \"message mailbox\"\nof the Erlang process, not the `mqueue` of QoS 1 and QoS 2.",
          "hash" : "T-force_shutdown-S-force_shutdown",
          "fields" : [
            {
              "doc" : "EMQX creates at least one lightweight process for each client connection.\n\nEach process has its own message queue (aka mailbox) to hold messages from other processes (e.g. MQTT messages) so that the process can read messages from the message queue (mailbox) at any time.\n\nIf the system is busy or the process hangs due to a busy socket (see `high_watermark`), the message queue can accumulate many messages.\n\nTo avoid excessive memory usage, EMQX will force a process to shut down when the length of its message queue exceeds `max_mailbox_size`.",
              "hash" : "V-force_shutdown-S-force_shutdown-max_mailbox_size",
              "aliases" : [
                "max_message_queue_len"
              ],
              "text" : "max_mailbox_size",
              "type" : "Integer(0..inf)",
              "default" : "1000"
            },
            {
              "doc" : "The maximum heap size of the process. If the `force_shutdown` is enabled, processes that exceed this limit will automatically exit or be forcibly killed. Messages in the process message queue (mailbox) are also part of the heap. The shutdown of a process can be divided into the following two situations:\n\n- The process actively checks the current heap size during its own operation, and actively exits after finding that it exceeds the limit.\n- The underlying scheduling system checks the current heap size after performing garbage collection for the process, and forcibly kills the process after finding that it exceeds the limit.\n\nNote: The Error logs generated by the above two will be different. The log generated by the former is similar to `...errorContext: connection_shutdown, reason: #{max => 2097152, reason => proc_heap_too_large, value => 2787348}..`,\nand the log generated by the latter is similar to `...Context: maximum heap size reached...`.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "hash" : "V-force_shutdown-S-force_shutdown-max_heap_size",
              "text" : "max_heap_size",
              "type" : "Bytesize",
              "default" : "\"32MB\""
            }
          ],
          "text" : "force_shutdown"
        }
      ],
      "hash" : "V-force_shutdown",
      "text" : "force_shutdown",
      "type" : "Struct(force_shutdown)"
    },
    {
      "doc" : "Configuration related to the EMQX durable storages.\n\nEMQX uses durable storages to offload various data, such as MQTT messages, to disc.",
      "refs" : [
        {
          "doc" : "Configuration related to the EMQX durable storages.\n\nEMQX uses durable storages to offload various data, such as MQTT messages, to disc.",
          "hash" : "T-durable_storage-S-durable_storage",
          "fields" : [
            {
              "doc" : "Configuration related to the durable storage of MQTT messages.",
              "refs" : [
                {
                  "doc" : "Builtin storage backend utilizing embedded RocksDB key-value store.\nThis backend doesn't support clustering.",
                  "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-backend",
                      "text" : "backend",
                      "type" : "String(\"builtin_local\")",
                      "default" : "builtin_local"
                    },
                    {
                      "doc" : "File system directory where the database is located.\n\nBy default, it is equal to `node.data_dir`.",
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-data_dir",
                      "text" : "data_dir",
                      "type" : "String"
                    },
                    {
                      "doc" : "The built-in durable storage partitions data into shards.\nThis configuration parameter defines the number of shards.\nPlease note that it takes effect only during the initialization of the durable storage database.\nChanging this configuration parameter after the database has been already created won't take any effect.",
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-n_shards",
                      "text" : "n_shards",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "Storage layout is a method of arranging messages from various topics and clients on disc.\n\nDepending on the type of workload and the topic structure, different types of strategies for storing the data can be employed to maximize efficiency of reading messages from the durable storage.",
                      "refs" : [
                        {
                          "doc" : "_Wildcard-optimized_ layout is designed to maximize the throughput of wildcard subscriptions covering large numbers of topics.\n\nFor example, it can handle scenarios where a very large number of clients publish data to the topics containing their client ID, such as: `sensor/%device-version%/%clientid%/temperature`, `sensor/%device-version%/%clientid%/pressure`, etc.\nThis layout will automatically group such topics into a single stream, so a client subscribing to a topic filter containing wildcards (such as `sensor/+/+/temperature`) will be able to consume messages published by all devices as a single batch.\n\nThis layout is efficient for non-wildcard subscriptions as well.",
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_wildcard_optimized_v2",
                          "fields" : [
                            {
                              "doc" : "Wildcard-optimized layout type.",
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_wildcard_optimized_v2-type",
                              "text" : "type",
                              "type" : "String(\"wildcard_optimized_v2\")",
                              "default" : "wildcard_optimized_v2"
                            }
                          ],
                          "text" : "layout_builtin_wildcard_optimized_v2"
                        },
                        {
                          "doc" : "_Wildcard-optimized_ layout is designed to maximize the throughput of wildcard subscriptions covering large numbers of topics.\n\nFor example, it can handle scenarios where a very large number of clients publish data to the topics containing their client ID, such as: `sensor/%device-version%/%clientid%/temperature`, `sensor/%device-version%/%clientid%/pressure`, etc.\nThis layout will automatically group such topics into a single stream, so a client subscribing to a topic filter containing wildcards (such as `sensor/+/+/temperature`) will be able to consume messages published by all devices as a single batch.\n\nThis layout is efficient for non-wildcard subscriptions as well.",
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_wildcard_optimized",
                          "fields" : [
                            {
                              "doc" : "Wildcard-optimized layout type.",
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_wildcard_optimized-type",
                              "text" : "type",
                              "type" : "String(\"wildcard_optimized\")",
                              "default" : "wildcard_optimized"
                            }
                          ],
                          "text" : "layout_builtin_wildcard_optimized"
                        },
                        {
                          "doc" : "A simplistic layout type that stores all messages from all topics in chronological order in a single stream.\n\nNot recommended for production use.",
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_reference",
                          "fields" : [
                            {
                              "doc" : "Reference layout type.",
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_reference-type",
                              "text" : "type",
                              "type" : "String(\"reference\")",
                              "default" : "reference"
                            }
                          ],
                          "text" : "layout_builtin_reference"
                        }
                      ],
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-layout",
                      "text" : "layout",
                      "type" : "OneOf(Struct(layout_builtin_wildcard_optimized_v2),Struct(layout_builtin_wildcard_optimized),Struct(layout_builtin_reference))",
                      "default" : "{type = wildcard_optimized_v2}"
                    }
                  ],
                  "text" : "builtin_local"
                }
              ],
              "hash" : "V-durable_storage-S-durable_storage-messages",
              "text" : "messages",
              "type" : "OneOf(Struct(builtin_local))",
              "default" : "{backend = builtin_local}"
            }
          ],
          "text" : "durable_storage"
        }
      ],
      "hash" : "V-durable_storage",
      "text" : "durable_storage",
      "type" : "Struct(durable_storage)"
    },
    {
      "refs" : [
        {
          "doc" : "Force garbage collection in MQTT connection process after\n they process certain number of messages or bytes of data.",
          "hash" : "T-force_gc-S-force_gc",
          "fields" : [
            {
              "doc" : "GC the process after this many received messages.",
              "hash" : "V-force_gc-S-force_gc-count",
              "text" : "count",
              "type" : "Integer(0..inf)",
              "default" : "16000"
            },
            {
              "doc" : "GC the process after specified number of bytes have passed through.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "hash" : "V-force_gc-S-force_gc-bytes",
              "text" : "bytes",
              "type" : "Bytesize",
              "default" : "\"16MB\""
            }
          ],
          "text" : "force_gc"
        }
      ],
      "hash" : "V-force_gc",
      "text" : "force_gc",
      "type" : "Struct(force_gc)"
    },
    {
      "refs" : [
        {
          "doc" : "Features related to system monitoring and introspection.",
          "hash" : "T-sysmon-S-sysmon",
          "fields" : [
            {
              "refs" : [
                {
                  "doc" : "This part of the configuration is responsible for collecting\n BEAM VM events, such as long garbage collection, traffic congestion in the inter-broker\n communication, etc.",
                  "hash" : "T-sysmon-S-sysmon-vm-S-sysmon_vm",
                  "fields" : [
                    {
                      "doc" : "The time interval for the periodic process count limit check, used together with `process_high_watermark` and `process_low_watermark`.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_check_interval",
                      "text" : "process_check_interval",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "The threshold, as percentage of processes, for how many\n processes can simultaneously exist at the local node before the corresponding\n alarm is raised.",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_high_watermark",
                      "text" : "process_high_watermark",
                      "type" : "String",
                      "default" : "\"80%\""
                    },
                    {
                      "doc" : "The threshold, as percentage of processes, for how many\n processes can simultaneously exist at the local node before the corresponding\n alarm is cleared.",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_low_watermark",
                      "text" : "process_low_watermark",
                      "type" : "String",
                      "default" : "\"60%\""
                    },
                    {
                      "doc" : "When an Erlang process spends long time to perform garbage collection, a warning level <code>long_gc</code> log is emitted,\nand an MQTT message is published to the system topic <code>$SYS/sysmon/long_gc</code>.",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-long_gc",
                      "text" : "long_gc",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "When the Erlang VM detect a task scheduled for too long, a warning level 'long_schedule' log is emitted,\nand an MQTT message is published to the system topic <code>$SYS/sysmon/long_schedule</code>.",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-long_schedule",
                      "text" : "long_schedule",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "\"240ms\""
                    },
                    {
                      "doc" : "When the heap memory occupied by a process exceeds the size specified by `large_heap`, the system will write a warning level `large_heap` log, and an MQTT message will be published to the system topic `$SYS/sysmon/large_heap`.",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-large_heap",
                      "text" : "large_heap",
                      "type" : "OneOf(String(\"disabled\"),Bytesize)",
                      "default" : "\"32MB\""
                    },
                    {
                      "doc" : "When the RPC connection used to communicate with other nodes in the cluster is overloaded,\nthere will be a <code>busy_dist_port</code> warning log,\nand an MQTT message is published to system topic <code>$SYS/sysmon/busy_dist_port</code>.",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-busy_dist_port",
                      "text" : "busy_dist_port",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "When a port (e.g. TCP socket) is overloaded, there will be a <code>busy_port</code> warning log,\nand an MQTT message is published to the system topic <code>$SYS/sysmon/busy_port</code>.",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-busy_port",
                      "text" : "busy_port",
                      "type" : "Boolean",
                      "default" : "true"
                    }
                  ],
                  "text" : "sysmon_vm"
                }
              ],
              "hash" : "V-sysmon-S-sysmon-vm",
              "text" : "vm",
              "type" : "Struct(sysmon_vm)"
            },
            {
              "refs" : [
                {
                  "doc" : "This part of the configuration is responsible for monitoring\n the host OS health, such as free memory, disk space, CPU load, etc.",
                  "hash" : "T-sysmon-S-sysmon-os-S-sysmon_os",
                  "fields" : [
                    {
                      "doc" : "The time interval for the periodic CPU check. Disabled on Windows platform.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_check_interval",
                      "text" : "cpu_check_interval",
                      "type" : "Duration",
                      "default" : "\"60s\""
                    },
                    {
                      "doc" : "The threshold, as percentage of system CPU load,\n for how much system cpu can be used before the corresponding alarm is raised. Disabled on Windows platform",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_high_watermark",
                      "text" : "cpu_high_watermark",
                      "type" : "String",
                      "default" : "\"80%\""
                    },
                    {
                      "doc" : "The threshold, as percentage of system CPU load,\n for how much system cpu can be used before the corresponding alarm is cleared. Disabled on Windows platform",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_low_watermark",
                      "text" : "cpu_low_watermark",
                      "type" : "String",
                      "default" : "\"60%\""
                    },
                    {
                      "doc" : "The time interval for the periodic memory check. Disabled on Windows platform.",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-mem_check_interval",
                      "text" : "mem_check_interval",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "\"60s\""
                    },
                    {
                      "doc" : "The threshold, as percentage of system memory,\n for how much system memory can be allocated before the corresponding alarm is raised. Disabled on Windows platform",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-sysmem_high_watermark",
                      "text" : "sysmem_high_watermark",
                      "type" : "String",
                      "default" : "\"70%\""
                    },
                    {
                      "doc" : "The threshold, as percentage of system memory,\n for how much system memory can be allocated by one Erlang process before\n the corresponding alarm is raised. Disabled on Windows platform.",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-procmem_high_watermark",
                      "text" : "procmem_high_watermark",
                      "type" : "String",
                      "default" : "\"5%\""
                    }
                  ],
                  "text" : "sysmon_os"
                }
              ],
              "hash" : "V-sysmon-S-sysmon-os",
              "text" : "os",
              "type" : "Struct(sysmon_os)"
            }
          ],
          "text" : "sysmon"
        }
      ],
      "hash" : "V-sysmon",
      "text" : "sysmon",
      "type" : "Struct(sysmon)"
    },
    {
      "refs" : [
        {
          "doc" : "Settings for the alarms.",
          "hash" : "T-alarm-S-alarm",
          "fields" : [
            {
              "doc" : "The actions triggered when the alarm is activated.<br/>Currently, the following actions are supported: <code>log</code> and <code>publish</code>.\n<code>log</code> is to write the alarm to log (console or file).\n<code>publish</code> is to publish the alarm as an MQTT message to the system topics:\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/activate</code> and\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/deactivate</code>",
              "hash" : "V-alarm-S-alarm-actions",
              "text" : "actions",
              "type" : "Array(Enum(log,publish))",
              "default" : "[log, publish]"
            },
            {
              "doc" : "The maximum number of historical alarms that can be stored.\n\nWhen the maximum number is reached, the oldest historical alarms will be deleted to store new historical alarms.",
              "hash" : "V-alarm-S-alarm-size_limit",
              "text" : "size_limit",
              "type" : "Integer(1..3000)",
              "default" : "1000"
            },
            {
              "doc" : "The validity period of historical alarms. Calculated from the time of activation of the historical alarm instead of the time of cancelation.\n\nIf it exists longer than the validity period, the alarm will be deleted.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-alarm-S-alarm-validity_period",
              "text" : "validity_period",
              "type" : "Duration",
              "default" : "\"24h\""
            }
          ],
          "text" : "alarm"
        }
      ],
      "hash" : "V-alarm",
      "text" : "alarm",
      "type" : "Struct(alarm)"
    },
    {
      "refs" : [
        {
          "doc" : "This config controls the allowed maximum number of `CONNECT` packets received\nfrom the same clientid in a time frame defined by `window_time`.\nAfter the limit is reached, successive `CONNECT` requests are forbidden\n(banned) until the end of the time period defined by `ban_time`.",
          "hash" : "T-flapping_detect-S-flapping_detect",
          "fields" : [
            {
              "doc" : "Enable flapping connection detection feature.",
              "hash" : "V-flapping_detect-S-flapping_detect-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "The time window for flapping detection.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-flapping_detect-S-flapping_detect-window_time",
              "text" : "window_time",
              "type" : "Duration",
              "default" : "\"1m\""
            },
            {
              "doc" : "The maximum number of disconnects allowed for a MQTT Client in `window_time`",
              "hash" : "V-flapping_detect-S-flapping_detect-max_count",
              "text" : "max_count",
              "type" : "Integer(0..+inf)",
              "default" : "15"
            },
            {
              "doc" : "How long the flapping clientid will be banned.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-flapping_detect-S-flapping_detect-ban_time",
              "text" : "ban_time",
              "type" : "Duration",
              "default" : "\"5m\""
            }
          ],
          "text" : "flapping_detect"
        }
      ],
      "hash" : "V-flapping_detect",
      "text" : "flapping_detect",
      "type" : "Struct(flapping_detect)"
    },
    {
      "refs" : [
        {
          "doc" : "Connectors that are used to connect to external systems",
          "hash" : "T-connectors-S-connectors",
          "fields" : [
            {
              "doc" : "HTTP Connector Config",
              "refs" : [
                {
                  "doc" : "Configuration for an HTTP action.",
                  "hash" : "T-connectors-S-connectors-http-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "Tags to annotate this config entry.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "Descriptive text.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "The URL of the HTTP action.<br/>\nTemplate with variables is allowed in the path, but variables cannot be used in the scheme, host,\nor port part.<br/>\nFor example, <code> http://localhost:9901/${topic} </code> is allowed, but\n<code> http://${host}:9901/message </code> or <code> http://localhost:${port}/message </code>\nis not allowed.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "The headers of the HTTP request.<br/>\nTemplate with variables is allowed.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-headers",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=5\"}"
                    },
                    {
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-retry_interval",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "The type of the pool. Can be one of `random`, `hash`.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-pool_type",
                      "text" : "pool_type",
                      "type" : "Enum(random,hash)",
                      "default" : "random"
                    },
                    {
                      "doc" : "The pool size.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "Deprecated since 5.3.2.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-request",
                      "text" : "request",
                      "type" : "Map"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "Resource options.",
                      "refs" : [
                        {
                          "doc" : "Resource options.",
                          "hash" : "T-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Whether start the resource right after created.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-http",
              "text" : "http",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "MQTT Connector Config",
              "refs" : [
                {
                  "doc" : "Configurations for an MQTT connector.",
                  "hash" : "T-connectors-S-connectors-mqtt-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "Tags to annotate this config entry.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "Descriptive text.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Size of the pool of MQTT clients that will publish messages to the remote broker.<br/>\nEach MQTT client will be assigned 'clientid' of the form '${clientid_prefix}:${bridge_name}:egress:${node}:${n}'\nwhere 'n' is the number of a client inside the pool.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "Resource options.",
                      "refs" : [
                        {
                          "doc" : "Resource options.",
                          "hash" : "T-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Whether start the resource right after created.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "Deprecated since v5.1.0 & e5.1.0.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-mode",
                      "text" : "mode",
                      "type" : "Enum(cluster_shareload)"
                    },
                    {
                      "doc" : "The host and port of the remote MQTT broker",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Optional prefix to prepend to the clientid used by egress bridges.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-clientid_prefix",
                      "text" : "clientid_prefix",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since v5.0.16.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-reconnect_interval",
                      "text" : "reconnect_interval",
                      "type" : "String"
                    },
                    {
                      "doc" : "The MQTT protocol version",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-proto_ver",
                      "text" : "proto_ver",
                      "type" : "Enum(v3,v4,v5)",
                      "default" : "v4"
                    },
                    {
                      "doc" : "If enable bridge mode.\nNOTE: This setting is only for MQTT protocol version older than 5.0, and the remote MQTT\nbroker MUST support this feature.\nIf bridge_mode is set to true, the bridge will indicate to the remote broker that it is a bridge not an ordinary client.\nThis means that loop detection will be more effective and that retained messages will be propagated correctly.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-bridge_mode",
                      "text" : "bridge_mode",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "The username of the MQTT protocol",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "The password of the MQTT protocol<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Whether to start a clean session when reconnecting a remote broker for ingress bridge",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-clean_start",
                      "text" : "clean_start",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,\n- `s` for seconds,\n- `m` for minutes,\n- `h` for hours;\n<br/>or combination of whereof: `1h5m0s`",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-keepalive",
                      "text" : "keepalive",
                      "type" : "String",
                      "default" : "\"300s\""
                    },
                    {
                      "doc" : "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,\n- `s` for seconds,\n- `m` for minutes,\n- `h` for hours;\n<br/>or combination of whereof: `1h5m0s`",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-retry_interval",
                      "text" : "retry_interval",
                      "type" : "String",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "Max inflight (sent, but un-acked) messages of the MQTT protocol",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-max_inflight",
                      "text" : "max_inflight",
                      "type" : "Integer(0..+inf)",
                      "default" : "32"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-mqtt",
              "text" : "mqtt",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "ElasticSearch Connector Config",
              "refs" : [
                {
                  "doc" : "Configuration for ElasticSearch bridge.",
                  "hash" : "T-connectors-S-connectors-elasticsearch-S-config",
                  "fields" : [
                    {
                      "doc" : "Tags to annotate this config entry.",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "Descriptive text.",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "The type of the pool. Can be one of `random`, `hash`.",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-pool_type",
                      "text" : "pool_type",
                      "type" : "Enum(random,hash)",
                      "default" : "random"
                    },
                    {
                      "doc" : "The pool size.",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "SSL connection settings.",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "Resource options.",
                      "refs" : [
                        {
                          "doc" : "Resource options.",
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Whether start the resource right after created.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Elasticsearch default port 9200 is used if `[:Port]` is not specified.",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-server",
                      "text" : "server",
                      "type" : "String",
                      "default" : "\"127.0.0.1:9200\""
                    },
                    {
                      "doc" : "Authentication configuration",
                      "refs" : [
                        {
                          "doc" : "Basic Authentication",
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic",
                          "fields" : [
                            {
                              "doc" : "The username as configured at the ElasticSearch REST interface",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "The password as configured at the ElasticSearch REST interface<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_basic"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication",
                      "text" : "authentication",
                      "type" : "OneOf(Struct(auth_basic))"
                    }
                  ],
                  "text" : "config"
                }
              ],
              "hash" : "V-connectors-S-connectors-elasticsearch",
              "text" : "elasticsearch",
              "type" : "Map($name->Struct(config))"
            }
          ],
          "text" : "connectors"
        }
      ],
      "hash" : "V-connectors",
      "text" : "connectors",
      "type" : "Struct(connectors)"
    },
    {
      "refs" : [
        {
          "doc" : "Configuration for actions.",
          "hash" : "T-actions-S-actions",
          "fields" : [
            {
              "doc" : "HTTP Action Config",
              "refs" : [
                {
                  "doc" : "Configuration for an HTTP action.",
                  "hash" : "T-actions-S-actions-http-S-http_action",
                  "fields" : [
                    {
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "hash" : "V-actions-S-actions-http-S-http_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "Tags to annotate this config entry.",
                      "hash" : "V-actions-S-actions-http-S-http_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "Descriptive text.",
                      "hash" : "V-actions-S-actions-http-S-http_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "The parameters for HTTP action.",
                      "refs" : [
                        {
                          "doc" : "The parameters for HTTP action.",
                          "hash" : "T-actions-S-actions-http-S-http_action-parameters-S-parameters_opts",
                          "fields" : [
                            {
                              "doc" : "The URL path for this Action.<br/>\nThis path will be appended to the Connector's <code>url</code> configuration to form the full\nURL address.\nTemplate with variables is allowed in this option. For example, <code>/room/{$room_no}</code><br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-path",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "doc" : "The method of the HTTP request. All the available methods are: post, put, get, delete.<br/>\nTemplate with variables is allowed.",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-method",
                              "text" : "method",
                              "type" : "Enum(post,put,get,delete)",
                              "default" : "post"
                            },
                            {
                              "doc" : "The headers of the HTTP request.<br/>\nTemplate with variables is allowed.",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-headers",
                              "text" : "headers",
                              "type" : "Map",
                              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=5\"}"
                            },
                            {
                              "doc" : "The body of the HTTP request.<br/>\nIf not provided, the body will be a JSON object of all the available fields.<br/>\nThere, 'all the available fields' means the context of a MQTT message when\nthis webhook is triggered by receiving a MQTT message (the `local_topic` is set),\nor the context of the event when this webhook is triggered by a rule (i.e. this\nwebhook is used as an action of a rule).<br/>\nTemplate with variables is allowed.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-body",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP request max retry times if failed.",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            },
                            {
                              "doc" : "Deprecated since v5.0.26.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-request_timeout",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "parameters_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-http-S-http_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(parameters_opts)"
                    },
                    {
                      "doc" : "Resource options.",
                      "refs" : [
                        {
                          "doc" : "Resource options.",
                          "hash" : "T-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-http-S-http_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "http_action"
                }
              ],
              "hash" : "V-actions-S-actions-http",
              "aliases" : [
                "webhook"
              ],
              "text" : "http",
              "type" : "Map($name->Struct(http_action))"
            },
            {
              "doc" : "MQTT Publisher Action Config",
              "refs" : [
                {
                  "doc" : "Action configs.",
                  "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action",
                  "fields" : [
                    {
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "Action specific configs.",
                      "refs" : [
                        {
                          "doc" : "Action specific configs.",
                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "Forward to which topic of the remote broker.<br/>\nTemplate with variables is allowed.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "The QoS of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-qos",
                              "text" : "qos",
                              "type" : "OneOf(Integer(0..2),String)",
                              "default" : "1"
                            },
                            {
                              "doc" : "The 'retain' flag of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-retain",
                              "text" : "retain",
                              "type" : "OneOf(Boolean,String)",
                              "default" : "false"
                            },
                            {
                              "doc" : "The payload of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-payload",
                              "text" : "payload",
                              "type" : "String"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "Tags to annotate this config entry.",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "Descriptive text.",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Resource options.",
                      "refs" : [
                        {
                          "doc" : "Creation options.",
                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "mqtt_publisher_action"
                }
              ],
              "hash" : "V-actions-S-actions-mqtt",
              "text" : "mqtt",
              "type" : "Map($name->Struct(mqtt_publisher_action))"
            },
            {
              "doc" : "Elasticsearch Bridge",
              "refs" : [
                {
                  "doc" : "ElasticSearch Action Configuration",
                  "hash" : "T-actions-S-actions-elasticsearch-S-action_config",
                  "fields" : [
                    {
                      "doc" : "ElasticSearch action parameters",
                      "refs" : [
                        {
                          "doc" : "Adds a JSON document to the specified index and makes it searchable.\nIf the target is an index and the document already exists,\nthe request updates the document and increments its version.",
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create",
                          "fields" : [
                            {
                              "doc" : "create",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-action",
                              "text" : "action",
                              "type" : "String(\"create\")"
                            },
                            {
                              "doc" : "Name of index, or index alias to perform the action on.\nThis parameter is required.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-index",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "doc" : "The document ID. If no ID is specified, a document ID is automatically generated.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-id",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "doc" : "JSON document. If undefined, rule engine will use JSON format to serialize all visible inputs, such as clientid, topic, payload etc.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-doc",
                              "text" : "doc",
                              "type" : "String"
                            },
                            {
                              "doc" : "Custom value used to route operations to a specific shard.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-routing",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "doc" : "If true, the request’s actions must target an index alias. Defaults to false",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-require_alias",
                              "text" : "require_alias",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "Set to false If a document with the specified _id already exists(conflict), the operation will fail.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-overwrite",
                              "text" : "overwrite",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "HTTP request max retry times if failed.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "text" : "action_create"
                        },
                        {
                          "doc" : "Removes a JSON document from the specified index.",
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete",
                          "fields" : [
                            {
                              "doc" : "delete",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-action",
                              "text" : "action",
                              "type" : "String(\"delete\")"
                            },
                            {
                              "doc" : "Name of index, or index alias to perform the action on.\nThis parameter is required.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-index",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "doc" : "The document ID. If no ID is specified, a document ID is automatically generated.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-id",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "doc" : "Custom value used to route operations to a specific shard.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-routing",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP request max retry times if failed.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "text" : "action_delete"
                        },
                        {
                          "doc" : "Updates a document using the specified doc.",
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update",
                          "fields" : [
                            {
                              "doc" : "update",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-action",
                              "text" : "action",
                              "type" : "String(\"update\")"
                            },
                            {
                              "doc" : "Name of index, or index alias to perform the action on.\nThis parameter is required.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-index",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "doc" : "The document ID. If no ID is specified, a document ID is automatically generated.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-id",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "doc" : "JSON document. If undefined, rule engine will use JSON format to serialize all visible inputs, such as clientid, topic, payload etc.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-doc",
                              "text" : "doc",
                              "type" : "String"
                            },
                            {
                              "doc" : "Instead of sending a partial doc plus an upsert doc,\nyou can set doc_as_upsert to true to use the contents of doc as the upsert value.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-doc_as_upsert",
                              "text" : "doc_as_upsert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Custom value used to route operations to a specific shard.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-routing",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "doc" : "If true, the request’s actions must target an index alias. Defaults to false",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-require_alias",
                              "text" : "require_alias",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "HTTP request max retry times if failed.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "text" : "action_update"
                        }
                      ],
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(action_create),Struct(action_delete),Struct(action_update))"
                    },
                    {
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "Tags to annotate this config entry.",
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "Descriptive text.",
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Resource options.",
                      "refs" : [
                        {
                          "doc" : "Resource options.",
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-elasticsearch",
              "text" : "elasticsearch",
              "type" : "Map($action_name->Struct(action_config))"
            }
          ],
          "text" : "actions"
        }
      ],
      "hash" : "V-actions",
      "text" : "actions",
      "type" : "Struct(actions)"
    },
    {
      "refs" : [
        {
          "doc" : "Configuration for sources.",
          "hash" : "T-sources-S-sources",
          "fields" : [
            {
              "doc" : "MQTT Subscriber Source Config",
              "refs" : [
                {
                  "doc" : "Source configs.",
                  "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "doc" : "Source specific configs.",
                          "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters",
                          "fields" : [
                            {
                              "doc" : "Receive messages from which topic of the remote broker",
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "The QoS level to be used when subscribing to the remote broker",
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters-qos",
                              "text" : "qos",
                              "type" : "Integer(0..2)",
                              "default" : "1"
                            }
                          ],
                          "text" : "ingress_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters",
                      "text" : "parameters",
                      "type" : "Struct(ingress_parameters)"
                    },
                    {
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "Tags to annotate this config entry.",
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "Descriptive text.",
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Resource options.",
                      "refs" : [
                        {
                          "doc" : "Creation options.",
                          "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "mqtt_subscriber_source"
                }
              ],
              "hash" : "V-sources-S-sources-mqtt",
              "text" : "mqtt",
              "type" : "Map($name->Struct(mqtt_subscriber_source))"
            }
          ],
          "text" : "sources"
        }
      ],
      "hash" : "V-sources",
      "text" : "sources",
      "type" : "Struct(sources)"
    },
    {
      "refs" : [
        {
          "doc" : "Configuration related to handling `PUBLISH` packets with a `retain` flag set to 1.",
          "hash" : "T-retainer-S-retainer",
          "fields" : [
            {
              "doc" : "Expired retained messages will not be delivered again, and a setting of 0 means that retained messages will never expire.\n\nHowever, if the `Message-Expiry-Interval` property is specified in the MQTT message, the value of that property prevails.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-retainer-S-retainer-msg_expiry_interval",
              "text" : "msg_expiry_interval",
              "type" : "Duration",
              "default" : "\"0s\""
            },
            {
              "doc" : "The time interval for checking and clearing expired retained messages. This can prevent expired retained messages from being stored for a long time.\n\nIf `msg_clear_interval` is set to 0, that is, expired retained messages are not actively checked regularly, EMQX will only check and delete expired retained messages when preparing for delivery.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-retainer-S-retainer-msg_clear_interval",
              "text" : "msg_clear_interval",
              "type" : "Duration",
              "default" : "\"0s\""
            },
            {
              "doc" : "The maximum size of retained messages allowed to be stored. EMQX will refuse to store retained messages larger than this size and output an Error log with the keyword 'retain_failed_for_payload_size_exceeded_limit'.\n\n0 means unlimited retained message size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "hash" : "V-retainer-S-retainer-max_payload_size",
              "text" : "max_payload_size",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "When the retained flag of the `PUBLISH` message is set and Payload is empty,\nwhether to continue to publish the message.\nSee:\nhttp://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718038",
              "hash" : "V-retainer-S-retainer-stop_publish_clear_msg",
              "text" : "stop_publish_clear_msg",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "The maximum rate of delivering retained messages",
              "hash" : "V-retainer-S-retainer-delivery_rate",
              "aliases" : [
                "deliver_rate"
              ],
              "text" : "delivery_rate",
              "type" : "String",
              "default" : "\"1000/s\""
            },
            {
              "doc" : "Settings for the database storing the retained messages.",
              "refs" : [
                {
                  "doc" : "Configuration of the internal database storing retained messages.",
                  "hash" : "T-retainer-S-retainer-backend-S-mnesia_config",
                  "fields" : [
                    {
                      "doc" : "Backend type.",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-type",
                      "text" : "type",
                      "type" : "String(\"built_in_database\")",
                      "default" : "built_in_database"
                    },
                    {
                      "doc" : "Specifies whether the messages are stored in RAM or persisted on disc.",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-storage_type",
                      "text" : "storage_type",
                      "type" : "Enum(ram,disc)",
                      "default" : "ram"
                    },
                    {
                      "doc" : "Maximum number of retained messages. 0 means no limit.",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-max_retained_messages",
                      "text" : "max_retained_messages",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Retainer index specifications: list of arrays of positive ascending integers. Each array specifies an index. Numbers in an index specification are 1-based word positions in topics. Words from specified positions will be used for indexing.<br/>For example, it is good to have <code>[2, 4]</code> index to optimize <code>+/X/+/Y/...</code> topic wildcard subscriptions.",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-index_specs",
                      "text" : "index_specs",
                      "type" : "Array(Integer)",
                      "default" : "[[1, 2, 3], [1, 3], [2, 3], [3]]"
                    }
                  ],
                  "text" : "mnesia_config"
                }
              ],
              "hash" : "V-retainer-S-retainer-backend",
              "text" : "backend",
              "type" : "Struct(mnesia_config)"
            }
          ],
          "text" : "retainer"
        }
      ],
      "hash" : "V-retainer",
      "text" : "retainer",
      "type" : "Struct(retainer)"
    },
    {
      "refs" : [
        {
          "doc" : "Whether to enable telemetry to allow EMQX to collect relevant usage information and share it with EMQ for the purpose of enhancing your product experience, and in no case will EMQX collect personal information about you, such as your MAC address, IP address, content of messages sent.\n\nSee https://docs.emqx.com/en/emqx/latest/telemetry/telemetry.html for more details.",
          "hash" : "T-telemetry-S-telemetry",
          "fields" : [
            {
              "doc" : "Set to `false` disable telemetry data report",
              "hash" : "V-telemetry-S-telemetry-enable",
              "text" : "enable",
              "type" : "Boolean"
            }
          ],
          "text" : "telemetry"
        }
      ],
      "hash" : "V-telemetry",
      "text" : "telemetry",
      "type" : "Struct(telemetry)"
    },
    {
      "refs" : [
        {
          "doc" : "Settings for the delayed module.",
          "hash" : "T-delayed-S-delayed",
          "fields" : [
            {
              "doc" : "Maximum number of delayed messages (0 is no limit).",
              "hash" : "V-delayed-S-delayed-max_delayed_messages",
              "text" : "max_delayed_messages",
              "type" : "Integer",
              "default" : "0"
            }
          ],
          "text" : "delayed"
        }
      ],
      "hash" : "V-delayed",
      "text" : "delayed",
      "type" : "Struct(delayed)"
    },
    {
      "refs" : [
        {
          "doc" : "Manage EMQX plugins.<br/>\nPlugins can be pre-built as a part of EMQX package,\nor installed as a standalone package in a location specified by\n<code>install_dir</code> config key<br/>\nThe standalone-installed plugins are referred to as 'external' plugins.",
          "hash" : "T-plugins-S-plugins",
          "fields" : [
            {
              "doc" : "An array of plugins in the desired states.<br/>\nThe plugins are started in the defined order",
              "refs" : [
                {
                  "doc" : "A per-plugin config to describe the desired state of the plugin.",
                  "hash" : "T-plugins-S-plugins-states-S-state",
                  "fields" : [
                    {
                      "doc" : "The `{name}-{version}` of the plugin.<br/>\nIt should match the plugin application name-version as plugin release package name<br/>\nFor example: `my_plugin-0.1.0`.",
                      "hash" : "V-plugins-S-plugins-states-S-state-name_vsn",
                      "text" : "name_vsn",
                      "type" : "String"
                    }
                  ],
                  "text" : "state"
                }
              ],
              "hash" : "V-plugins-S-plugins-states",
              "text" : "states",
              "type" : "Array(Struct(state))",
              "default" : "[]"
            },
            {
              "doc" : "The installation directory for the external plugins.\nThe plugin beam files and configuration files should reside in\nthe subdirectory named as <code>emqx_foo_bar-0.1.0</code>.\n<br/>\nNOTE: For security reasons, this directory should **NOT** be writable\nby anyone except <code>emqx</code> (or any user which runs EMQX).",
              "hash" : "V-plugins-S-plugins-install_dir",
              "text" : "install_dir",
              "type" : "String",
              "default" : "plugins"
            },
            {
              "doc" : "Deprecated since 5.0.24.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-plugins-S-plugins-check_interval",
              "text" : "check_interval",
              "type" : "Duration"
            }
          ],
          "text" : "plugins"
        }
      ],
      "hash" : "V-plugins",
      "text" : "plugins",
      "type" : "Struct(plugins)"
    },
    {
      "refs" : [
        {
          "doc" : "Configuration for EMQX dashboard.",
          "hash" : "T-dashboard-S-dashboard",
          "fields" : [
            {
              "doc" : "HTTP(s) listeners are identified by their protocol type and are\nused to serve dashboard UI and restful HTTP API.\nListeners must have a unique combination of port number and IP address.\nFor example, an HTTP listener can listen on all configured IP addresses\non a given port for a machine by specifying the IP address 0.0.0.0.\nAlternatively, the HTTP listener can specify a unique IP address for each listener,\nbut use the same port.",
              "refs" : [
                {
                  "doc" : "Configuration for the dashboard listener.",
                  "hash" : "T-dashboard-S-dashboard-listeners-S-listeners",
                  "fields" : [
                    {
                      "doc" : "TCP listeners",
                      "refs" : [
                        {
                          "doc" : "Configuration for the dashboard listener (plaintext).",
                          "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-http-S-http",
                          "fields" : [
                            {
                              "doc" : "Bind the listener to a specified address and port number, for example `127.0.0.1:18083`.\nIf configured with just the port number (e.g. `18083`) it's equivalent to binding to all addresses `0.0.0.0`.\nThe listener is disabled if `bind` is `0`.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-bind",
                              "text" : "bind",
                              "type" : "String",
                              "default" : "0"
                            },
                            {
                              "doc" : "Socket acceptor pool size for TCP protocols. Default is the number of schedulers online",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-num_acceptors",
                              "text" : "num_acceptors",
                              "type" : "Integer",
                              "default" : "20"
                            },
                            {
                              "doc" : "The maximum number of concurrent connections allowed by the listener.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-max_connections",
                              "text" : "max_connections",
                              "type" : "Integer",
                              "default" : "512"
                            },
                            {
                              "doc" : "Defines the maximum length that the queue of pending connections can grow to.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-backlog",
                              "text" : "backlog",
                              "type" : "Integer",
                              "default" : "1024"
                            },
                            {
                              "doc" : "Send timeout for the socket.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "doc" : "Enable IPv6 support, default is false, which means IPv4 only.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-inet6",
                              "text" : "inet6",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Disable IPv4-to-IPv6 mapping for the listener.\nThe configuration is only valid when the inet6 is true.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-ipv6_v6only",
                              "text" : "ipv6_v6only",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Enable support for `HAProxy` header. Be aware once enabled regular HTTP requests can't be handled anymore.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-proxy_header",
                              "text" : "proxy_header",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "text" : "http"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http",
                      "text" : "http",
                      "type" : "Struct(http)"
                    },
                    {
                      "doc" : "SSL listeners",
                      "refs" : [
                        {
                          "doc" : "Configuration for the dashboard listener (TLS).",
                          "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-https-S-https",
                          "fields" : [
                            {
                              "doc" : "Bind the listener to a specified address and port number, for example `127.0.0.1:18083`.\nIf configured with just the port number (e.g. `18083`) it's equivalent to binding to all addresses `0.0.0.0`.\nThe listener is disabled if `bind` is `0`.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-bind",
                              "text" : "bind",
                              "type" : "String",
                              "default" : "0"
                            },
                            {
                              "doc" : "SSL/TLS options for the dashboard listener.",
                              "refs" : [
                                {
                                  "doc" : "SSL/TLS options for the dashboard listener.",
                                  "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options",
                                  "fields" : [
                                    {
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-cacertfile",
                                      "text" : "cacertfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                    },
                                    {
                                      "doc" : "Deprecated since 5.1.4.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-cacerts",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-certfile",
                                      "text" : "certfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                    },
                                    {
                                      "doc" : "PEM format private key file.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-keyfile",
                                      "text" : "keyfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                    },
                                    {
                                      "doc" : "Enable or disable peer verification.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-verify",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-reuse_sessions",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-depth",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-password",
                                      "text" : "password",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-versions",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-ciphers",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-secure_renegotiate",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-log_level",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-hibernate_after",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-dhfile",
                                      "text" : "dhfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-fail_if_no_peer_cert",
                                      "text" : "fail_if_no_peer_cert",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-honor_cipher_order",
                                      "text" : "honor_cipher_order",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-client_renegotiation",
                                      "text" : "client_renegotiation",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-handshake_timeout",
                                      "text" : "handshake_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "text" : "ssl_options"
                                }
                              ],
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_options)"
                            },
                            {
                              "doc" : "Socket acceptor pool size for TCP protocols. Default is the number of schedulers online",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-num_acceptors",
                              "text" : "num_acceptors",
                              "type" : "Integer",
                              "default" : "20"
                            },
                            {
                              "doc" : "The maximum number of concurrent connections allowed by the listener.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-max_connections",
                              "text" : "max_connections",
                              "type" : "Integer",
                              "default" : "512"
                            },
                            {
                              "doc" : "Defines the maximum length that the queue of pending connections can grow to.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-backlog",
                              "text" : "backlog",
                              "type" : "Integer",
                              "default" : "1024"
                            },
                            {
                              "doc" : "Send timeout for the socket.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "doc" : "Enable IPv6 support, default is false, which means IPv4 only.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-inet6",
                              "text" : "inet6",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Disable IPv4-to-IPv6 mapping for the listener.\nThe configuration is only valid when the inet6 is true.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ipv6_v6only",
                              "text" : "ipv6_v6only",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Enable support for `HAProxy` header. Be aware once enabled regular HTTP requests can't be handled anymore.",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-proxy_header",
                              "text" : "proxy_header",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "text" : "https"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https",
                      "text" : "https",
                      "type" : "Struct(https)"
                    }
                  ],
                  "text" : "listeners"
                }
              ],
              "hash" : "V-dashboard-S-dashboard-listeners",
              "text" : "listeners",
              "type" : "Struct(listeners)"
            },
            {
              "doc" : "The password used to initialize a database record for `admin` user.\nNOTE: Changing the default password after it has been initialized (boot up for the fist time) has no effect.\nOnce initialized, the default password `public` must be changed from dashboard or CLI as soon as possible.",
              "hash" : "V-dashboard-S-dashboard-default_password",
              "text" : "default_password",
              "type" : "String",
              "default" : "public"
            },
            {
              "doc" : "JWT token expiration time. Default is 60 minutes<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-dashboard-S-dashboard-token_expired_time",
              "text" : "token_expired_time",
              "type" : "Duration",
              "default" : "\"60m\""
            },
            {
              "doc" : "Support Cross-Origin Resource Sharing (CORS).\nAllows a server to indicate any origins (domain, scheme, or port) other than\nits own from which a browser should permit loading resources.",
              "hash" : "V-dashboard-S-dashboard-cors",
              "text" : "cors",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Enable or disable support for swagger API documentation.",
              "hash" : "V-dashboard-S-dashboard-swagger_support",
              "text" : "swagger_support",
              "type" : "Boolean",
              "default" : "true"
            }
          ],
          "text" : "dashboard"
        }
      ],
      "hash" : "V-dashboard",
      "text" : "dashboard",
      "type" : "Struct(dashboard)"
    },
    {
      "refs" : [
        {
          "doc" : "EMQX Gateway configuration root.",
          "hash" : "T-gateway-S-gateway",
          "fields" : [
            {
              "refs" : [
                {
                  "doc" : "The CoAP protocol gateway provides EMQX with the access capability of the CoAP protocol.\nIt allows publishing, subscribing, and receiving messages to EMQX in accordance\nwith a certain defined CoAP message format.",
                  "hash" : "T-gateway-S-gateway-coap-S-coap",
                  "fields" : [
                    {
                      "doc" : "The gateway server required minimum heartbeat interval.\nWhen connection mode is enabled, this parameter is used to set the minimum heartbeat interval for the connection to be alive<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-heartbeat",
                      "text" : "heartbeat",
                      "type" : "Duration(s)",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "Enable or disable connection mode.\nConnection mode is a feature of non-standard protocols. When connection mode is enabled, it is necessary to maintain the creation, authentication and alive of connection resources",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-connection_required",
                      "text" : "connection_required",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "The Notification Message will be delivered to the CoAP client if a new message received on an observed topic.\nThe type of delivered coap message can be set to:<br/>\n  - non: Non-confirmable;<br/>\n  - con: Confirmable;<br/>\n  - qos: Mapping from QoS type of received message, QoS0 -> non, QoS1,2 -> con",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-notify_type",
                      "text" : "notify_type",
                      "type" : "Enum(non,con,qos)",
                      "default" : "qos"
                    },
                    {
                      "doc" : "The Default QoS Level indicator for subscribe request.\nThis option specifies the QoS level for the CoAP Client when establishing a subscription membership, if the subscribe request is not carried `qos` option. The indicator can be set to:<br/>\n  - qos0, qos1, qos2: Fixed default QoS level<br/>\n  - coap: Dynamic QoS level by the message type of subscribe request<br/>\n    * qos0: If the subscribe request is non-confirmable<br/>\n    * qos1: If the subscribe request is confirmable",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-subscribe_qos",
                      "text" : "subscribe_qos",
                      "type" : "Enum(qos0,qos1,qos2,coap)",
                      "default" : "coap"
                    },
                    {
                      "doc" : "The Default QoS Level indicator for publish request.\nThis option specifies the QoS level for the CoAP Client when publishing a message to EMQX PUB/SUB system, if the publish request is not carried `qos` option. The indicator can be set to:<br/>\n  - qos0, qos1, qos2: Fixed default QoS level<br/>\n  - coap: Dynamic QoS level by the message type of publish request<br/>\n    * qos0: If the publish request is non-confirmable<br/>\n    * qos1: If the publish request is confirmable",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-publish_qos",
                      "text" : "publish_qos",
                      "type" : "Enum(qos0,qos1,qos2,coap)",
                      "default" : "coap"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the UDP listeners.",
                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for UDP listener.",
                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "refs" : [
                                        {
                                          "doc" : "UDP health check",
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "doc" : "The content of the request.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-request",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "The content to reply.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-reply",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-health_check",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Allow local reuse of port numbers.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for DTLS listener.",
                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Size of the acceptor pool.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "refs" : [
                                        {
                                          "doc" : "UDP health check",
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "doc" : "The content of the request.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-request",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "The content to reply.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-reply",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Allow local reuse of port numbers.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "DTLS socket options",
                                      "refs" : [
                                        {
                                          "doc" : "Settings for DTLS protocol.",
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM format private key file.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "Enable or disable peer verification.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "doc" : "Whether to enable client process statistic",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo override.",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "Template for overriding username.",
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding password.",
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding clientid.",
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "coap"
                }
              ],
              "hash" : "V-gateway-S-gateway-coap",
              "text" : "coap",
              "type" : "Struct(coap)"
            },
            {
              "refs" : [
                {
                  "doc" : "Settings for EMQX extension protocol (exproto).",
                  "hash" : "T-gateway-S-gateway-exproto-S-exproto",
                  "fields" : [
                    {
                      "doc" : "Configurations for starting the <code>ConnectionAdapter</code> service",
                      "refs" : [
                        {
                          "doc" : "Settings for the exproto gRPC server.",
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server",
                          "fields" : [
                            {
                              "doc" : "Listening address and port for the gRPC server.",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-bind",
                              "text" : "bind",
                              "type" : "String"
                            },
                            {
                              "doc" : "SSL configuration for the gRPC server.",
                              "refs" : [
                                {
                                  "doc" : "SSL configuration for the server.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts",
                                  "fields" : [
                                    {
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-cacertfile",
                                      "text" : "cacertfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                    },
                                    {
                                      "doc" : "Deprecated since 5.1.4.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-cacerts",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-certfile",
                                      "text" : "certfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                    },
                                    {
                                      "doc" : "PEM format private key file.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-keyfile",
                                      "text" : "keyfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                    },
                                    {
                                      "doc" : "Enable or disable peer verification.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-verify",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-reuse_sessions",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-depth",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-password",
                                      "text" : "password",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-versions",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-ciphers",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-secure_renegotiate",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-log_level",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-hibernate_after",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-dhfile",
                                      "text" : "dhfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-fail_if_no_peer_cert",
                                      "text" : "fail_if_no_peer_cert",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-honor_cipher_order",
                                      "text" : "honor_cipher_order",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-client_renegotiation",
                                      "text" : "client_renegotiation",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-handshake_timeout",
                                      "text" : "handshake_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "text" : "ssl_server_opts"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_server_opts)"
                            }
                          ],
                          "text" : "exproto_grpc_server"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server",
                      "text" : "server",
                      "type" : "Struct(exproto_grpc_server)"
                    },
                    {
                      "doc" : "Configurations for request to <code>ConnectionHandler</code> service",
                      "refs" : [
                        {
                          "doc" : "Settings for the exproto gRPC connection handler.",
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler",
                          "fields" : [
                            {
                              "doc" : "gRPC server address.",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-address",
                              "text" : "address",
                              "type" : "String"
                            },
                            {
                              "doc" : "The service name to handle the connection events.\nIn the initial version, we expected to use streams to improve the efficiency\nof requests in `ConnectionHandler`. But unfortunately, events between different\nstreams are out of order. It causes the `OnSocketCreated` event to may arrive\nlater than `OnReceivedBytes`.\nSo we added the `ConnectionUnaryHandler` service since v5.0.25 and forced\nthe use of Unary in it to avoid ordering problems.",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-service_name",
                              "text" : "service_name",
                              "type" : "OneOf(String(\"ConnectionHandler\"),String(\"ConnectionUnaryHandler\"))",
                              "default" : "ConnectionUnaryHandler"
                            },
                            {
                              "doc" : "SSL configuration for the gRPC client.",
                              "refs" : [
                                {
                                  "doc" : "Socket options for SSL clients.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts",
                                  "fields" : [
                                    {
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-cacertfile",
                                      "text" : "cacertfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "Deprecated since 5.1.4.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-cacerts",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-certfile",
                                      "text" : "certfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "PEM format private key file.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-keyfile",
                                      "text" : "keyfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "Enable or disable peer verification.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-verify",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-reuse_sessions",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-depth",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-password",
                                      "text" : "password",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-versions",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-ciphers",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-secure_renegotiate",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-log_level",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-hibernate_after",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "doc" : "Enable TLS.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-server_name_indication",
                                      "text" : "server_name_indication",
                                      "type" : "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "text" : "ssl_client_opts"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_client_opts)"
                            }
                          ],
                          "text" : "exproto_grpc_handler"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler",
                      "text" : "handler",
                      "type" : "Struct(exproto_grpc_handler)"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for TCP and UDP listeners.",
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners",
                          "fields" : [
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for TCP listener.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Size of the acceptor pool.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "Setting the TCP socket options.",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Close the connection if send timeout.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "The TCP_NODELAY flag for the connections.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none'",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for SSL listener.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Size of the acceptor pool.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "Setting the TCP socket options.",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Close the connection if send timeout.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "The TCP_NODELAY flag for the connections.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none'",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL Socket options.",
                                      "refs" : [
                                        {
                                          "doc" : "Socket options for SSL connections.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM format private key file.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "Enable or disable peer verification.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            },
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for UDP listener.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "refs" : [
                                        {
                                          "doc" : "UDP health check",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "doc" : "The content of the request.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-request",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "The content to reply.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-reply",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-health_check",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Allow local reuse of port numbers.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for DTLS listener.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Size of the acceptor pool.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "refs" : [
                                        {
                                          "doc" : "UDP health check",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "doc" : "The content of the request.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-request",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "The content to reply.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-reply",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-health_check",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Allow local reuse of port numbers.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "DTLS socket options",
                                      "refs" : [
                                        {
                                          "doc" : "Settings for DTLS protocol.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM format private key file.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "Enable or disable peer verification.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "text" : "tcp_udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_udp_listeners)"
                    },
                    {
                      "doc" : "Whether to enable client process statistic",
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo override.",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "Template for overriding username.",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding password.",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding clientid.",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "exproto"
                }
              ],
              "hash" : "V-gateway-S-gateway-exproto",
              "text" : "exproto",
              "type" : "Struct(exproto)"
            },
            {
              "refs" : [
                {
                  "doc" : "The LwM2M protocol gateway.",
                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m",
                  "fields" : [
                    {
                      "doc" : "The Directory for LwM2M Resource definition.",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-xml_dir",
                      "text" : "xml_dir",
                      "type" : "String"
                    },
                    {
                      "doc" : "Minimum value of lifetime allowed to be set by the LwM2M client.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-lifetime_min",
                      "text" : "lifetime_min",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "Maximum value of lifetime allowed to be set by the LwM2M client.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-lifetime_max",
                      "text" : "lifetime_max",
                      "type" : "Duration",
                      "default" : "\"86400s\""
                    },
                    {
                      "doc" : "The value of the time window during which the network link is considered valid by the LwM2M Gateway in QMode mode.\nFor example, after receiving an update message from a client, any messages within this time window are sent directly to the LwM2M client, and all messages beyond this time window are temporarily stored in memory.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-qmode_time_window",
                      "text" : "qmode_time_window",
                      "type" : "Duration(s)",
                      "default" : "\"22s\""
                    },
                    {
                      "doc" : "Automatically observe the object list of REGISTER packet.",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-auto_observe",
                      "text" : "auto_observe",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Policy for publishing UPDATE event message.<br/>\n  - always: send update events as long as the UPDATE request is received.<br/>\n  - contains_object_list: send update events only if the UPDATE request carries any Object List",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-update_msg_publish_condition",
                      "text" : "update_msg_publish_condition",
                      "type" : "Enum(always,contains_object_list)",
                      "default" : "contains_object_list"
                    },
                    {
                      "doc" : "Topic configuration for LwM2M's gateway publishing and subscription.",
                      "refs" : [
                        {
                          "doc" : "MQTT topics that correspond to LwM2M events.",
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators",
                          "fields" : [
                            {
                              "doc" : "The topic for receiving downstream commands.\nFor each new LwM2M client that succeeds in going online, the gateway creates a subscription relationship to receive downstream commands and send it to the LwM2M client",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "Topic Name",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS Level",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command",
                              "text" : "command",
                              "type" : "Struct(translator)"
                            },
                            {
                              "doc" : "The topic for gateway to publish the acknowledge events from LwM2M client",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "Topic Name",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS Level",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response",
                              "text" : "response",
                              "type" : "Struct(translator)"
                            },
                            {
                              "doc" : "The topic for gateway to publish the notify events from LwM2M client.\nAfter succeed observe a resource of LwM2M client, Gateway will send the notify events via this topic, if the client reports any resource changes",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "Topic Name",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS Level",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify",
                              "text" : "notify",
                              "type" : "Struct(translator)"
                            },
                            {
                              "doc" : "The topic for gateway to publish the register events from LwM2M client.",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "Topic Name",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS Level",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register",
                              "text" : "register",
                              "type" : "Struct(translator)"
                            },
                            {
                              "doc" : "The topic for gateway to publish the update events from LwM2M client",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "Topic Name",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS Level",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update",
                              "text" : "update",
                              "type" : "Struct(translator)"
                            }
                          ],
                          "text" : "lwm2m_translators"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators",
                      "text" : "translators",
                      "type" : "Struct(lwm2m_translators)"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"lwm2m/${endpoint_name}/\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the UDP listeners.",
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for UDP listener.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "refs" : [
                                        {
                                          "doc" : "UDP health check",
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "doc" : "The content of the request.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-request",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "The content to reply.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-reply",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-health_check",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Allow local reuse of port numbers.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for DTLS listener.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Size of the acceptor pool.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "refs" : [
                                        {
                                          "doc" : "UDP health check",
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "doc" : "The content of the request.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-request",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "The content to reply.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-reply",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Allow local reuse of port numbers.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "DTLS socket options",
                                      "refs" : [
                                        {
                                          "doc" : "Settings for DTLS protocol.",
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM format private key file.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "Enable or disable peer verification.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "doc" : "Whether to enable client process statistic",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo override.",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "Template for overriding username.",
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding password.",
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding clientid.",
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "lwm2m"
                }
              ],
              "hash" : "V-gateway-S-gateway-lwm2m",
              "text" : "lwm2m",
              "type" : "Struct(lwm2m)"
            },
            {
              "refs" : [
                {
                  "doc" : "The MQTT-SN (MQTT for Sensor Networks) protocol gateway.",
                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn",
                  "fields" : [
                    {
                      "doc" : "MQTT-SN Gateway ID.\nWhen the <code>broadcast</code> option is enabled, the gateway will broadcast ADVERTISE message with this value",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-gateway_id",
                      "text" : "gateway_id",
                      "type" : "Integer",
                      "default" : "1"
                    },
                    {
                      "doc" : "Whether to periodically broadcast ADVERTISE messages",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-broadcast",
                      "text" : "broadcast",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Allows connectionless clients to publish messages with a Qos of -1.\nThis feature is defined for very simple client implementations which do not support any other features except this one. There is no connection setup nor tear down, no registration nor subscription. The client just sends its 'PUBLISH' messages to a GW",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-enable_qos3",
                      "text" : "enable_qos3",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "Whether to initiate all subscribed topic name registration messages to the client after the Session has been taken over by a new channel",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-subs_resume",
                      "text" : "subs_resume",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "The pre-defined topic IDs and topic names.\nA 'pre-defined' topic ID is a topic ID whose mapping to a topic name is known in advance by both the client's application and the gateway",
                      "refs" : [
                        {
                          "doc" : "The pre-defined topic name corresponding to the pre-defined topic\nID of N.\n\nNote: the pre-defined topic ID of 0 is reserved.",
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined",
                          "fields" : [
                            {
                              "doc" : "Topic ID. Range: 1-65535",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined-id",
                              "text" : "id",
                              "type" : "Integer(1..1024)"
                            },
                            {
                              "doc" : "Topic Name",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined-topic",
                              "text" : "topic",
                              "type" : "String"
                            }
                          ],
                          "text" : "mqttsn_predefined"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined",
                      "text" : "predefined",
                      "type" : "Array(Struct(mqttsn_predefined))",
                      "default" : "[]"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the UDP listeners.",
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for UDP listener.",
                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "refs" : [
                                        {
                                          "doc" : "UDP health check",
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "doc" : "The content of the request.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-request",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "The content to reply.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-reply",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-health_check",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Allow local reuse of port numbers.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for DTLS listener.",
                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Size of the acceptor pool.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "refs" : [
                                        {
                                          "doc" : "UDP health check",
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "doc" : "The content of the request.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-request",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "The content to reply.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-reply",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Allow local reuse of port numbers.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "DTLS socket options",
                                      "refs" : [
                                        {
                                          "doc" : "Settings for DTLS protocol.",
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM format private key file.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "Enable or disable peer verification.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "doc" : "Whether to enable client process statistic",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo override.",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "Template for overriding username.",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding password.",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding clientid.",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "mqttsn"
                }
              ],
              "hash" : "V-gateway-S-gateway-mqttsn",
              "text" : "mqttsn",
              "type" : "Struct(mqttsn)"
            },
            {
              "refs" : [
                {
                  "doc" : "The STOMP protocol gateway provides EMQX with the ability to access STOMP\n(Simple (or Streaming) Text Orientated Messaging Protocol) protocol.",
                  "hash" : "T-gateway-S-gateway-stomp-S-stomp",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "doc" : "Size limits for the STOMP frames.",
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame",
                          "fields" : [
                            {
                              "doc" : "The maximum number of Header",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_headers",
                              "text" : "max_headers",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "The maximum string length of the Header Value",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_headers_length",
                              "text" : "max_headers_length",
                              "type" : "Integer(0..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "Maximum number of bytes of Body allowed per Stomp packet",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_body_length",
                              "text" : "max_body_length",
                              "type" : "Integer",
                              "default" : "65536"
                            }
                          ],
                          "text" : "stomp_frame"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame",
                      "text" : "frame",
                      "type" : "Struct(stomp_frame)"
                    },
                    {
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the TCP listeners.",
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners",
                          "fields" : [
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for TCP listener.",
                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Size of the acceptor pool.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "Setting the TCP socket options.",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Close the connection if send timeout.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "The TCP_NODELAY flag for the connections.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none'",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "doc" : "A map from listener names to listener settings.",
                              "refs" : [
                                {
                                  "doc" : "Settings for SSL listener.",
                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Size of the acceptor pool.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "Setting the TCP socket options.",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Close the connection if send timeout.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "The TCP_NODELAY flag for the connections.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none'",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "Maximum connections per second.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\\\"deny 192.168.1.1\\\", \\\"allow 192.168.1.0/24\\\", \\\"deny, all\\\"]`",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL Socket options.",
                                      "refs" : [
                                        {
                                          "doc" : "Socket options for SSL connections.",
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM format private key file.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "Enable or disable peer verification.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "text" : "tcp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_listeners)"
                    },
                    {
                      "doc" : "Whether to enable client process statistic",
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo override.",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "Template for overriding username.",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding password.",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for overriding clientid.",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "stomp"
                }
              ],
              "hash" : "V-gateway-S-gateway-stomp",
              "text" : "stomp",
              "type" : "Struct(stomp)"
            }
          ],
          "text" : "gateway"
        }
      ],
      "hash" : "V-gateway",
      "text" : "gateway",
      "type" : "Struct(gateway)"
    },
    {
      "refs" : [
        {
          "doc" : "Recommended setting",
          "hash" : "T-prometheus-S-recommend_setting",
          "fields" : [
            {
              "doc" : "Enable or disable basic authentication for prometheus scrape api, not for Push Gateway",
              "hash" : "V-prometheus-S-recommend_setting-enable_basic_auth",
              "text" : "enable_basic_auth",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Push Gateway is optional, should not be configured if prometheus is to scrape EMQX.",
              "refs" : [
                {
                  "doc" : "Push Gateway is optional, should not be configured if prometheus is to scrape EMQX.",
                  "hash" : "T-prometheus-S-recommend_setting-push_gateway-S-push_gateway",
                  "fields" : [
                    {
                      "doc" : "Enable or disable Pushgateway",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "URL of Pushgateway server. Pushgateway is optional, should not be configured if prometheus is to scrape EMQX.",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-url",
                      "text" : "url",
                      "type" : "String",
                      "default" : "\"http://127.0.0.1:9091\""
                    },
                    {
                      "doc" : "Data reporting interval<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-interval",
                      "text" : "interval",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "An HTTP Headers when pushing to Push Gateway.<br/>\nFor example, <code> { Authorization = \"some-authz-tokens\"}</code>",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-headers",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "doc" : "Job Name that is pushed to the Push Gateway. Available variables:<br/>\n- ${name}: Name of EMQX node.<br/>\n- ${host}: Host name of EMQX node.<br/>\nFor example, when the EMQX node name is <code>emqx@127.0.0.1</code> then the <code>name</code>\nvariable takes value <code>emqx</code> and the <code>host</code> variable takes value <code>127.0.0.1</code>.\nDefault value is: <code>${name}/instance/${name}~${host}</code>",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-job_name",
                      "text" : "job_name",
                      "type" : "String",
                      "default" : "\"${name}/instance/${name}~${host}\""
                    }
                  ],
                  "text" : "push_gateway"
                }
              ],
              "hash" : "V-prometheus-S-recommend_setting-push_gateway",
              "text" : "push_gateway",
              "type" : "Struct(push_gateway)"
            },
            {
              "doc" : "The internal advanced metrics of the virtual machine are initially disabled\nand are usually only enabled during performance testing.\nEnabling them will increase the CPU load.",
              "refs" : [
                {
                  "doc" : "The internal advanced metrics of the virtual machine are initially disabled\nand are usually only enabled during performance testing.\nEnabling them will increase the CPU load.",
                  "hash" : "T-prometheus-S-recommend_setting-collectors-S-collectors",
                  "fields" : [
                    {
                      "doc" : "Enable or disable VM distribution collector,\ncollects information about the sockets and processes involved in the Erlang distribution mechanism.",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_dist",
                      "text" : "vm_dist",
                      "type" : "Enum(disabled,enabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "Collects Mnesia metrics mainly using <code> mnesia:system_info/1 </code>",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-mnesia",
                      "text" : "mnesia",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "Enable or disable VM statistics collector.",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_statistics",
                      "text" : "vm_statistics",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "Enable or disable VM system info collector.",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_system_info",
                      "text" : "vm_system_info",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "Collects information about memory dynamically allocated by the Erlang emulator using\n<code> erlang:memory/0 </code>.",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_memory",
                      "text" : "vm_memory",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "Enable or disable VM microstate accounting metrics collector.",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_msacc",
                      "text" : "vm_msacc",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    }
                  ],
                  "text" : "collectors"
                }
              ],
              "hash" : "V-prometheus-S-recommend_setting-collectors",
              "text" : "collectors",
              "type" : "Struct(collectors)"
            }
          ],
          "text" : "recommend_setting"
        },
        {
          "doc" : "Deprecated since 5.4.0",
          "hash" : "T-prometheus-S-legacy_deprecated_setting",
          "fields" : [
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.url` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-push_gateway_server",
              "text" : "push_gateway_server",
              "type" : "String",
              "default" : "\"http://127.0.0.1:9091\""
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.interval` instead<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-interval",
              "text" : "interval",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.headers` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-headers",
              "text" : "headers",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.job_name` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-job_name",
              "text" : "job_name",
              "type" : "String",
              "default" : "\"${name}/instance/${name}~${host}\""
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.url` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.vm_dist` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_dist_collector",
              "text" : "vm_dist_collector",
              "type" : "Enum(disabled,enabled)",
              "default" : "disabled"
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.mnesia` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-mnesia_collector",
              "text" : "mnesia_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.vm_statistics` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_statistics_collector",
              "text" : "vm_statistics_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "doc" : "Deprecated, use `prometheus.collectors.vm_system_info` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_system_info_collector",
              "text" : "vm_system_info_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.vm_memory` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_memory_collector",
              "text" : "vm_memory_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.vm_msacc` instead",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_msacc_collector",
              "text" : "vm_msacc_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            }
          ],
          "text" : "legacy_deprecated_setting"
        }
      ],
      "hash" : "V-prometheus",
      "text" : "prometheus",
      "type" : "OneOf(Struct(recommend_setting),Struct(legacy_deprecated_setting))",
      "default" : "{}"
    },
    {
      "refs" : [
        {
          "doc" : "External hook (exhook) configuration.",
          "hash" : "T-exhook-S-exhook",
          "fields" : [
            {
              "doc" : "List of exhook servers",
              "refs" : [
                {
                  "doc" : "gRPC server configuration.",
                  "hash" : "T-exhook-S-exhook-servers-S-server",
                  "fields" : [
                    {
                      "doc" : "Name of the exhook server",
                      "hash" : "V-exhook-S-exhook-servers-S-server-name",
                      "text" : "name",
                      "type" : "String"
                    },
                    {
                      "doc" : "URL of the gRPC server",
                      "hash" : "V-exhook-S-exhook-servers-S-server-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "The timeout of request gRPC server<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-exhook-S-exhook-servers-S-server-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "The value that is returned when the request to the gRPC server fails for any reason",
                      "hash" : "V-exhook-S-exhook-servers-S-server-failed_action",
                      "text" : "failed_action",
                      "type" : "Enum(deny,ignore)",
                      "default" : "deny"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "SSL client configuration.",
                          "hash" : "T-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_conf"
                        }
                      ],
                      "hash" : "V-exhook-S-exhook-servers-S-server-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_conf)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Connection socket options",
                          "hash" : "T-exhook-S-exhook-servers-S-server-socket_options-S-socket_options",
                          "fields" : [
                            {
                              "doc" : "Enables/disables periodic transmission on a connected socket when no other data is exchanged.\nIf the other end does not respond, the connection is considered broken and an error message is sent to the controlling process.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-keepalive",
                              "text" : "keepalive",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "If true, option TCP_NODELAY is turned on for the socket,\nwhich means that also small amounts of data are sent immediately",
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum size of receive buffer to use for the socket<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "The minimum size of send buffer to use for the socket<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            }
                          ],
                          "text" : "socket_options"
                        }
                      ],
                      "hash" : "V-exhook-S-exhook-servers-S-server-socket_options",
                      "text" : "socket_options",
                      "type" : "Struct(socket_options)",
                      "default" : "{keepalive = true, nodelay = true}"
                    },
                    {
                      "doc" : "Whether to automatically reconnect (initialize) the gRPC server.\nWhen gRPC is not available, Exhook tries to request the gRPC service at that interval and reinitialize the list of mounted hooks.",
                      "hash" : "V-exhook-S-exhook-servers-S-server-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "OneOf(String(\"false\"),Duration)",
                      "default" : "\"60s\""
                    },
                    {
                      "doc" : "The process pool size for gRPC client",
                      "hash" : "V-exhook-S-exhook-servers-S-server-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    }
                  ],
                  "text" : "server"
                }
              ],
              "hash" : "V-exhook-S-exhook-servers",
              "text" : "servers",
              "type" : "Array(Struct(server))",
              "default" : "[]"
            }
          ],
          "text" : "exhook"
        }
      ],
      "hash" : "V-exhook",
      "text" : "exhook",
      "type" : "Struct(exhook)"
    },
    {
      "refs" : [
        {
          "doc" : "PSK stands for 'Pre-Shared Keys'.\nThis config to enable TLS-PSK authentication.\n\nImportant! Make sure the SSL listener with only <code>tlsv1.2</code> enabled, and also PSK cipher suites\nconfigured, such as <code>RSA-PSK-AES256-GCM-SHA384</code>.\n\nSee listener SSL options config for more details.\n\nThe IDs and secrets can be provided from a file which is configurable by the <code>init_file</code> field.",
          "hash" : "T-psk_authentication-S-psk_authentication",
          "fields" : [
            {
              "doc" : "Whether to enable TLS PSK support",
              "hash" : "V-psk_authentication-S-psk_authentication-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "If init_file is specified, EMQX will import PSKs from the file into the built-in database at startup for use by the runtime.\nThe file has to be structured line-by-line, each line must be in the format of <code>PSKIdentity:SharedSecret</code>.\nFor example: <code>mydevice1:c2VjcmV0</code>",
              "hash" : "V-psk_authentication-S-psk_authentication-init_file",
              "text" : "init_file",
              "type" : "String"
            },
            {
              "doc" : "The separator between <code>PSKIdentity</code> and <code>SharedSecret</code> in the PSK file",
              "hash" : "V-psk_authentication-S-psk_authentication-separator",
              "text" : "separator",
              "type" : "String",
              "default" : "\":\""
            },
            {
              "doc" : "The size of each chunk used to import to the built-in database from PSK file",
              "hash" : "V-psk_authentication-S-psk_authentication-chunk_size",
              "text" : "chunk_size",
              "type" : "Integer",
              "default" : "50"
            }
          ],
          "text" : "psk_authentication"
        }
      ],
      "hash" : "V-psk_authentication",
      "text" : "psk_authentication",
      "type" : "Struct(psk_authentication)"
    },
    {
      "refs" : [
        {
          "doc" : "Configuration for `slow_subs` feature.",
          "hash" : "T-slow_subs-S-slow_subs",
          "fields" : [
            {
              "doc" : "Enable Slow Subscriptions",
              "hash" : "V-slow_subs-S-slow_subs-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "The Client ID and topic of the consumer whose message latency is greater than this threshold will be recorded in the slow subscription list.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-slow_subs-S-slow_subs-threshold",
              "text" : "threshold",
              "type" : "Duration",
              "default" : "\"500ms\""
            },
            {
              "doc" : "The expiration time of the slow subscription record, if the record is not updated within the expiration time, then the record will be deleted.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "hash" : "V-slow_subs-S-slow_subs-expire_interval",
              "text" : "expire_interval",
              "type" : "Duration",
              "default" : "\"300s\""
            },
            {
              "doc" : "The maximum number of slow-subscription records, up to a maximum of 1000.",
              "hash" : "V-slow_subs-S-slow_subs-top_k_num",
              "text" : "top_k_num",
              "type" : "Integer(1..+inf)",
              "default" : "10"
            },
            {
              "doc" : "Message latency calculation method:\n\n- `whole`: The time from when the message arrives at the EMQX (the EMQX gets the message from the receive-buffer) until the message completes delivery.\n- `internal`: The time from when the message arrives at the EMQX (the EMQX gets the message from the receive-buffer) to when the message begins to be delivered (the EMQX attempts to write the message to the send-buffer).\n- `response`: The time from the start of message delivery to the completion.\n\nNote: The completion delivery time refers to the time when QoS 1 and 2 messages complete the MQTT message response process, i.e., the time when QoS 1 message receives the PUBACK packet and QoS 2 message receives the PUBCOMP packet.\nSince there is no response packet for QoS 0 message, the completion delivery time of the QoS 0 message will be replaced by the time when the message starts to be delivered. Therefore, when using the `response` method to calculate the latency, the latency of a QoS 0 message will always be equal to 0.",
              "hash" : "V-slow_subs-S-slow_subs-stats_type",
              "text" : "stats_type",
              "type" : "Enum(whole,internal,response)",
              "default" : "whole"
            }
          ],
          "text" : "slow_subs"
        }
      ],
      "hash" : "V-slow_subs",
      "text" : "slow_subs",
      "type" : "Struct(slow_subs)"
    },
    {
      "refs" : [
        {
          "doc" : "Open Telemetry Toolkit configuration",
          "hash" : "T-opentelemetry-S-opentelemetry",
          "fields" : [
            {
              "doc" : "Open Telemetry Metrics configuration.",
              "refs" : [
                {
                  "doc" : "Open Telemetry Metrics configuration.",
                  "hash" : "T-opentelemetry-S-opentelemetry-metrics-S-otel_metrics",
                  "fields" : [
                    {
                      "doc" : "Enable or disable Open Telemetry signal.",
                      "hash" : "V-opentelemetry-S-opentelemetry-metrics-S-otel_metrics-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "The delay interval between two consecutive exports of Open Telemetry signals.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-opentelemetry-S-opentelemetry-metrics-S-otel_metrics-interval",
                      "aliases" : [
                        "scheduled_delay"
                      ],
                      "text" : "interval",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    }
                  ],
                  "text" : "otel_metrics"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-metrics",
              "text" : "metrics",
              "type" : "Struct(otel_metrics)"
            },
            {
              "doc" : "Open Telemetry Logs configuration. If enabled, EMQX installs a log handler that formats events according to Open Telemetry log data model and\nexports them to the configured Open Telemetry collector or backend.",
              "refs" : [
                {
                  "doc" : "Open Telemetry Logs configuration. If enabled, EMQX installs a log handler that formats events according to Open Telemetry log data model and\nexports them to the configured Open Telemetry collector or backend.",
                  "hash" : "T-opentelemetry-S-opentelemetry-logs-S-otel_logs",
                  "fields" : [
                    {
                      "doc" : "The log level of the Open Telemetry log handler.",
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-level",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "doc" : "Enable or disable Open Telemetry signal.",
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "The delay interval between two consecutive exports of Open Telemetry signals.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-scheduled_delay",
                      "text" : "scheduled_delay",
                      "type" : "Duration",
                      "default" : "\"1s\""
                    }
                  ],
                  "text" : "otel_logs"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-logs",
              "text" : "logs",
              "type" : "Struct(otel_logs)"
            },
            {
              "doc" : "Open Telemetry Traces configuration.",
              "refs" : [
                {
                  "doc" : "Open Telemetry Traces configuration.",
                  "hash" : "T-opentelemetry-S-opentelemetry-traces-S-otel_traces",
                  "fields" : [
                    {
                      "doc" : "Enable or disable Open Telemetry signal.",
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "The delay interval between two consecutive exports of Open Telemetry signals.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-scheduled_delay",
                      "text" : "scheduled_delay",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Open Telemetry Trace Filter configuration",
                      "refs" : [
                        {
                          "doc" : "Open Telemetry Trace Filter configuration",
                          "hash" : "T-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter",
                          "fields" : [
                            {
                              "doc" : "If enabled, all published messages are traced, a new trace ID is generated if it can't be extracted from the message.\nOtherwise, only messages published with trace context are traced. Disabled by default.",
                              "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-trace_all",
                              "text" : "trace_all",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "text" : "trace_filter"
                        }
                      ],
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter",
                      "text" : "filter",
                      "type" : "Struct(trace_filter)"
                    }
                  ],
                  "text" : "otel_traces"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-traces",
              "text" : "traces",
              "type" : "Struct(otel_traces)"
            },
            {
              "doc" : "Open Telemetry Exporter",
              "refs" : [
                {
                  "doc" : "Open Telemetry Exporter",
                  "hash" : "T-opentelemetry-S-opentelemetry-exporter-S-otel_exporter",
                  "fields" : [
                    {
                      "doc" : "The target URL to which the exporter is going to send Open Telemetry signal data.",
                      "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-endpoint",
                      "text" : "endpoint",
                      "type" : "String",
                      "default" : "\"http://localhost:4317\""
                    },
                    {
                      "doc" : "SSL configuration for the Open Telemetry exporter",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM format private key file.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Enable or disable peer verification.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Enable TLS.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "otel_exporter"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-exporter",
              "text" : "exporter",
              "type" : "Struct(otel_exporter)"
            }
          ],
          "text" : "opentelemetry"
        }
      ],
      "hash" : "V-opentelemetry",
      "text" : "opentelemetry",
      "type" : "Struct(opentelemetry)"
    },
    {
      "refs" : [
        {
          "doc" : "API Key, can be used to request API other than the management API key and the Dashboard user management API",
          "hash" : "T-api_key-S-api_key",
          "fields" : [
            {
              "doc" : "The bootstrap file provides API keys for EMQX.\nEMQX will load these keys on startup to authorize API requests.\nIt contains colon-separated values in the format: `api_key:api_secret:role`.\nEach line specifies an API key and its associated secret, and the role of this key.\nThe 'role' part should be the pre-defined access scope group name,\nfor example, `administrator` or `viewer`.\nThe 'role' is introduced in 5.4, to be backward compatible, if it is missing, the key is implicitly granted `administrator` role.",
              "hash" : "V-api_key-S-api_key-bootstrap_file",
              "text" : "bootstrap_file",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "text" : "api_key"
        }
      ],
      "hash" : "V-api_key",
      "text" : "api_key",
      "type" : "Struct(api_key)"
    }
  ],
  "text" : "root"
}