{
  "doc" : "",
  "hash" : "T-root",
  "fields" : [
    {
      "refs" : [
        {
          "doc" : "MQTT listeners identified by their protocol type and assigned names",
          "hash" : "T-listeners-S-listeners",
          "fields" : [
            {
              "doc" : "TCP 监听器。",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over TCP listener.",
                  "hash" : "T-listeners-S-listeners-tcp-S-mqtt_tcp_listener",
                  "fields" : [
                    {
                      "doc" : "启停监听器。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-enable",
                      "aliases" : [
                        "enabled"
                      ],
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "监听套接字的 IP 地址和端口。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "1883"
                    },
                    {
                      "doc" : "监听器接收池的大小。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "监听器允许的最大并发连接数。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端 B（与客户端 A 连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "监听器所属的配置组。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "最大连接速率。<br/>\n这用于限制该节点的连接速率。\n一旦达到限制，新的连接将被推迟或拒绝。<br/>\n例如：<br/>\n- <code>1000/s</code>：每秒只接受1000个连接<br/>\n- <code>1000/10s</code>：每10秒只接受1000个连接。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "消息发布速率。<br/>\n这用于限制该节点的入站消息数量。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n例如：<br/>\n- <code>500/s</code>：每秒只发送前500条消息，其他消息被缓冲。<br/>\n- <code>500/10s</code>：即使是10秒，也只发送前500条消息，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据发布速率。<br/>\n这用于限制该节点的入站字节速率。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n字节的单位可以是：KB MB GB。<br/>\n例如：<br/>\n- <code>500KB/s</code>：每秒只发送前500千字节，其他消息被缓冲。<br/>\n- <code>500MB/10s</code>：即使是10秒，也只发送前500兆字节，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "此监听器的访问控制规则。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-access_rules",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "doc" : "如果 EMQX 集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-proxy_protocol",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-proxy_protocol_timeout",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "TCP listener options.",
                          "hash" : "T-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-active_n",
                              "text" : "active_n",
                              "type" : "Integer",
                              "default" : "100"
                            },
                            {
                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-backlog",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "如果发送超时，则关闭连接。",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-buffer",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "连接的 TCP_NODELAY 标识",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "连接的 SO_REUSEADDR 标识。",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-keepalive",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    }
                  ],
                  "text" : "mqtt_tcp_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-tcp",
              "text" : "tcp",
              "type" : "Map($name->OneOf(Struct(mqtt_tcp_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc" : "SSL 监听器。",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over SSL listener.",
                  "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener",
                  "fields" : [
                    {
                      "doc" : "启停监听器。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-enable",
                      "aliases" : [
                        "enabled"
                      ],
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "监听套接字的 IP 地址和端口。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8883"
                    },
                    {
                      "doc" : "监听器接收池的大小。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "监听器允许的最大并发连接数。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端 B（与客户端 A 连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "监听器所属的配置组。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "最大连接速率。<br/>\n这用于限制该节点的连接速率。\n一旦达到限制，新的连接将被推迟或拒绝。<br/>\n例如：<br/>\n- <code>1000/s</code>：每秒只接受1000个连接<br/>\n- <code>1000/10s</code>：每10秒只接受1000个连接。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "消息发布速率。<br/>\n这用于限制该节点的入站消息数量。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n例如：<br/>\n- <code>500/s</code>：每秒只发送前500条消息，其他消息被缓冲。<br/>\n- <code>500/10s</code>：即使是10秒，也只发送前500条消息，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据发布速率。<br/>\n这用于限制该节点的入站字节速率。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n字节的单位可以是：KB MB GB。<br/>\n例如：<br/>\n- <code>500KB/s</code>：每秒只发送前500千字节，其他消息被缓冲。<br/>\n- <code>500MB/10s</code>：即使是10秒，也只发送前500兆字节，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "此监听器的访问控制规则。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-access_rules",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "doc" : "如果 EMQX 集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-proxy_protocol",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-proxy_protocol_timeout",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "TCP listener options.",
                          "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-active_n",
                              "text" : "active_n",
                              "type" : "Integer",
                              "default" : "100"
                            },
                            {
                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-backlog",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "如果发送超时，则关闭连接。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-buffer",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "连接的 TCP_NODELAY 标识",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "连接的 SO_REUSEADDR 标识。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-keepalive",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL connections.",
                          "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                              "text" : "dhfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                              "text" : "fail_if_no_peer_cert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                              "text" : "honor_cipher_order",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                              "text" : "client_renegotiation",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                              "text" : "handshake_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                              "text" : "gc_after_handshake",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "refs" : [
                                {
                                  "doc" : "Per listener OCSP Stapling configuration.",
                                  "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                  "fields" : [
                                    {
                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                      "text" : "enable_ocsp_stapling",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                      "text" : "responder_url",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                      "text" : "issuer_pem",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                      "text" : "refresh_interval",
                                      "type" : "Duration",
                                      "default" : "\"5m\""
                                    },
                                    {
                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                      "text" : "refresh_http_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "text" : "ocsp"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                              "text" : "ocsp",
                              "type" : "Struct(ocsp)"
                            },
                            {
                              "doc" : "是否为该监听器启用 CRL 检查。",
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                              "text" : "enable_crl_check",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "text" : "listener_ssl_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_ssl_opts)"
                    }
                  ],
                  "text" : "mqtt_ssl_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-ssl",
              "text" : "ssl",
              "type" : "Map($name->OneOf(Struct(mqtt_ssl_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc" : "HTTP websocket 监听器。",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over WebSocket listener.",
                  "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener",
                  "fields" : [
                    {
                      "doc" : "启停监听器。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-enable",
                      "aliases" : [
                        "enabled"
                      ],
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "监听套接字的 IP 地址和端口。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8083"
                    },
                    {
                      "doc" : "监听器接收池的大小。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "监听器允许的最大并发连接数。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端 B（与客户端 A 连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "监听器所属的配置组。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "最大连接速率。<br/>\n这用于限制该节点的连接速率。\n一旦达到限制，新的连接将被推迟或拒绝。<br/>\n例如：<br/>\n- <code>1000/s</code>：每秒只接受1000个连接<br/>\n- <code>1000/10s</code>：每10秒只接受1000个连接。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "消息发布速率。<br/>\n这用于限制该节点的入站消息数量。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n例如：<br/>\n- <code>500/s</code>：每秒只发送前500条消息，其他消息被缓冲。<br/>\n- <code>500/10s</code>：即使是10秒，也只发送前500条消息，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据发布速率。<br/>\n这用于限制该节点的入站字节速率。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n字节的单位可以是：KB MB GB。<br/>\n例如：<br/>\n- <code>500KB/s</code>：每秒只发送前500千字节，其他消息被缓冲。<br/>\n- <code>500MB/10s</code>：即使是10秒，也只发送前500兆字节，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "此监听器的访问控制规则。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-access_rules",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "doc" : "如果 EMQX 集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-proxy_protocol",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-proxy_protocol_timeout",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "TCP listener options.",
                          "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-active_n",
                              "text" : "active_n",
                              "type" : "Integer",
                              "default" : "100"
                            },
                            {
                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-backlog",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "如果发送超时，则关闭连接。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-buffer",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "连接的 TCP_NODELAY 标识",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "连接的 SO_REUSEADDR 标识。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-keepalive",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "WebSocket listener options.",
                          "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts",
                          "fields" : [
                            {
                              "doc" : "WebSocket 的 MQTT 协议路径。因此，EMQX Broker 的 WebSocket 地址为：\n<code>ws://{ip}:{port}/mqtt</code>",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-mqtt_path",
                              "text" : "mqtt_path",
                              "type" : "String",
                              "default" : "\"/mqtt\""
                            },
                            {
                              "doc" : "WebSocket 消息是否允许包含多个 MQTT 数据包。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-mqtt_piggyback",
                              "text" : "mqtt_piggyback",
                              "type" : "Enum(single,multiple)",
                              "default" : "multiple"
                            },
                            {
                              "doc" : "如果 <code>true</code>，则使用 <code>zlib</code> 压缩 WebSocket 消息<br/>\n<code>deflate_opts</code> 下的配置项属于压缩相关参数配置。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-compress",
                              "text" : "compress",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "关闭在此间隔内未发送 MQTT CONNECT 消息的客户端的传输层连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-idle_timeout",
                              "text" : "idle_timeout",
                              "type" : "Duration",
                              "default" : "\"7200s\""
                            },
                            {
                              "doc" : "单个 MQTT 数据包的最大长度。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-max_frame_size",
                              "text" : "max_frame_size",
                              "type" : "OneOf(String(\"infinity\"),Integer)",
                              "default" : "infinity"
                            },
                            {
                              "doc" : "如果<code>true</code>，当客户端未携带<code>Sec WebSocket Protocol</code>字段时，服务器将返回一个错误。\n<br/>注意：微信小程序需要禁用此验证。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-fail_if_no_subprotocol",
                              "text" : "fail_if_no_subprotocol",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "逗号分隔的 subprotocols 支持列表。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-supported_subprotocols",
                              "text" : "supported_subprotocols",
                              "type" : "String",
                              "default" : "\"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5\""
                            },
                            {
                              "doc" : "如果<code>true</code>，<code>origin</code>HTTP 头将根据<code>check_origins</code>参数中配置的允许来源列表进行验证。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-check_origin_enable",
                              "text" : "check_origin_enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "如果设置为 <code>false</code> 并且 <code>check_origin_enable</code> 为 <code>true</code>，服务器将拒绝没有 <code>origin</code> HTTP 头的请求。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-allow_origin_absence",
                              "text" : "allow_origin_absence",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "允许的 origins 列表",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-check_origins",
                              "text" : "check_origins",
                              "type" : "String",
                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                            },
                            {
                              "doc" : "HTTP 头，用于传递有关客户端 IP 地址的信息。\n当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-proxy_address_header",
                              "text" : "proxy_address_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-for\""
                            },
                            {
                              "doc" : "HTTP 头，用于传递有关客户端端口的信息。当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-proxy_port_header",
                              "text" : "proxy_port_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-port\""
                            },
                            {
                              "refs" : [
                                {
                                  "doc" : "Compression options.",
                                  "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts",
                                  "fields" : [
                                    {
                                      "doc" : "压缩级别",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-level",
                                      "text" : "level",
                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                    },
                                    {
                                      "doc" : "指定压缩状态的大小<br/>\n较低的值会减少每个连接的内存使用。",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-mem_level",
                                      "text" : "mem_level",
                                      "type" : "Integer(1..9)",
                                      "default" : "8"
                                    },
                                    {
                                      "doc" : "指定压缩策略。",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-strategy",
                                      "text" : "strategy",
                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                      "default" : "default"
                                    },
                                    {
                                      "doc" : "接管意味着在服务器消息之间保留压缩状态。",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_context_takeover",
                                      "text" : "server_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "doc" : "接管意味着在客户端消息之间保留压缩状态。",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_context_takeover",
                                      "text" : "client_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "doc" : "指定服务器压缩上下文的大小。",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_max_window_bits",
                                      "text" : "server_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    },
                                    {
                                      "doc" : "指定客户端压缩上下文的大小。",
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_max_window_bits",
                                      "text" : "client_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    }
                                  ],
                                  "text" : "deflate_opts"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts",
                              "text" : "deflate_opts",
                              "type" : "Struct(deflate_opts)"
                            },
                            {
                              "doc" : "设置为 <code>false</code> 可以禁用 WebSocket 帧 UTF-8 验证以提高性能。",
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-validate_utf8",
                              "text" : "validate_utf8",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "text" : "ws_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket",
                      "text" : "websocket",
                      "type" : "Struct(ws_opts)"
                    }
                  ],
                  "text" : "mqtt_ws_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-ws",
              "text" : "ws",
              "type" : "Map($name->OneOf(Struct(mqtt_ws_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc" : "HTTPS websocket 监听器。",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over WebSocket/SSL listener.",
                  "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener",
                  "fields" : [
                    {
                      "doc" : "启停监听器。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-enable",
                      "aliases" : [
                        "enabled"
                      ],
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "监听套接字的 IP 地址和端口。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8084"
                    },
                    {
                      "doc" : "监听器接收池的大小。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "监听器允许的最大并发连接数。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端 B（与客户端 A 连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "监听器所属的配置组。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "最大连接速率。<br/>\n这用于限制该节点的连接速率。\n一旦达到限制，新的连接将被推迟或拒绝。<br/>\n例如：<br/>\n- <code>1000/s</code>：每秒只接受1000个连接<br/>\n- <code>1000/10s</code>：每10秒只接受1000个连接。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "消息发布速率。<br/>\n这用于限制该节点的入站消息数量。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n例如：<br/>\n- <code>500/s</code>：每秒只发送前500条消息，其他消息被缓冲。<br/>\n- <code>500/10s</code>：即使是10秒，也只发送前500条消息，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据发布速率。<br/>\n这用于限制该节点的入站字节速率。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n字节的单位可以是：KB MB GB。<br/>\n例如：<br/>\n- <code>500KB/s</code>：每秒只发送前500千字节，其他消息被缓冲。<br/>\n- <code>500MB/10s</code>：即使是10秒，也只发送前500兆字节，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "此监听器的访问控制规则。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-access_rules",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "doc" : "如果 EMQX 集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-proxy_protocol",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-proxy_protocol_timeout",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "TCP listener options.",
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-active_n",
                              "text" : "active_n",
                              "type" : "Integer",
                              "default" : "100"
                            },
                            {
                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-backlog",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "如果发送超时，则关闭连接。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-buffer",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "连接的 TCP_NODELAY 标识",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "连接的 SO_REUSEADDR 标识。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-keepalive",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Socket options for WebSocket/SSL connections.",
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-certfile",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-dhfile",
                              "text" : "dhfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-fail_if_no_peer_cert",
                              "text" : "fail_if_no_peer_cert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-honor_cipher_order",
                              "text" : "honor_cipher_order",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-client_renegotiation",
                              "text" : "client_renegotiation",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-handshake_timeout",
                              "text" : "handshake_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "listener_wss_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_wss_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "WebSocket listener options.",
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts",
                          "fields" : [
                            {
                              "doc" : "WebSocket 的 MQTT 协议路径。因此，EMQX Broker 的 WebSocket 地址为：\n<code>ws://{ip}:{port}/mqtt</code>",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-mqtt_path",
                              "text" : "mqtt_path",
                              "type" : "String",
                              "default" : "\"/mqtt\""
                            },
                            {
                              "doc" : "WebSocket 消息是否允许包含多个 MQTT 数据包。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-mqtt_piggyback",
                              "text" : "mqtt_piggyback",
                              "type" : "Enum(single,multiple)",
                              "default" : "multiple"
                            },
                            {
                              "doc" : "如果 <code>true</code>，则使用 <code>zlib</code> 压缩 WebSocket 消息<br/>\n<code>deflate_opts</code> 下的配置项属于压缩相关参数配置。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-compress",
                              "text" : "compress",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "关闭在此间隔内未发送 MQTT CONNECT 消息的客户端的传输层连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-idle_timeout",
                              "text" : "idle_timeout",
                              "type" : "Duration",
                              "default" : "\"7200s\""
                            },
                            {
                              "doc" : "单个 MQTT 数据包的最大长度。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-max_frame_size",
                              "text" : "max_frame_size",
                              "type" : "OneOf(String(\"infinity\"),Integer)",
                              "default" : "infinity"
                            },
                            {
                              "doc" : "如果<code>true</code>，当客户端未携带<code>Sec WebSocket Protocol</code>字段时，服务器将返回一个错误。\n<br/>注意：微信小程序需要禁用此验证。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-fail_if_no_subprotocol",
                              "text" : "fail_if_no_subprotocol",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "逗号分隔的 subprotocols 支持列表。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-supported_subprotocols",
                              "text" : "supported_subprotocols",
                              "type" : "String",
                              "default" : "\"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5\""
                            },
                            {
                              "doc" : "如果<code>true</code>，<code>origin</code>HTTP 头将根据<code>check_origins</code>参数中配置的允许来源列表进行验证。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-check_origin_enable",
                              "text" : "check_origin_enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "如果设置为 <code>false</code> 并且 <code>check_origin_enable</code> 为 <code>true</code>，服务器将拒绝没有 <code>origin</code> HTTP 头的请求。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-allow_origin_absence",
                              "text" : "allow_origin_absence",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "允许的 origins 列表",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-check_origins",
                              "text" : "check_origins",
                              "type" : "String",
                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                            },
                            {
                              "doc" : "HTTP 头，用于传递有关客户端 IP 地址的信息。\n当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-proxy_address_header",
                              "text" : "proxy_address_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-for\""
                            },
                            {
                              "doc" : "HTTP 头，用于传递有关客户端端口的信息。当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-proxy_port_header",
                              "text" : "proxy_port_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-port\""
                            },
                            {
                              "refs" : [
                                {
                                  "doc" : "Compression options.",
                                  "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts",
                                  "fields" : [
                                    {
                                      "doc" : "压缩级别",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-level",
                                      "text" : "level",
                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                    },
                                    {
                                      "doc" : "指定压缩状态的大小<br/>\n较低的值会减少每个连接的内存使用。",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-mem_level",
                                      "text" : "mem_level",
                                      "type" : "Integer(1..9)",
                                      "default" : "8"
                                    },
                                    {
                                      "doc" : "指定压缩策略。",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-strategy",
                                      "text" : "strategy",
                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                      "default" : "default"
                                    },
                                    {
                                      "doc" : "接管意味着在服务器消息之间保留压缩状态。",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_context_takeover",
                                      "text" : "server_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "doc" : "接管意味着在客户端消息之间保留压缩状态。",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_context_takeover",
                                      "text" : "client_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "doc" : "指定服务器压缩上下文的大小。",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_max_window_bits",
                                      "text" : "server_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    },
                                    {
                                      "doc" : "指定客户端压缩上下文的大小。",
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_max_window_bits",
                                      "text" : "client_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    }
                                  ],
                                  "text" : "deflate_opts"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts",
                              "text" : "deflate_opts",
                              "type" : "Struct(deflate_opts)"
                            },
                            {
                              "doc" : "设置为 <code>false</code> 可以禁用 WebSocket 帧 UTF-8 验证以提高性能。",
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-validate_utf8",
                              "text" : "validate_utf8",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "text" : "ws_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket",
                      "text" : "websocket",
                      "type" : "Struct(ws_opts)"
                    }
                  ],
                  "text" : "mqtt_wss_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-wss",
              "text" : "wss",
              "type" : "Map($name->OneOf(Struct(mqtt_wss_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc" : "QUIC 监听器。",
              "refs" : [
                {
                  "doc" : "Settings for the MQTT over QUIC listener.",
                  "hash" : "T-listeners-S-listeners-quic-S-mqtt_quic_listener",
                  "fields" : [
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式。<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3。<br/>\n如果打算使用 PSK 密码套件，<code>tlsv1.3</code> 应在 <code>ssl.versions</code> 中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br/>\n\n注：QUIC 监听器只支持 tlsv1.3 的 ciphers。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256]"
                    },
                    {
                      "doc" : "QUIC 传输层的 TLS 选项",
                      "refs" : [
                        {
                          "doc" : "TLS options for QUIC transport.",
                          "hash" : "T-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-certfile",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-password",
                              "text" : "password",
                              "type" : "String"
                            }
                          ],
                          "text" : "listener_quic_ssl_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_quic_ssl_opts)"
                    },
                    {
                      "doc" : "启停监听器。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-enable",
                      "aliases" : [
                        "enabled"
                      ],
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "监听套接字的 IP 地址和端口。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bind",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "14567"
                    },
                    {
                      "doc" : "监听器接收池的大小。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "监听器允许的最大并发连接数。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_connections",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "doc" : "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端 B（与客户端 A 连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "监听器所属的配置组。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-zone",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-enable_authn",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "doc" : "最大连接速率。<br/>\n这用于限制该节点的连接速率。\n一旦达到限制，新的连接将被推迟或拒绝。<br/>\n例如：<br/>\n- <code>1000/s</code>：每秒只接受1000个连接<br/>\n- <code>1000/10s</code>：每10秒只接受1000个连接。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_conn_rate",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "消息发布速率。<br/>\n这用于限制该节点的入站消息数量。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n例如：<br/>\n- <code>500/s</code>：每秒只发送前500条消息，其他消息被缓冲。<br/>\n- <code>500/10s</code>：即使是10秒，也只发送前500条消息，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-messages_rate",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据发布速率。<br/>\n这用于限制该节点的入站字节速率。\n一旦达到限制，受限制的客户端将减速甚至暂时挂起。<br/>\n字节的单位可以是：KB MB GB。<br/>\n例如：<br/>\n- <code>500KB/s</code>：每秒只发送前500千字节，其他消息被缓冲。<br/>\n- <code>500MB/10s</code>：即使是10秒，也只发送前500兆字节，其他消息被缓冲。",
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bytes_rate",
                      "text" : "bytes_rate",
                      "type" : "String"
                    }
                  ],
                  "text" : "mqtt_quic_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-quic",
              "text" : "quic",
              "type" : "Map($name->OneOf(Struct(mqtt_quic_listener),String(\"marked_for_deletion\")))"
            }
          ],
          "text" : "listeners"
        }
      ],
      "hash" : "V-listeners",
      "text" : "listeners",
      "type" : "Struct(listeners)"
    },
    {
      "doc" : "全局的 MQTT 配置项。\nmqtt 下所有的配置作为全局的默认值存在，它可以被 <code>zone</code> 中的配置覆盖",
      "refs" : [
        {
          "doc" : "Global MQTT configuration.",
          "hash" : "T-mqtt-S-mqtt",
          "fields" : [
            {
              "doc" : "设置连接被断开或进入休眠状态前的等待时间，空闲超时后，\n  - 如暂未收到客户端的 CONNECT 报文，连接将断开；\n  - 如已收到客户端的 CONNECT 报文，连接将进入休眠模式以节省系统资源。\n\n注意：请合理设置该参数值，如等待时间设置过长，可能造成系统资源的浪费。",
              "hash" : "V-mqtt-S-mqtt-idle_timeout",
              "text" : "idle_timeout",
              "type" : "OneOf(String(\"infinity\"),Duration)",
              "default" : "\"15s\""
            },
            {
              "doc" : "允许的最大 MQTT 报文大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
              "hash" : "V-mqtt-S-mqtt-max_packet_size",
              "text" : "max_packet_size",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "允许的最大 MQTT Client ID 长度。",
              "hash" : "V-mqtt-S-mqtt-max_clientid_len",
              "text" : "max_clientid_len",
              "type" : "Integer(23..65535)",
              "default" : "65535"
            },
            {
              "doc" : "允许的最大主题层级。",
              "hash" : "V-mqtt-S-mqtt-max_topic_levels",
              "text" : "max_topic_levels",
              "type" : "Integer(1..65535)",
              "default" : "128"
            },
            {
              "doc" : "允许的最大主题别名数，0 表示不支持主题别名。",
              "hash" : "V-mqtt-S-mqtt-max_topic_alias",
              "text" : "max_topic_alias",
              "type" : "Integer(0..65535)",
              "default" : "65535"
            },
            {
              "doc" : "是否启用对 MQTT 保留消息的支持。",
              "hash" : "V-mqtt-S-mqtt-retain_available",
              "text" : "retain_available",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "是否启用对 MQTT 通配符订阅的支持。",
              "hash" : "V-mqtt-S-mqtt-wildcard_subscription",
              "text" : "wildcard_subscription",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "是否启用对 MQTT 共享订阅的支持。",
              "hash" : "V-mqtt-S-mqtt-shared_subscription",
              "text" : "shared_subscription",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "共享订阅的分发策略。\n - random：随机选择一个订阅者进行分发；\n - round_robin：从单个发布者处的消息依次分发给订阅者；\n - round_robin_per_group：所有消息依次分发给订阅者；\n - local：随机选择当前节点上的一个订阅者，如果当前节点没有订阅者，则在集群内随机选择；\n - sticky：持续将消息分发给最初选择的订阅者，直到他们的会话结束；\n - hash_clientid：哈希发布者的客户端 ID 以选择订阅者；\n - hash_topic：哈希发布主题以选择订阅者。",
              "hash" : "V-mqtt-S-mqtt-shared_subscription_strategy",
              "text" : "shared_subscription_strategy",
              "type" : "Enum(random,round_robin,round_robin_per_group,sticky,local,hash_topic,hash_clientid)",
              "default" : "round_robin"
            },
            {
              "doc" : "是否启用对 MQTT 排它订阅的支持。",
              "hash" : "V-mqtt-S-mqtt-exclusive_subscription",
              "text" : "exclusive_subscription",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "设置由 MQTT v3.1.1/v3.1.0 客户端发布的消息是否将转发给其本身；类似 MQTT 5.0 协议中的 <code>No Local</code> 选项。",
              "hash" : "V-mqtt-S-mqtt-ignore_loop_deliver",
              "text" : "ignore_loop_deliver",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "是否以严格模式解析 MQTT 消息。\n严格模式下，如客户端 ID、主题名称等中包含无效 utf8 字符串，连接将被断开。",
              "hash" : "V-mqtt-S-mqtt-strict_mode",
              "text" : "strict_mode",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "UTF-8 字符串，用于指定返回给客户端的响应主题，如 <code>reqrsp/</code>，此时请求和应答客户端都需要使用 <code>reqrsp/</code> 前缀的主题来完成通讯。\n如希望禁用此功能，请在下方的文字框中输入<code>\"\"</code>；仅适用于 MQTT 5.0 客户端。",
              "hash" : "V-mqtt-S-mqtt-response_information",
              "text" : "response_information",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "doc" : "EMQX 要求的保活时间，如设为 disabled，则将使用客户端指定的保持连接时间；仅适用于 MQTT 5.0 客户端。",
              "hash" : "V-mqtt-S-mqtt-server_keepalive",
              "text" : "server_keepalive",
              "type" : "OneOf(Integer(1..+inf),String(\"disabled\"))",
              "default" : "disabled"
            },
            {
              "doc" : "EMQX 判定客户端 Keep Alive 超时使用的 Keep Alive 倍数。计算公式为：Keep Alive 超时 = Keep Alive 间隔 × Keep Alive 倍数。 默认值 1.5 遵循 MQTT 5.0 规范。此倍数可调整，为系统管理员提供根据特定需求进行定制的灵活性。例如，如果客户端的 10 秒保持连接间隔的 PINGREQ 因为额外的 10 秒延迟，将倍数更改为 2 可以让 EMQX 容忍此延迟。",
              "hash" : "V-mqtt-S-mqtt-keepalive_multiplier",
              "text" : "keepalive_multiplier",
              "type" : "Number",
              "default" : "1.5"
            },
            {
              "doc" : "QoS 1/2 消息的重新投递间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-mqtt-S-mqtt-retry_interval",
              "text" : "retry_interval",
              "type" : "Duration",
              "default" : "\"30s\""
            },
            {
              "doc" : "是否使用用户名作为客户端 ID。\n此设置的作用时间晚于 <code>对端证书作为用户名</code> 和 <code>对端证书作为客户端 ID</code>。",
              "hash" : "V-mqtt-S-mqtt-use_username_as_clientid",
              "text" : "use_username_as_clientid",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "使用对端证书中的 CN、DN 字段或整个证书内容来作为用户名；仅适用于 TLS 连接。\n目前支持：\n- <code>cn</code>: 取证书的 CN 字段\n- <code>dn</code>: 取证书的 DN 字段\n- <code>crt</code>: 取 <code>DER</code> 或 <code>PEM</code> 的证书内容\n- <code>pem</code>: 将 <code>DER</code> 证书转换为 <code>PEM</code> 格式作为用户名\n- <code>md5</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书内容的 MD5 值",
              "hash" : "V-mqtt-S-mqtt-peer_cert_as_username",
              "text" : "peer_cert_as_username",
              "type" : "Enum(disabled,cn,dn,crt,pem,md5)",
              "default" : "disabled"
            },
            {
              "doc" : "使用对端证书中的 CN、DN 字段或整个证书内容来作为客户端 ID。仅适用于 TLS 连接；\n目前支持：\n- <code>cn</code>: 取证书的 CN 字段\n- <code>dn</code>: 取证书的 DN 字段\n- <code>crt</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书的内容\n- <code>pem</code>: 将 <code>DER</code> 证书内容转换为 <code>PEM</code> 格式作为客户端 ID\n- <code>md5</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书内容的 MD5 值",
              "hash" : "V-mqtt-S-mqtt-peer_cert_as_clientid",
              "text" : "peer_cert_as_clientid",
              "type" : "Enum(disabled,cn,dn,crt,pem,md5)",
              "default" : "disabled"
            },
            {
              "doc" : "Specify how to initialize client attributes.\nEach client attribute can be initialized as `client_attrs.{NAME}`,\nwhere `{NAME}` is the name of the attribute specified in the config field `set_as_attr`.\nThe initialized client attribute will be stored in the `client_attrs` property with the specified name,\nand can be used as a placeholder in a template for authentication and authorization.\nFor example, use `${client_attrs.alias}` to render an HTTP POST body when `set_as_attr = alias`,\nor render listener config `moutpoint = devices/${client_attrs.alias}/` to initialize a per-client topic namespace.",
              "refs" : [
                {
                  "doc" : "Specify how to initialize client attributes.\nEach client attribute can be initialized as `client_attrs.{NAME}`,\nwhere `{NAME}` is the name of the attribute specified in the config field `set_as_attr`.\nThe initialized client attribute will be stored in the `client_attrs` property with the specified name,\nand can be used as a placeholder in a template for authentication and authorization.\nFor example, use `${client_attrs.alias}` to render an HTTP POST body when `set_as_attr = alias`,\nor render listener config `moutpoint = devices/${client_attrs.alias}/` to initialize a per-client topic namespace.",
                  "hash" : "T-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init",
                  "fields" : [
                    {
                      "doc" : "A one line expression to evaluate a set of predefined string functions (like in the rule engine SQL statements).\nThe expression can be a function call with nested calls as its arguments, or direct variable reference.\nSo far, it does not provide user-defined variable binding (like `var a=1`) or user-defined functions.\nAs an example, to extract the prefix of client ID delimited by a dot: `nth(1, tokens(clientid, '.'))`.\n\nThe variables pre-bound variables are:\n- `cn`: Client's TLS certificate common name.\n- `dn`: Client's TLS certificate distinguished name (the subject).\n- `clientid`: MQTT Client ID.\n- `username`: MQTT Client's username.\n- `user_property.{NAME}`: User properties in the CONNECT packet.\n\nYou can read more about variform expressions in EMQX docs.",
                      "hash" : "V-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init-expression",
                      "text" : "expression",
                      "type" : "String"
                    },
                    {
                      "doc" : "The name of the client attribute extracted from the client data.\nThe extracted attribute will be stored in the `client_attrs` property with this name.",
                      "hash" : "V-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init-set_as_attr",
                      "text" : "set_as_attr",
                      "type" : "String"
                    }
                  ],
                  "text" : "client_attrs_init"
                }
              ],
              "hash" : "V-mqtt-S-mqtt-client_attrs_init",
              "text" : "client_attrs_init",
              "type" : "Array(Struct(client_attrs_init))",
              "default" : "[]"
            },
            {
              "doc" : "指定会话将在连接断开后多久过期，仅适用于非 MQTT 5.0 的连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-mqtt-S-mqtt-session_expiry_interval",
              "text" : "session_expiry_interval",
              "type" : "Duration",
              "default" : "\"2h\""
            },
            {
              "doc" : "MQTT 消息的过期间隔。对于 MQTT 5.0 客户端，此配置仅在消息中未设置 Message-Expiry-Interval 属性时生效；否则，将使用 Message-Expiry-Interval 属性的值。对于 5.0 之前的 MQTT 版本，此配置将始终生效。请注意，将 message_expiry_interval 设置为大于 session_expiry_interval 是没有意义的，因为会话过期时所有消息将被清除。",
              "hash" : "V-mqtt-S-mqtt-message_expiry_interval",
              "text" : "message_expiry_interval",
              "type" : "OneOf(Duration,String(\"infinity\"))",
              "default" : "infinity"
            },
            {
              "doc" : "每个发布者的会话中，都存在一个队列来处理客户端发送的 QoS 2 消息。该队列会存储 QoS 2 消息的报文 ID 直到收到客户端的 PUBREL 或超时，达到队列长度的限制后，新的 QoS 2 消息发布会被拒绝，并返回 `147(0x93)` 错误。",
              "hash" : "V-mqtt-S-mqtt-max_awaiting_rel",
              "text" : "max_awaiting_rel",
              "type" : "OneOf(Integer(0..+inf),String(\"infinity\"))",
              "default" : "100"
            },
            {
              "doc" : "允许的最大 QoS 等级。",
              "hash" : "V-mqtt-S-mqtt-max_qos_allowed",
              "text" : "max_qos_allowed",
              "type" : "Integer(0..2)",
              "default" : "2"
            },
            {
              "doc" : "主题优先级。取值范围 [1-255]\n默认优先级表为空，即所有的主题优先级相同。\n\n注：优先主题名称中不支持使用逗号和等号。\n注：不在此列表中的主题，被视为最高/最低优先级，这取决于<code>mqtt.mqueue_default_priority</code> 的配置。\n\n示例：\n配置 <code>\"topic/1\" > \"topic/2\"</code>:\n<code>mqueue_priorities: {\"topic/1\": 10, \"topic/2\": 8}</code>",
              "hash" : "V-mqtt-S-mqtt-mqueue_priorities",
              "text" : "mqueue_priorities",
              "type" : "OneOf(String(\"disabled\"),Map)",
              "default" : "disabled"
            },
            {
              "doc" : "默认的主题优先级，不在 <code>主题优先级</code>（<code>mqueue_priorities</code>） 中的主题将会使用该优先级。",
              "hash" : "V-mqtt-S-mqtt-mqueue_default_priority",
              "text" : "mqueue_default_priority",
              "type" : "Enum(highest,lowest)",
              "default" : "lowest"
            },
            {
              "doc" : "指定在连接断开但会话保持期间，是否需要在消息队列中存储 QoS 0 消息。",
              "hash" : "V-mqtt-S-mqtt-mqueue_store_qos0",
              "text" : "mqueue_store_qos0",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "消息队列最大长度。持久客户端断开连接或飞行窗口已满时排队的消息长度。",
              "hash" : "V-mqtt-S-mqtt-max_mqueue_len",
              "text" : "max_mqueue_len",
              "type" : "OneOf(Integer(0..+inf),String(\"infinity\"))",
              "default" : "1000"
            },
            {
              "doc" : "允许在完成应答前同时投递的 QoS 1 和 QoS 2 消息的最大数量。",
              "hash" : "V-mqtt-S-mqtt-max_inflight",
              "text" : "max_inflight",
              "type" : "Integer(1..65535)",
              "default" : "32"
            },
            {
              "doc" : "允许每个客户端建立的最大订阅数量。",
              "hash" : "V-mqtt-S-mqtt-max_subscriptions",
              "text" : "max_subscriptions",
              "type" : "OneOf(Integer(1..inf),String(\"infinity\"))",
              "default" : "infinity"
            },
            {
              "doc" : "投递消息时，是否根据订阅主题时的 QoS 等级来强制提升派发的消息的 QoS 等级。",
              "hash" : "V-mqtt-S-mqtt-upgrade_qos",
              "text" : "upgrade_qos",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "客户端发布 QoS 2 消息时，服务器等待 `PUBREL` 的最长时延。超过该时长后服务器会放弃等待，该 PACKET ID 会被释放，从而允许后续新的 PUBLISH 消息使用。如果超时后收到 PUBREL，服务器将会产生一条告警日志。注意，向订阅客户端转发消息的动作发生在进入等待之前。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-mqtt-S-mqtt-await_rel_timeout",
              "text" : "await_rel_timeout",
              "type" : "Duration",
              "default" : "\"300s\""
            }
          ],
          "text" : "mqtt"
        }
      ],
      "hash" : "V-mqtt",
      "text" : "mqtt",
      "type" : "Struct(mqtt)"
    },
    {
      "doc" : "默认的 MQTT 监听器的全局认证配置。\n\n有关每个监听器的单独配置，请参阅监听器配置中的<code>authentication</code>。\n\n此选项可配置为：\n<ul>\n  <li><code>[]</code>: 默认值，允许 *所有* 登录</li>\n  <li>one: 例如 <code>{enable:true,backend:\"built_in_database\",mechanism=\"password_based\"}</code></li>\n  <li>chain: 结构体数组。</li>\n</ul>\n\n当配置了一个认证链时，登录凭据将按照配置的顺序检查后端，直到可以做出'允许'或'拒绝'的决定。\n\n如果在完全遍历认证链之后没有决定，登录将被拒绝。",
      "refs" : [
        {
          "doc" : "使用内置数据库作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-builtin_db",
          "fields" : [
            {
              "doc" : "Options for password hash creation and verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm (for DB backends with write capability).",
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    },
                    {
                      "doc" : "Work factor for BCRYPT password generation.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw-salt_rounds",
                      "text" : "salt_rounds",
                      "type" : "Integer(5..10)",
                      "default" : "10"
                    }
                  ],
                  "text" : "bcrypt_rw"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-builtin_db-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt_rw),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-builtin_db-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-builtin_db-backend",
              "text" : "backend",
              "type" : "String(\"built_in_database\")"
            },
            {
              "doc" : "指定用于客户端身份 ID 认证的字段。",
              "hash" : "V-authentication-S-builtin_db-user_id_type",
              "text" : "user_id_type",
              "type" : "Enum(clientid,username)",
              "default" : "username"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-builtin_db-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            }
          ],
          "text" : "builtin_db"
        },
        {
          "doc" : "使用 MySQL 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-mysql",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-mysql-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-mysql-backend",
              "text" : "backend",
              "type" : "String(\"mysql\")"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mysql-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "用于查询密码散列等用于认证的数据的 SQL 语句。",
              "hash" : "V-authentication-S-mysql-query",
              "text" : "query",
              "type" : "String"
            },
            {
              "doc" : "SQL 查询的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-mysql-query_timeout",
              "text" : "query_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-mysql-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "用于连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机条目的格式如下：主机[:端口]。<br/>\n如果未指定[:端口]，将使用 MySQL 的默认端口3306。",
              "hash" : "V-authentication-S-mysql-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "数据库名字。",
              "hash" : "V-authentication-S-mysql-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-mysql-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-mysql-username",
              "text" : "username",
              "type" : "String",
              "default" : "root"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-mysql-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-mysql-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-mysql-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mysql-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "mysql"
        },
        {
          "doc" : "使用 PostgreSQL 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-postgresql",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-postgresql-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-postgresql-backend",
              "text" : "backend",
              "type" : "String(\"postgresql\")"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-postgresql-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "用于查询密码散列等用于认证的数据的 SQL 语句。",
              "hash" : "V-authentication-S-postgresql-query",
              "text" : "query",
              "type" : "String"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-postgresql-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n一个主机条目的格式为：Host[:Port]。<br/>\n如果没有指定 [:Port]，将使用 PostgreSQL 默认端口 5432。",
              "hash" : "V-authentication-S-postgresql-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "数据库名字。",
              "hash" : "V-authentication-S-postgresql-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-postgresql-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-postgresql-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-postgresql-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-postgresql-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-postgresql-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-postgresql-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "postgresql"
        },
        {
          "doc" : "使用 MongoDB (Standalone) 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-mongo_single",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-mongo_single-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-mongo_single-backend",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "doc" : "存储认证数据的集合。",
              "hash" : "V-authentication-S-mongo_single-collection",
              "text" : "collection",
              "type" : "String"
            },
            {
              "doc" : "在查询中定义过滤条件的条件表达式。\n过滤器支持如下占位符：\n- <code>${username}</code>: 将在运行时被替换为客户端连接时使用的用户名\n- <code>${clientid}</code>: 将在运行时被替换为客户端连接时使用的客户端 ID",
              "hash" : "V-authentication-S-mongo_single-filter",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "存储密码散列值字段。",
              "hash" : "V-authentication-S-mongo_single-password_hash_field",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "doc" : "用于存储盐值的字段。",
              "hash" : "V-authentication-S-mongo_single-salt_field",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "doc" : "定义用户是否具有超级用户权限的字段。",
              "hash" : "V-authentication-S-mongo_single-is_superuser_field",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-mongo_single-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "独立实例。当MongoDB服务器以独立模式运行时，必须设置为`single`。",
              "hash" : "V-authentication-S-mongo_single-mongo_type",
              "text" : "mongo_type",
              "type" : "String(\"single\")",
              "default" : "single"
            },
            {
              "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机条目具有以下形式：主机[:端口]。<br/>如果未指定[:端口]，则使用MongoDB的默认端口27017。",
              "hash" : "V-authentication-S-mongo_single-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "写入模式",
              "hash" : "V-authentication-S-mongo_single-w_mode",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "doc" : "使用 DNS SRV 记录。",
              "hash" : "V-authentication-S-mongo_single-srv_record",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-mongo_single-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-mongo_single-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-mongo_single-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
              "hash" : "V-authentication-S-mongo_single-use_legacy_protocol",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "doc" : "与用户认证信息关联的数据库名称。",
              "hash" : "V-authentication-S-mongo_single-auth_source",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "doc" : "数据库名字。",
              "hash" : "V-authentication-S-mongo_single-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "doc" : "MongoDB 的拓扑结构。",
                  "hash" : "T-authentication-S-mongo_single-topology-S-topology",
                  "fields" : [
                    {
                      "doc" : "在池中的所有工作线程都繁忙时，可以创建的附加工作线程的最大数量。这有助于通过允许更多并发连接到 MongoDB 服务器来管理工作负载的暂时性波动。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-max_overflow",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "超出配置的池大小（\"溢出\"）的工作线程在终止之前的时间段。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-overflow_ttl",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "检查是否存在多余工作线程（\"溢出\"）的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-overflow_check_period",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "用于在多个合适的 MongoDB 实例中进行选择的延迟窗口的大小。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-local_threshold_ms",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "在超时之前尝试连接的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-connect_timeout_ms",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "在套接字上尝试发送或接收超时之前的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-socket_timeout_ms",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "指定在抛出异常之前进行服务器选择的阻塞时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-server_selection_timeout_ms",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "工作线程等待连接可用的最长时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-wait_queue_timeout_ms",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "控制驱动程序何时检查 MongoDB 部署的状态。指定检查之间的时间间隔，从上次检查结束到下次检查开始计算。如果连接数增加（例如，如果增加了池大小），则可能需要增加此时间间隔，以避免在 MongoDB 日志文件中创建过多的日志条目。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-heartbeat_frequency_ms",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "doc" : "控制心跳之间等待的最短时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-min_heartbeat_frequency_ms",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-mongo_single-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "mongo_single"
        },
        {
          "doc" : "使用 MongoDB (Replica Set) 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-mongo_rs",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-mongo_rs-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-mongo_rs-backend",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "doc" : "存储认证数据的集合。",
              "hash" : "V-authentication-S-mongo_rs-collection",
              "text" : "collection",
              "type" : "String"
            },
            {
              "doc" : "在查询中定义过滤条件的条件表达式。\n过滤器支持如下占位符：\n- <code>${username}</code>: 将在运行时被替换为客户端连接时使用的用户名\n- <code>${clientid}</code>: 将在运行时被替换为客户端连接时使用的客户端 ID",
              "hash" : "V-authentication-S-mongo_rs-filter",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "存储密码散列值字段。",
              "hash" : "V-authentication-S-mongo_rs-password_hash_field",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "doc" : "用于存储盐值的字段。",
              "hash" : "V-authentication-S-mongo_rs-salt_field",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "doc" : "定义用户是否具有超级用户权限的字段。",
              "hash" : "V-authentication-S-mongo_rs-is_superuser_field",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-mongo_rs-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "副本集。当MongoDB服务器以`副本集`模式运行时，必须设置为`rs`。",
              "hash" : "V-authentication-S-mongo_rs-mongo_type",
              "text" : "mongo_type",
              "type" : "String(\"rs\")",
              "default" : "rs"
            },
            {
              "doc" : "集群连接的节点列表。节点应使用逗号分隔，例如：节点[,节点]。\n对于每个节点，应该是要连接的 IPv4 或 IPv6 地址或主机名。\n主机条目具有以下形式：主机[:端口]。\n如果未指定[:端口]，则使用 MongoDB 的默认端口27017。",
              "hash" : "V-authentication-S-mongo_rs-servers",
              "text" : "servers",
              "type" : "String"
            },
            {
              "doc" : "写入模式",
              "hash" : "V-authentication-S-mongo_rs-w_mode",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "doc" : "读取模式。",
              "hash" : "V-authentication-S-mongo_rs-r_mode",
              "text" : "r_mode",
              "type" : "Enum(master,slave_ok)",
              "default" : "master"
            },
            {
              "doc" : "副本集的名称。",
              "hash" : "V-authentication-S-mongo_rs-replica_set_name",
              "text" : "replica_set_name",
              "type" : "String"
            },
            {
              "doc" : "使用 DNS SRV 记录。",
              "hash" : "V-authentication-S-mongo_rs-srv_record",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-mongo_rs-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-mongo_rs-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-mongo_rs-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
              "hash" : "V-authentication-S-mongo_rs-use_legacy_protocol",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "doc" : "与用户认证信息关联的数据库名称。",
              "hash" : "V-authentication-S-mongo_rs-auth_source",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "doc" : "数据库名字。",
              "hash" : "V-authentication-S-mongo_rs-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "doc" : "MongoDB 的拓扑结构。",
                  "hash" : "T-authentication-S-mongo_rs-topology-S-topology",
                  "fields" : [
                    {
                      "doc" : "在池中的所有工作线程都繁忙时，可以创建的附加工作线程的最大数量。这有助于通过允许更多并发连接到 MongoDB 服务器来管理工作负载的暂时性波动。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-max_overflow",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "超出配置的池大小（\"溢出\"）的工作线程在终止之前的时间段。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-overflow_ttl",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "检查是否存在多余工作线程（\"溢出\"）的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-overflow_check_period",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "用于在多个合适的 MongoDB 实例中进行选择的延迟窗口的大小。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-local_threshold_ms",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "在超时之前尝试连接的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-connect_timeout_ms",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "在套接字上尝试发送或接收超时之前的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-socket_timeout_ms",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "指定在抛出异常之前进行服务器选择的阻塞时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-server_selection_timeout_ms",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "工作线程等待连接可用的最长时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-wait_queue_timeout_ms",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "控制驱动程序何时检查 MongoDB 部署的状态。指定检查之间的时间间隔，从上次检查结束到下次检查开始计算。如果连接数增加（例如，如果增加了池大小），则可能需要增加此时间间隔，以避免在 MongoDB 日志文件中创建过多的日志条目。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-heartbeat_frequency_ms",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "doc" : "控制心跳之间等待的最短时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-min_heartbeat_frequency_ms",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-mongo_rs-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "mongo_rs"
        },
        {
          "doc" : "使用 MongoDB (Sharded Cluster) 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-mongo_sharded",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-mongo_sharded-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-mongo_sharded-backend",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "doc" : "存储认证数据的集合。",
              "hash" : "V-authentication-S-mongo_sharded-collection",
              "text" : "collection",
              "type" : "String"
            },
            {
              "doc" : "在查询中定义过滤条件的条件表达式。\n过滤器支持如下占位符：\n- <code>${username}</code>: 将在运行时被替换为客户端连接时使用的用户名\n- <code>${clientid}</code>: 将在运行时被替换为客户端连接时使用的客户端 ID",
              "hash" : "V-authentication-S-mongo_sharded-filter",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "存储密码散列值字段。",
              "hash" : "V-authentication-S-mongo_sharded-password_hash_field",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "doc" : "用于存储盐值的字段。",
              "hash" : "V-authentication-S-mongo_sharded-salt_field",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "doc" : "定义用户是否具有超级用户权限的字段。",
              "hash" : "V-authentication-S-mongo_sharded-is_superuser_field",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-mongo_sharded-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "分片集群。当 MongoDB 服务器以`分片`模式运行时，必须设置为`sharded`。",
              "hash" : "V-authentication-S-mongo_sharded-mongo_type",
              "text" : "mongo_type",
              "type" : "String(\"sharded\")",
              "default" : "sharded"
            },
            {
              "doc" : "集群连接的节点列表。节点应使用逗号分隔，例如：节点[,节点]。\n对于每个节点，应该是要连接的 IPv4 或 IPv6 地址或主机名。\n主机条目具有以下形式：主机[:端口]。\n如果未指定[:端口]，则使用 MongoDB 的默认端口27017。",
              "hash" : "V-authentication-S-mongo_sharded-servers",
              "text" : "servers",
              "type" : "String"
            },
            {
              "doc" : "写入模式",
              "hash" : "V-authentication-S-mongo_sharded-w_mode",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "doc" : "使用 DNS SRV 记录。",
              "hash" : "V-authentication-S-mongo_sharded-srv_record",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-mongo_sharded-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-mongo_sharded-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-mongo_sharded-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
              "hash" : "V-authentication-S-mongo_sharded-use_legacy_protocol",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "doc" : "与用户认证信息关联的数据库名称。",
              "hash" : "V-authentication-S-mongo_sharded-auth_source",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "doc" : "数据库名字。",
              "hash" : "V-authentication-S-mongo_sharded-database",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "doc" : "MongoDB 的拓扑结构。",
                  "hash" : "T-authentication-S-mongo_sharded-topology-S-topology",
                  "fields" : [
                    {
                      "doc" : "在池中的所有工作线程都繁忙时，可以创建的附加工作线程的最大数量。这有助于通过允许更多并发连接到 MongoDB 服务器来管理工作负载的暂时性波动。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-max_overflow",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "超出配置的池大小（\"溢出\"）的工作线程在终止之前的时间段。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-overflow_ttl",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "检查是否存在多余工作线程（\"溢出\"）的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-overflow_check_period",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "用于在多个合适的 MongoDB 实例中进行选择的延迟窗口的大小。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-local_threshold_ms",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "在超时之前尝试连接的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-connect_timeout_ms",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "在套接字上尝试发送或接收超时之前的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-socket_timeout_ms",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "指定在抛出异常之前进行服务器选择的阻塞时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-server_selection_timeout_ms",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "工作线程等待连接可用的最长时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-wait_queue_timeout_ms",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "控制驱动程序何时检查 MongoDB 部署的状态。指定检查之间的时间间隔，从上次检查结束到下次检查开始计算。如果连接数增加（例如，如果增加了池大小），则可能需要增加此时间间隔，以避免在 MongoDB 日志文件中创建过多的日志条目。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-heartbeat_frequency_ms",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "doc" : "控制心跳之间等待的最短时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-mongo_sharded-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "mongo_sharded"
        },
        {
          "doc" : "使用 Redis (Standalone) 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-redis_single",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-redis_single-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-redis_single-backend",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "doc" : "用于查询密码散列等用于认证的数据的 Redis 命令，目前仅支持 <code>HGET</code> 与 <code>HMGET</code>。",
              "hash" : "V-authentication-S-redis_single-cmd",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_single-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-redis_single-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
              "hash" : "V-authentication-S-redis_single-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "Single 模式。 当 Redis 服务器在 Single 模式下运行时必须设置为 'single' 。",
              "hash" : "V-authentication-S-redis_single-redis_type",
              "text" : "redis_type",
              "type" : "String(\"single\")",
              "default" : "single"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-redis_single-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-redis_single-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-redis_single-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Redis 数据库 ID。",
              "hash" : "V-authentication-S-redis_single-database",
              "text" : "database",
              "type" : "Integer(0..+inf)",
              "default" : "0"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-redis_single-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-redis_single-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_single-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "redis_single"
        },
        {
          "doc" : "使用 Redis (Cluster) 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-redis_cluster",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-redis_cluster-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-redis_cluster-backend",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "doc" : "用于查询密码散列等用于认证的数据的 Redis 命令，目前仅支持 <code>HGET</code> 与 <code>HMGET</code>。",
              "hash" : "V-authentication-S-redis_cluster-cmd",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-redis_cluster-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：Node[,Node]。每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
              "hash" : "V-authentication-S-redis_cluster-servers",
              "text" : "servers",
              "type" : "String"
            },
            {
              "doc" : "Cluster 模式。当 Redis 服务器在集群模式下运行时必须设置为'cluster'。",
              "hash" : "V-authentication-S-redis_cluster-redis_type",
              "text" : "redis_type",
              "type" : "String(\"cluster\")",
              "default" : "cluster"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-redis_cluster-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-redis_cluster-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-redis_cluster-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-redis_cluster-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-redis_cluster-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_cluster-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "redis_cluster"
        },
        {
          "doc" : "使用 Redis (Sentinel) 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-redis_sentinel",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-redis_sentinel-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-redis_sentinel-backend",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "doc" : "用于查询密码散列等用于认证的数据的 Redis 命令，目前仅支持 <code>HGET</code> 与 <code>HMGET</code>。",
              "hash" : "V-authentication-S-redis_sentinel-cmd",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "doc" : "Options for password hash verification.",
              "refs" : [
                {
                  "doc" : "Settings for bcrypt password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "doc" : "BCRYPT password hashing.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-bcrypt-name",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "text" : "bcrypt"
                },
                {
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "doc" : "PBKDF2 password hashing.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-name",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "doc" : "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc" : "Iteration count for PBKDF2 hashing algorithm.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-iterations",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text" : "dk_length",
                      "type" : "Integer"
                    }
                  ],
                  "text" : "pbkdf2"
                },
                {
                  "doc" : "Settings for simple algorithms.",
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "doc" : "Simple password hashing algorithm.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-simple-name",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "doc" : "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-simple-salt_position",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-redis_sentinel-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：Node[,Node]。每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
              "hash" : "V-authentication-S-redis_sentinel-servers",
              "text" : "servers",
              "type" : "String"
            },
            {
              "doc" : "Sentinel 模式。 当 Redis 服务器在 Senitel 模式下运行时必须设置为 'sentinel' 。",
              "hash" : "V-authentication-S-redis_sentinel-redis_type",
              "text" : "redis_type",
              "type" : "String(\"sentinel\")",
              "default" : "sentinel"
            },
            {
              "doc" : "Redis sentinel 模式下的集群名称。",
              "hash" : "V-authentication-S-redis_sentinel-sentinel",
              "text" : "sentinel",
              "type" : "String"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-redis_sentinel-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-redis_sentinel-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-redis_sentinel-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "Redis 数据库 ID。",
              "hash" : "V-authentication-S-redis_sentinel-database",
              "text" : "database",
              "type" : "Integer(0..+inf)",
              "default" : "0"
            },
            {
              "doc" : "Deprecated since v5.0.15.",
              "hash" : "V-authentication-S-redis_sentinel-auto_reconnect",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-redis_sentinel-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_sentinel-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "text" : "redis_sentinel"
        },
        {
          "doc" : "使用 HTTP Server 作为认证服务的认证器的配置项 (使用 GET 请求)。",
          "hash" : "T-authentication-S-http_get",
          "fields" : [
            {
              "doc" : "HTTP 请求方法。",
              "hash" : "V-authentication-S-http_get-method",
              "text" : "method",
              "type" : "String(\"get\")"
            },
            {
              "doc" : "HTTP Headers 列表 (无 <code>content-type</code>) 。",
              "hash" : "V-authentication-S-http_get-headers",
              "text" : "headers",
              "type" : "Map",
              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", keep-alive = \"timeout=30, max=1000\"}"
            },
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-http_get-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-http_get-backend",
              "text" : "backend",
              "type" : "String(\"http\")"
            },
            {
              "doc" : "认证 HTTP 服务器地址。",
              "hash" : "V-authentication-S-http_get-url",
              "text" : "url",
              "type" : "String"
            },
            {
              "doc" : "HTTP 请求体。",
              "hash" : "V-authentication-S-http_get-body",
              "text" : "body",
              "type" : "Map"
            },
            {
              "doc" : "HTTP 请求超时时长。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-http_get-request_timeout",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-http_get-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "配置 HTTP 请求参数。",
              "refs" : [
                {
                  "doc" : "",
                  "hash" : "T-authentication-S-http_get-request-S-request",
                  "fields" : [
                    {
                      "doc" : "HTTP 请求方法。",
                      "hash" : "V-authentication-S-http_get-request-S-request-method",
                      "text" : "method",
                      "type" : "String"
                    },
                    {
                      "doc" : "URL 路径。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "hash" : "V-authentication-S-http_get-request-S-request-path",
                      "text" : "path",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP 请求的主体。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "hash" : "V-authentication-S-http_get-request-S-request-body",
                      "text" : "body",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP 请求头列表。",
                      "hash" : "V-authentication-S-http_get-request-S-request-headers",
                      "text" : "headers",
                      "type" : "Map"
                    },
                    {
                      "doc" : "如果发送请求时出错，最大重试次数。",
                      "hash" : "V-authentication-S-http_get-request-S-request-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "doc" : "HTTP 请求超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-http_get-request-S-request-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "request"
                }
              ],
              "hash" : "V-authentication-S-http_get-request",
              "text" : "request",
              "type" : "Struct(request)"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-http_get-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-http_get-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "连接池大小。",
              "hash" : "V-authentication-S-http_get-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "Deprecated since 5.0.4.",
              "hash" : "V-authentication-S-http_get-max_retries",
              "text" : "max_retries",
              "type" : "Integer(0..+inf)"
            },
            {
              "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-http_get-connect_timeout",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
              "hash" : "V-authentication-S-http_get-enable_pipelining",
              "text" : "enable_pipelining",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            },
            {
              "doc" : "Deprecated since 5.0.4.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-http_get-retry_interval",
              "text" : "retry_interval",
              "type" : "Duration"
            }
          ],
          "text" : "http_get"
        },
        {
          "doc" : "使用 HTTP Server 作为认证服务的认证器的配置项 (使用 POST 请求)。",
          "hash" : "T-authentication-S-http_post",
          "fields" : [
            {
              "doc" : "HTTP 请求方法。",
              "hash" : "V-authentication-S-http_post-method",
              "text" : "method",
              "type" : "String(\"post\")"
            },
            {
              "doc" : "HTTP Headers 列表",
              "hash" : "V-authentication-S-http_post-headers",
              "text" : "headers",
              "type" : "Map",
              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=30, max=1000\"}"
            },
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-http_post-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-http_post-backend",
              "text" : "backend",
              "type" : "String(\"http\")"
            },
            {
              "doc" : "认证 HTTP 服务器地址。",
              "hash" : "V-authentication-S-http_post-url",
              "text" : "url",
              "type" : "String"
            },
            {
              "doc" : "HTTP 请求体。",
              "hash" : "V-authentication-S-http_post-body",
              "text" : "body",
              "type" : "Map"
            },
            {
              "doc" : "HTTP 请求超时时长。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-http_post-request_timeout",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-http_post-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "配置 HTTP 请求参数。",
              "refs" : [
                {
                  "doc" : "",
                  "hash" : "T-authentication-S-http_post-request-S-request",
                  "fields" : [
                    {
                      "doc" : "HTTP 请求方法。",
                      "hash" : "V-authentication-S-http_post-request-S-request-method",
                      "text" : "method",
                      "type" : "String"
                    },
                    {
                      "doc" : "URL 路径。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "hash" : "V-authentication-S-http_post-request-S-request-path",
                      "text" : "path",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP 请求的主体。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "hash" : "V-authentication-S-http_post-request-S-request-body",
                      "text" : "body",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP 请求头列表。",
                      "hash" : "V-authentication-S-http_post-request-S-request-headers",
                      "text" : "headers",
                      "type" : "Map"
                    },
                    {
                      "doc" : "如果发送请求时出错，最大重试次数。",
                      "hash" : "V-authentication-S-http_post-request-S-request-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "doc" : "HTTP 请求超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-http_post-request-S-request-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    }
                  ],
                  "text" : "request"
                }
              ],
              "hash" : "V-authentication-S-http_post-request",
              "text" : "request",
              "type" : "Struct(request)"
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-http_post-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-http_post-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "连接池大小。",
              "hash" : "V-authentication-S-http_post-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "Deprecated since 5.0.4.",
              "hash" : "V-authentication-S-http_post-max_retries",
              "text" : "max_retries",
              "type" : "Integer(0..+inf)"
            },
            {
              "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-http_post-connect_timeout",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
              "hash" : "V-authentication-S-http_post-enable_pipelining",
              "text" : "enable_pipelining",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            },
            {
              "doc" : "Deprecated since 5.0.4.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-http_post-retry_interval",
              "text" : "retry_interval",
              "type" : "Duration"
            }
          ],
          "text" : "http_post"
        },
        {
          "doc" : "用于认证的 JWT 使用 HMAC 算法签发时的配置。",
          "hash" : "T-authentication-S-jwt_hmac",
          "fields" : [
            {
              "doc" : "JWT 签名算法，支持 HMAC (配置为 <code>hmac-based</code>）和 RSA、ECDSA (配置为 <code>public-key</code>)。",
              "hash" : "V-authentication-S-jwt_hmac-algorithm",
              "text" : "algorithm",
              "type" : "Enum(hmac-based)"
            },
            {
              "doc" : "使用 HMAC 算法时用于验证 JWT 的密钥",
              "hash" : "V-authentication-S-jwt_hmac-secret",
              "text" : "secret",
              "type" : "String"
            },
            {
              "doc" : "密钥是否为 base64 编码。",
              "hash" : "V-authentication-S-jwt_hmac-secret_base64_encoded",
              "text" : "secret_base64_encoded",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-jwt_hmac-mechanism",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "doc" : "用于获取 ACL 规则的 JWT 声明名称。",
              "hash" : "V-authentication-S-jwt_hmac-acl_claim_name",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "doc" : "需要验证的自定义声明列表，是一个由名称/值对组成的列表。指定一个键(Key)来查找 JWT 中对应的声明(Claim)，并提供一个预期值(Expected Value)来与声明的实际值进行比较，以确保只有满足特定条件的 JWT 才能被接受和使用。\n例如要求 JWT 中的特定声明(如 clientid)的值必须与当前连接的客户端 ID 相匹配。\n预期值可以使用以下占位符：\n- <code>${username}</code>: 将在运行时被替换为客户端连接时使用的用户名\n- <code>${clientid}</code>: 将在运行时被替换为客户端连接时使用的客户端 ID\n身份认证将确认 JWT 中的声明值（从密码字段中获取）与 <code>verify_claims</code> 中要求的内容是否匹配。",
              "hash" : "V-authentication-S-jwt_hmac-verify_claims",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "[]"
            },
            {
              "doc" : "Disconnect the client after the token expires.",
              "hash" : "V-authentication-S-jwt_hmac-disconnect_after_expire",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "指定客户端连接请求中 JWT 的位置。",
              "hash" : "V-authentication-S-jwt_hmac-from",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-jwt_hmac-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            }
          ],
          "text" : "jwt_hmac"
        },
        {
          "doc" : "用于认证的 JWT 使用 RSA 或 ECDSA 算法签发时的配置。",
          "hash" : "T-authentication-S-jwt_public_key",
          "fields" : [
            {
              "doc" : "JWT 签名算法，支持 HMAC (配置为 <code>hmac-based</code>）和 RSA、ECDSA (配置为 <code>public-key</code>)。",
              "hash" : "V-authentication-S-jwt_public_key-algorithm",
              "text" : "algorithm",
              "type" : "Enum(public-key)"
            },
            {
              "doc" : "用于验证 JWT 的公钥。",
              "hash" : "V-authentication-S-jwt_public_key-public_key",
              "text" : "public_key",
              "type" : "String"
            },
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-jwt_public_key-mechanism",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "doc" : "用于获取 ACL 规则的 JWT 声明名称。",
              "hash" : "V-authentication-S-jwt_public_key-acl_claim_name",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "doc" : "需要验证的自定义声明列表，是一个由名称/值对组成的列表。指定一个键(Key)来查找 JWT 中对应的声明(Claim)，并提供一个预期值(Expected Value)来与声明的实际值进行比较，以确保只有满足特定条件的 JWT 才能被接受和使用。\n例如要求 JWT 中的特定声明(如 clientid)的值必须与当前连接的客户端 ID 相匹配。\n预期值可以使用以下占位符：\n- <code>${username}</code>: 将在运行时被替换为客户端连接时使用的用户名\n- <code>${clientid}</code>: 将在运行时被替换为客户端连接时使用的客户端 ID\n身份认证将确认 JWT 中的声明值（从密码字段中获取）与 <code>verify_claims</code> 中要求的内容是否匹配。",
              "hash" : "V-authentication-S-jwt_public_key-verify_claims",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "[]"
            },
            {
              "doc" : "Disconnect the client after the token expires.",
              "hash" : "V-authentication-S-jwt_public_key-disconnect_after_expire",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "指定客户端连接请求中 JWT 的位置。",
              "hash" : "V-authentication-S-jwt_public_key-from",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-jwt_public_key-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            }
          ],
          "text" : "jwt_public_key"
        },
        {
          "doc" : "用于认证的 JWTs 需要从 JWKS 端点获取时的配置。",
          "hash" : "T-authentication-S-jwt_jwks",
          "fields" : [
            {
              "doc" : "是否使用 JWKS。",
              "hash" : "V-authentication-S-jwt_jwks-use_jwks",
              "text" : "use_jwks",
              "type" : "Enum(true)"
            },
            {
              "doc" : "JWKS 端点， 它是一个以 JWKS 格式返回服务端的公钥集的只读端点。",
              "hash" : "V-authentication-S-jwt_jwks-endpoint",
              "text" : "endpoint",
              "type" : "String"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-jwt_jwks-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "JWKS 刷新间隔。",
              "hash" : "V-authentication-S-jwt_jwks-refresh_interval",
              "text" : "refresh_interval",
              "type" : "Integer",
              "default" : "300"
            },
            {
              "doc" : "SSL 选项。",
              "refs" : [
                {
                  "doc" : "Socket options for SSL clients.",
                  "hash" : "T-authentication-S-jwt_jwks-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-jwt_jwks-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-jwt_jwks-mechanism",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "doc" : "用于获取 ACL 规则的 JWT 声明名称。",
              "hash" : "V-authentication-S-jwt_jwks-acl_claim_name",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "doc" : "需要验证的自定义声明列表，是一个由名称/值对组成的列表。指定一个键(Key)来查找 JWT 中对应的声明(Claim)，并提供一个预期值(Expected Value)来与声明的实际值进行比较，以确保只有满足特定条件的 JWT 才能被接受和使用。\n例如要求 JWT 中的特定声明(如 clientid)的值必须与当前连接的客户端 ID 相匹配。\n预期值可以使用以下占位符：\n- <code>${username}</code>: 将在运行时被替换为客户端连接时使用的用户名\n- <code>${clientid}</code>: 将在运行时被替换为客户端连接时使用的客户端 ID\n身份认证将确认 JWT 中的声明值（从密码字段中获取）与 <code>verify_claims</code> 中要求的内容是否匹配。",
              "hash" : "V-authentication-S-jwt_jwks-verify_claims",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "[]"
            },
            {
              "doc" : "Disconnect the client after the token expires.",
              "hash" : "V-authentication-S-jwt_jwks-disconnect_after_expire",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "指定客户端连接请求中 JWT 的位置。",
              "hash" : "V-authentication-S-jwt_jwks-from",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-jwt_jwks-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            }
          ],
          "text" : "jwt_jwks"
        },
        {
          "doc" : "Settings for Salted Challenge Response Authentication Mechanism\n(SCRAM) authentication.",
          "hash" : "T-authentication-S-scram",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-scram-mechanism",
              "text" : "mechanism",
              "type" : "String(\"scram\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-scram-backend",
              "text" : "backend",
              "type" : "String(\"built_in_database\")"
            },
            {
              "doc" : "Hashing algorithm.",
              "hash" : "V-authentication-S-scram-algorithm",
              "text" : "algorithm",
              "type" : "Enum(sha256,sha512)",
              "default" : "sha256"
            },
            {
              "doc" : "Iteration count.",
              "hash" : "V-authentication-S-scram-iteration_count",
              "text" : "iteration_count",
              "type" : "Integer(0..+inf)",
              "default" : "4096"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-scram-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            }
          ],
          "text" : "scram"
        },
        {
          "doc" : "使用 LDAP 作为认证数据源的认证器的配置项。",
          "hash" : "T-authentication-S-ldap",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-ldap-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-ldap-backend",
              "text" : "backend",
              "type" : "String(\"ldap\")"
            },
            {
              "doc" : "LDAP 查询的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-ldap-query_timeout",
              "text" : "query_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-ldap-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机名条目的格式为：`主机[:端口]`。<br/>\n如果 `[:端口]` 未指定， 将使用 LDAP 默认端口 389。",
              "hash" : "V-authentication-S-ldap-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-ldap-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-ldap-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-ldap-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "与基本对象条目（或根）相关的名称。\n搜索用户的起点。",
              "hash" : "V-authentication-S-ldap-base_dn",
              "text" : "base_dn",
              "type" : "String"
            },
            {
              "doc" : "定义哪些条件必须被依次满足的过滤器\n用于搜索匹配一条给定的条目.<br>\n筛选器的语法遵循 RFC 4515，并且还支持占位符。",
              "hash" : "V-authentication-S-ldap-filter",
              "text" : "filter",
              "type" : "String",
              "default" : "\"(objectClass=mqttUser)\""
            },
            {
              "doc" : "设置每个单独请求所使用的最大时间（以毫秒为单位）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-ldap-request_timeout",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "启用 SSL 连接。",
                  "hash" : "T-authentication-S-ldap-ssl-S-ssl",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl"
                }
              ],
              "hash" : "V-authentication-S-ldap-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "认证方式。",
              "refs" : [
                {
                  "doc" : "通过将本地密码与经过由`密码属性`指定的算法加密的密码进行比对来进行认证。",
                  "hash" : "T-authentication-S-ldap-method-S-hash_method",
                  "fields" : [
                    {
                      "doc" : "认证方式类型。",
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-type",
                      "text" : "type",
                      "type" : "Enum(hash)",
                      "default" : "hash"
                    },
                    {
                      "doc" : "指示哪个属性用于表示用户密码。",
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-password_attribute",
                      "text" : "password_attribute",
                      "type" : "String",
                      "default" : "userPassword"
                    },
                    {
                      "doc" : "指示哪个属性用于表示用户是否为超级用户。",
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-is_superuser_attribute",
                      "text" : "is_superuser_attribute",
                      "type" : "String",
                      "default" : "isSuperuser"
                    }
                  ],
                  "text" : "hash_method"
                },
                {
                  "doc" : "通过 LDAP 绑定操作进行认证。",
                  "hash" : "T-authentication-S-ldap-method-S-bind_method",
                  "fields" : [
                    {
                      "doc" : "认证方式类型。",
                      "hash" : "V-authentication-S-ldap-method-S-bind_method-type",
                      "text" : "type",
                      "type" : "Enum(bind)",
                      "default" : "bind"
                    },
                    {
                      "doc" : "绑定密码的模版",
                      "hash" : "V-authentication-S-ldap-method-S-bind_method-bind_password",
                      "text" : "bind_password",
                      "type" : "String",
                      "default" : "\"${password}\""
                    }
                  ],
                  "text" : "bind_method"
                }
              ],
              "hash" : "V-authentication-S-ldap-method",
              "text" : "method",
              "type" : "OneOf(Struct(hash_method),Struct(bind_method))"
            }
          ],
          "text" : "ldap"
        },
        {
          "doc" : "这是一种已弃用的形式，应避免使用。",
          "hash" : "T-authentication-S-ldap_deprecated",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-ldap_deprecated-mechanism",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "doc" : "后端类型。",
              "hash" : "V-authentication-S-ldap_deprecated-backend",
              "text" : "backend",
              "type" : "String(\"ldap\")"
            },
            {
              "doc" : "LDAP 查询的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-ldap_deprecated-query_timeout",
              "text" : "query_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-ldap_deprecated-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机名条目的格式为：`主机[:端口]`。<br/>\n如果 `[:端口]` 未指定， 将使用 LDAP 默认端口 389。",
              "hash" : "V-authentication-S-ldap_deprecated-server",
              "text" : "server",
              "type" : "String"
            },
            {
              "doc" : "桥接远端服务时使用的连接池大小。",
              "hash" : "V-authentication-S-ldap_deprecated-pool_size",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "doc" : "内部数据库的用户名。",
              "hash" : "V-authentication-S-ldap_deprecated-username",
              "text" : "username",
              "type" : "String"
            },
            {
              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
              "hash" : "V-authentication-S-ldap_deprecated-password",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "doc" : "与基本对象条目（或根）相关的名称。\n搜索用户的起点。",
              "hash" : "V-authentication-S-ldap_deprecated-base_dn",
              "text" : "base_dn",
              "type" : "String"
            },
            {
              "doc" : "定义哪些条件必须被依次满足的过滤器\n用于搜索匹配一条给定的条目.<br>\n筛选器的语法遵循 RFC 4515，并且还支持占位符。",
              "hash" : "V-authentication-S-ldap_deprecated-filter",
              "text" : "filter",
              "type" : "String",
              "default" : "\"(objectClass=mqttUser)\""
            },
            {
              "doc" : "设置每个单独请求所使用的最大时间（以毫秒为单位）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-authentication-S-ldap_deprecated-request_timeout",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "doc" : "启用 SSL 连接。",
              "refs" : [
                {
                  "doc" : "启用 SSL 连接。",
                  "hash" : "T-authentication-S-ldap_deprecated-ssl-S-ssl",
                  "fields" : [
                    {
                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-cacertfile",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since 5.1.4.",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-cacerts",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-certfile",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "PEM 格式的私钥文件。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-keyfile",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用或禁用对等验证。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-verify",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "doc" : "启用 TLS 会话重用。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-reuse_sessions",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-depth",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-password",
                      "text" : "password",
                      "type" : "String"
                    },
                    {
                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-versions",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-secure_renegotiate",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-log_level",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-hibernate_after",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 TLS。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash" : "V-authentication-S-ldap_deprecated-ssl-S-ssl-server_name_indication",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "text" : "ssl"
                }
              ],
              "hash" : "V-authentication-S-ldap_deprecated-ssl",
              "text" : "ssl",
              "type" : "Struct(ssl)",
              "default" : "{enable = false}"
            },
            {
              "doc" : "指示哪个属性用于表示用户密码。",
              "hash" : "V-authentication-S-ldap_deprecated-password_attribute",
              "text" : "password_attribute",
              "type" : "String",
              "default" : "userPassword"
            },
            {
              "doc" : "指示哪个属性用于表示用户是否为超级用户。",
              "hash" : "V-authentication-S-ldap_deprecated-is_superuser_attribute",
              "text" : "is_superuser_attribute",
              "type" : "String",
              "default" : "isSuperuser"
            }
          ],
          "text" : "ldap_deprecated"
        },
        {
          "doc" : "使用 GCP 设备作为认证数据源的认证器配置。",
          "hash" : "T-authentication-S-gcp_device",
          "fields" : [
            {
              "doc" : "认证方式。",
              "hash" : "V-authentication-S-gcp_device-mechanism",
              "text" : "mechanism",
              "type" : "String(\"gcp_device\")"
            },
            {
              "doc" : "设为 <code>true</code> 或 <code>false</code> 以禁用此认证数据源。",
              "hash" : "V-authentication-S-gcp_device-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            }
          ],
          "text" : "gcp_device"
        }
      ],
      "hash" : "V-authentication",
      "text" : "authentication",
      "type" : "Array(OneOf(Struct(builtin_db),Struct(mysql),Struct(postgresql),Struct(mongo_single),Struct(mongo_rs),Struct(mongo_sharded),Struct(redis_single),Struct(redis_cluster),Struct(redis_sentinel),Struct(http_get),Struct(http_post),Struct(jwt_hmac),Struct(jwt_public_key),Struct(jwt_jwks),Struct(scram),Struct(ldap),Struct(ldap_deprecated),Struct(gcp_device)))",
      "default" : "[]"
    },
    {
      "doc" : "授权（ACL）。EMQX 支持完整的客户端访问控制（ACL）。",
      "refs" : [
        {
          "doc" : "授权相关",
          "hash" : "T-authorization-S-authorization",
          "fields" : [
            {
              "doc" : "如果用户或客户端不匹配 ACL 规则，或者从可配置授权源(比如内置数据库、HTTP API 或 PostgreSQL 等。)内未找\n到此类用户或客户端时，模式的认访问控制操作。\n在“授权”中查找更多详细信息。",
              "hash" : "V-authorization-S-authorization-no_match",
              "text" : "no_match",
              "type" : "Enum(allow,deny)",
              "default" : "allow"
            },
            {
              "doc" : "授权检查拒绝操作时的操作。",
              "hash" : "V-authorization-S-authorization-deny_action",
              "text" : "deny_action",
              "type" : "Enum(ignore,disconnect)",
              "default" : "ignore"
            },
            {
              "refs" : [
                {
                  "doc" : "Settings for the authorization cache.",
                  "hash" : "T-authorization-S-authorization-cache-S-authz_cache",
                  "fields" : [
                    {
                      "doc" : "启用或禁用授权缓存。",
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "缓存项的最大数量。",
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-max_size",
                      "text" : "max_size",
                      "type" : "Integer(1..1048576)",
                      "default" : "32"
                    },
                    {
                      "doc" : "缓存数据的生存时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-ttl",
                      "text" : "ttl",
                      "type" : "Duration",
                      "default" : "\"1m\""
                    },
                    {
                      "doc" : "排除主题列表，列表内的主题将不会生成授权缓存。",
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-excludes",
                      "text" : "excludes",
                      "type" : "Array(String)",
                      "default" : "[]"
                    }
                  ],
                  "text" : "authz_cache"
                }
              ],
              "hash" : "V-authorization-S-authorization-cache",
              "text" : "cache",
              "type" : "Struct(authz_cache)"
            },
            {
              "doc" : "<br/>\n授权（ACL）数据提供者的数组。\n它被设计为一个数组，而不是哈希映射，因此可以\n将源按顺序排列形成访问控制链。<br/>\n\n在授权 '发布' 或 '订阅' 操作时，配置的\n源会按顺序检查。在检查 ACL 源时，\n如果未找到客户端（通过用户名或客户端 ID 标识），\n则继续检查下一个源。一旦返回 '允许' 或 '拒绝' 决定，\n立即停止检查。<br/>\n\n如果在任何源中都未找到客户端，\n则应用 'authorization.no_match' 中配置的默认操作。<br/>\n\n注意：\n源元素由它们的 '类型' 标识。\n不允许配置两个或更多相同类型的源。",
              "refs" : [
                {
                  "doc" : "使用 ACL 文件授权。",
                  "hash" : "T-authorization-S-authorization-sources-S-file",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-file-type",
                      "text" : "type",
                      "type" : "String(\"file\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-file-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "包含 ACL 规则的文件路径。\n如果该文件在启动 EMQX 节点之前已经配置好，\n只要 EMQX 有读取权限，它可以放置在任何位置。\n即，EMQX 将把它视为只读。\n\n如果规则集是从 EMQX Dashboard 或 HTTP API 创建或更新的，\n将创建一个新文件并放置在 EMQX 的 data_dir 中的 authz 子目录下，\n旧文件将不再使用。",
                      "hash" : "V-authorization-S-authorization-sources-S-file-path",
                      "text" : "path",
                      "type" : "String"
                    }
                  ],
                  "text" : "file"
                },
                {
                  "doc" : "使用内置数据库 (mnesia) 进行授权。",
                  "hash" : "T-authorization-S-authorization-sources-S-builtin_db",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-builtin_db-type",
                      "text" : "type",
                      "type" : "String(\"built_in_database\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-builtin_db-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    }
                  ],
                  "text" : "builtin_db"
                },
                {
                  "doc" : "使用外部 HTTP 服务器授权(GET 请求)。",
                  "hash" : "T-authorization-S-authorization-sources-S-http_get",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-type",
                      "text" : "type",
                      "type" : "String(\"http\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "认证服务器地址",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP 请求超时。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-request_timeout",
                      "text" : "request_timeout",
                      "type" : "String",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "HTTP 请求体",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-body",
                      "text" : "body",
                      "type" : "Map($name->String)"
                    },
                    {
                      "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-retry_interval",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "配置 HTTP 请求参数。",
                      "refs" : [
                        {
                          "doc" : "",
                          "hash" : "T-authorization-S-authorization-sources-S-http_get-request-S-request",
                          "fields" : [
                            {
                              "doc" : "HTTP 请求方法。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-method",
                              "text" : "method",
                              "type" : "String"
                            },
                            {
                              "doc" : "URL 路径。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-path",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP 请求的主体。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-body",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP 请求头列表。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-headers",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "doc" : "如果发送请求时出错，最大重试次数。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)"
                            },
                            {
                              "doc" : "HTTP 请求超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-request_timeout",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "request"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-request",
                      "text" : "request",
                      "type" : "Struct(request)"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "HTTP 请求方法",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-method",
                      "text" : "method",
                      "type" : "String(\"get\")"
                    },
                    {
                      "doc" : "HTTP Headers 列表 (无 <code>content-type</code>) 。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-headers",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", keep-alive = \"timeout=30, max=1000\"}"
                    }
                  ],
                  "text" : "http_get"
                },
                {
                  "doc" : "使用外部 HTTP 服务器授权(POST 请求)。",
                  "hash" : "T-authorization-S-authorization-sources-S-http_post",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-type",
                      "text" : "type",
                      "type" : "String(\"http\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "认证服务器地址",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP 请求超时。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-request_timeout",
                      "text" : "request_timeout",
                      "type" : "String",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "HTTP 请求体",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-body",
                      "text" : "body",
                      "type" : "Map($name->String)"
                    },
                    {
                      "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-retry_interval",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "配置 HTTP 请求参数。",
                      "refs" : [
                        {
                          "doc" : "",
                          "hash" : "T-authorization-S-authorization-sources-S-http_post-request-S-request",
                          "fields" : [
                            {
                              "doc" : "HTTP 请求方法。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-method",
                              "text" : "method",
                              "type" : "String"
                            },
                            {
                              "doc" : "URL 路径。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-path",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP 请求的主体。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-body",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP 请求头列表。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-headers",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "doc" : "如果发送请求时出错，最大重试次数。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)"
                            },
                            {
                              "doc" : "HTTP 请求超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-request_timeout",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "request"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-request",
                      "text" : "request",
                      "type" : "Struct(request)"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "HTTP 请求方法",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-method",
                      "text" : "method",
                      "type" : "String(\"post\")"
                    },
                    {
                      "doc" : "HTTP Headers 列表",
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-headers",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=30, max=1000\"}"
                    }
                  ],
                  "text" : "http_post"
                },
                {
                  "doc" : "使用单个 Redis 实例进行授权。",
                  "hash" : "T-authorization-S-authorization-sources-S-redis_single",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-type",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Single 模式。 当 Redis 服务器在 Single 模式下运行时必须设置为 'single' 。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-redis_type",
                      "text" : "redis_type",
                      "type" : "String(\"single\")",
                      "default" : "single"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Redis 数据库 ID。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-database",
                      "text" : "database",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "用于检索授权数据的数据库查询。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-cmd",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "text" : "redis_single"
                },
                {
                  "doc" : "使用 Redis Sentinel 进行授权。",
                  "hash" : "T-authorization-S-authorization-sources-S-redis_sentinel",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-type",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：Node[,Node]。每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "Sentinel 模式。 当 Redis 服务器在 Senitel 模式下运行时必须设置为 'sentinel' 。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-redis_type",
                      "text" : "redis_type",
                      "type" : "String(\"sentinel\")",
                      "default" : "sentinel"
                    },
                    {
                      "doc" : "Redis sentinel 模式下的集群名称。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-sentinel",
                      "text" : "sentinel",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Redis 数据库 ID。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-database",
                      "text" : "database",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "用于检索授权数据的数据库查询。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-cmd",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "text" : "redis_sentinel"
                },
                {
                  "doc" : "使用 Redis 集群进行授权。",
                  "hash" : "T-authorization-S-authorization-sources-S-redis_cluster",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-type",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：Node[,Node]。每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "Cluster 模式。当 Redis 服务器在集群模式下运行时必须设置为'cluster'。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-redis_type",
                      "text" : "redis_type",
                      "type" : "String(\"cluster\")",
                      "default" : "cluster"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "用于检索授权数据的数据库查询。",
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-cmd",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "text" : "redis_cluster"
                },
                {
                  "doc" : "使用 MySQL 数据库进行授权。",
                  "hash" : "T-authorization-S-authorization-sources-S-mysql",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-type",
                      "text" : "type",
                      "type" : "String(\"mysql\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "用于连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机条目的格式如下：主机[:端口]。<br/>\n如果未指定[:端口]，将使用 MySQL 的默认端口3306。",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-username",
                      "text" : "username",
                      "type" : "String",
                      "default" : "root"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "SQL 预处理语句列表。",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-prepare_statement",
                      "text" : "prepare_statement",
                      "type" : "Map"
                    },
                    {
                      "doc" : "用于检索授权数据的数据库查询。",
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-query",
                      "text" : "query",
                      "type" : "String"
                    }
                  ],
                  "text" : "mysql"
                },
                {
                  "doc" : "使用 PostgreSQL 数据库进行授权。",
                  "hash" : "T-authorization-S-authorization-sources-S-postgresql",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-type",
                      "text" : "type",
                      "type" : "String(\"postgresql\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n一个主机条目的格式为：Host[:Port]。<br/>\n如果没有指定 [:Port]，将使用 PostgreSQL 默认端口 5432。",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "SQL 预处理语句列表。",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-prepare_statement",
                      "text" : "prepare_statement",
                      "type" : "Map"
                    },
                    {
                      "doc" : "用于检索授权数据的数据库查询。",
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-query",
                      "text" : "query",
                      "type" : "String"
                    }
                  ],
                  "text" : "postgresql"
                },
                {
                  "doc" : "使用 MongoDB 授权（单实例）。",
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_single",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-type",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "包含授权数据的 `MongoDB` 集合。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-collection",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "doc" : "定义查询中过滤条件的条件表达式。\n过滤器支持以下占位符<br/>\n - <code>${username}</code>：在连接时将用客户端使用的 <code>用户名</code> 替换<br/>\n - <code>${clientid}</code>：在连接时将用客户端使用的 <code>客户端 ID</code> 替换",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-filter",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "doc" : "独立实例。当MongoDB服务器以独立模式运行时，必须设置为`single`。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-mongo_type",
                      "text" : "mongo_type",
                      "type" : "String(\"single\")",
                      "default" : "single"
                    },
                    {
                      "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机条目具有以下形式：主机[:端口]。<br/>如果未指定[:端口]，则使用MongoDB的默认端口27017。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "写入模式",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-w_mode",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "doc" : "使用 DNS SRV 记录。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-srv_record",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-use_legacy_protocol",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "与用户认证信息关联的数据库名称。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-auth_source",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "MongoDB 的拓扑结构。",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_single-topology-S-topology",
                          "fields" : [
                            {
                              "doc" : "在池中的所有工作线程都繁忙时，可以创建的附加工作线程的最大数量。这有助于通过允许更多并发连接到 MongoDB 服务器来管理工作负载的暂时性波动。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-max_overflow",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "超出配置的池大小（\"溢出\"）的工作线程在终止之前的时间段。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-overflow_ttl",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "检查是否存在多余工作线程（\"溢出\"）的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-overflow_check_period",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "用于在多个合适的 MongoDB 实例中进行选择的延迟窗口的大小。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-local_threshold_ms",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "在超时之前尝试连接的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-connect_timeout_ms",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "在套接字上尝试发送或接收超时之前的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-socket_timeout_ms",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "指定在抛出异常之前进行服务器选择的阻塞时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-server_selection_timeout_ms",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "工作线程等待连接可用的最长时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-wait_queue_timeout_ms",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "控制驱动程序何时检查 MongoDB 部署的状态。指定检查之间的时间间隔，从上次检查结束到下次检查开始计算。如果连接数增加（例如，如果增加了池大小），则可能需要增加此时间间隔，以避免在 MongoDB 日志文件中创建过多的日志条目。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-heartbeat_frequency_ms",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "doc" : "控制心跳之间等待的最短时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-min_heartbeat_frequency_ms",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "mongo_single"
                },
                {
                  "doc" : "使用 MongoDB 授权（副本集模式）",
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_rs",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-type",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "包含授权数据的 `MongoDB` 集合。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-collection",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "doc" : "定义查询中过滤条件的条件表达式。\n过滤器支持以下占位符<br/>\n - <code>${username}</code>：在连接时将用客户端使用的 <code>用户名</code> 替换<br/>\n - <code>${clientid}</code>：在连接时将用客户端使用的 <code>客户端 ID</code> 替换",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-filter",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "doc" : "副本集。当MongoDB服务器以`副本集`模式运行时，必须设置为`rs`。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-mongo_type",
                      "text" : "mongo_type",
                      "type" : "String(\"rs\")",
                      "default" : "rs"
                    },
                    {
                      "doc" : "集群连接的节点列表。节点应使用逗号分隔，例如：节点[,节点]。\n对于每个节点，应该是要连接的 IPv4 或 IPv6 地址或主机名。\n主机条目具有以下形式：主机[:端口]。\n如果未指定[:端口]，则使用 MongoDB 的默认端口27017。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "写入模式",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-w_mode",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "doc" : "读取模式。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-r_mode",
                      "text" : "r_mode",
                      "type" : "Enum(master,slave_ok)",
                      "default" : "master"
                    },
                    {
                      "doc" : "副本集的名称。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-replica_set_name",
                      "text" : "replica_set_name",
                      "type" : "String"
                    },
                    {
                      "doc" : "使用 DNS SRV 记录。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-srv_record",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-use_legacy_protocol",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "与用户认证信息关联的数据库名称。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-auth_source",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "MongoDB 的拓扑结构。",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology",
                          "fields" : [
                            {
                              "doc" : "在池中的所有工作线程都繁忙时，可以创建的附加工作线程的最大数量。这有助于通过允许更多并发连接到 MongoDB 服务器来管理工作负载的暂时性波动。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-max_overflow",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "超出配置的池大小（\"溢出\"）的工作线程在终止之前的时间段。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-overflow_ttl",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "检查是否存在多余工作线程（\"溢出\"）的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-overflow_check_period",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "用于在多个合适的 MongoDB 实例中进行选择的延迟窗口的大小。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-local_threshold_ms",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "在超时之前尝试连接的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-connect_timeout_ms",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "在套接字上尝试发送或接收超时之前的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-socket_timeout_ms",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "指定在抛出异常之前进行服务器选择的阻塞时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-server_selection_timeout_ms",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "工作线程等待连接可用的最长时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-wait_queue_timeout_ms",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "控制驱动程序何时检查 MongoDB 部署的状态。指定检查之间的时间间隔，从上次检查结束到下次检查开始计算。如果连接数增加（例如，如果增加了池大小），则可能需要增加此时间间隔，以避免在 MongoDB 日志文件中创建过多的日志条目。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-heartbeat_frequency_ms",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "doc" : "控制心跳之间等待的最短时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-min_heartbeat_frequency_ms",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "mongo_rs"
                },
                {
                  "doc" : "使用 MongoDB 授权（分片集群模式）。",
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-type",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "包含授权数据的 `MongoDB` 集合。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-collection",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "doc" : "定义查询中过滤条件的条件表达式。\n过滤器支持以下占位符<br/>\n - <code>${username}</code>：在连接时将用客户端使用的 <code>用户名</code> 替换<br/>\n - <code>${clientid}</code>：在连接时将用客户端使用的 <code>客户端 ID</code> 替换",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-filter",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "doc" : "分片集群。当 MongoDB 服务器以`分片`模式运行时，必须设置为`sharded`。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-mongo_type",
                      "text" : "mongo_type",
                      "type" : "String(\"sharded\")",
                      "default" : "sharded"
                    },
                    {
                      "doc" : "集群连接的节点列表。节点应使用逗号分隔，例如：节点[,节点]。\n对于每个节点，应该是要连接的 IPv4 或 IPv6 地址或主机名。\n主机条目具有以下形式：主机[:端口]。\n如果未指定[:端口]，则使用 MongoDB 的默认端口27017。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "写入模式",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-w_mode",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "doc" : "使用 DNS SRV 记录。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-srv_record",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-use_legacy_protocol",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "与用户认证信息关联的数据库名称。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-auth_source",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "MongoDB 的拓扑结构。",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology",
                          "fields" : [
                            {
                              "doc" : "在池中的所有工作线程都繁忙时，可以创建的附加工作线程的最大数量。这有助于通过允许更多并发连接到 MongoDB 服务器来管理工作负载的暂时性波动。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-max_overflow",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "超出配置的池大小（\"溢出\"）的工作线程在终止之前的时间段。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-overflow_ttl",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "检查是否存在多余工作线程（\"溢出\"）的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-overflow_check_period",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "用于在多个合适的 MongoDB 实例中进行选择的延迟窗口的大小。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-local_threshold_ms",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "在超时之前尝试连接的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-connect_timeout_ms",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "在套接字上尝试发送或接收超时之前的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-socket_timeout_ms",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "指定在抛出异常之前进行服务器选择的阻塞时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-server_selection_timeout_ms",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "工作线程等待连接可用的最长时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-wait_queue_timeout_ms",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "控制驱动程序何时检查 MongoDB 部署的状态。指定检查之间的时间间隔，从上次检查结束到下次检查开始计算。如果连接数增加（例如，如果增加了池大小），则可能需要增加此时间间隔，以避免在 MongoDB 日志文件中创建过多的日志条目。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-heartbeat_frequency_ms",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "doc" : "控制心跳之间等待的最短时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "mongo_sharded"
                },
                {
                  "doc" : "AuthZ with LDAP",
                  "hash" : "T-authorization-S-authorization-sources-S-ldap",
                  "fields" : [
                    {
                      "doc" : "数据后端类型",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-type",
                      "text" : "type",
                      "type" : "String(\"ldap\")"
                    },
                    {
                      "doc" : "设置为 <code>true</code> 或 <code>false</code> 来禁用此 ACL 提供者",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "表示使用哪个属性来表示允许`发布`的主题列表。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-publish_attribute",
                      "text" : "publish_attribute",
                      "type" : "String",
                      "default" : "mqttPublishTopic"
                    },
                    {
                      "doc" : "表示使用哪个属性来表示允许`订阅`的主题列表。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-subscribe_attribute",
                      "text" : "subscribe_attribute",
                      "type" : "String",
                      "default" : "mqttSubscriptionTopic"
                    },
                    {
                      "doc" : "表示使用哪个属性来表示允许`发布`和`订阅`的主题列表。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-all_attribute",
                      "text" : "all_attribute",
                      "type" : "String",
                      "default" : "mqttPubSubTopic"
                    },
                    {
                      "doc" : "LDAP 查询超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-query_timeout",
                      "text" : "query_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机名条目的格式为：`主机[:端口]`。<br/>\n如果 `[:端口]` 未指定， 将使用 LDAP 默认端口 389。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "与基本对象条目（或根）相关的名称。\n搜索用户的起点。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-base_dn",
                      "text" : "base_dn",
                      "type" : "String"
                    },
                    {
                      "doc" : "定义哪些条件必须被依次满足的过滤器\n用于搜索匹配一条给定的条目.<br>\n筛选器的语法遵循 RFC 4515，并且还支持占位符。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-filter",
                      "text" : "filter",
                      "type" : "String",
                      "default" : "\"(objectClass=mqttUser)\""
                    },
                    {
                      "doc" : "设置每个单独请求所使用的最大时间（以毫秒为单位）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "启用 SSL 连接。",
                          "hash" : "T-authorization-S-authorization-sources-S-ldap-ssl-S-ssl",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "ldap"
                }
              ],
              "hash" : "V-authorization-S-authorization-sources",
              "text" : "sources",
              "type" : "Array(OneOf(Struct(file),Struct(builtin_db),Struct(http_get),Struct(http_post),Struct(redis_single),Struct(redis_sentinel),Struct(redis_cluster),Struct(mysql),Struct(postgresql),Struct(mongo_single),Struct(mongo_rs),Struct(mongo_sharded),Struct(ldap)))",
              "default" : "[{enable = true, path = \"${EMQX_ETC_DIR}/acl.conf\", type = file}]"
            }
          ],
          "text" : "authorization"
        }
      ],
      "hash" : "V-authorization",
      "text" : "authorization",
      "type" : "Struct(authorization)"
    },
    {
      "refs" : [
        {
          "doc" : "节点名称、Cookie、配置文件、数据目录和 Erlang 虚拟机（BEAM）启动参数。",
          "hash" : "T-node-S-node",
          "fields" : [
            {
              "doc" : "节点名。格式为 \\<name>@\\<host>。其中 <host> 可以是 IP 地址，也可以是 FQDN。\n详见 http://erlang.org/doc/reference_manual/distributed.html。",
              "hash" : "V-node-S-node-name",
              "text" : "name",
              "type" : "String",
              "default" : "\"emqx@127.0.0.1\""
            },
            {
              "doc" : "分布式 Erlang 集群使用的 cookie 值。集群间保持一致",
              "hash" : "V-node-S-node-cookie",
              "text" : "cookie",
              "type" : "String"
            },
            {
              "doc" : "Erlang 系统同时存在的最大端口数。\n实际选择的最大值可能比设置的数字大得多。\n参考: https://www.erlang.org/doc/man/erl.html",
              "hash" : "V-node-S-node-max_ports",
              "text" : "max_ports",
              "type" : "Integer(1024..134217727)",
              "default" : "1048576"
            },
            {
              "doc" : "Erlang 分布式缓冲区的繁忙阈值，单位是 KB。",
              "hash" : "V-node-S-node-dist_buffer_size",
              "text" : "dist_buffer_size",
              "type" : "Integer(1..2097151)",
              "default" : "8192"
            },
            {
              "doc" : "节点数据存放目录，可能会自动创建的子目录如下：<br/>\n- `mnesia/<node_name>`。EMQX 的内置数据库目录。例如，`mnesia/emqx@127.0.0.1`。<br/>\n如果节点要被重新命名（例如，`emqx@10.0.1.1`）。旧目录应该首先被删除。<br/>\n- `configs`。在启动时生成的配置，以及集群/本地覆盖的配置。<br/>\n- `patches`: 热补丁文件将被放在这里。<br/>\n- `trace`: 日志跟踪文件。<br/>\n\n**注意**: 一个数据 dir 不能被两个或更多的 EMQX 节点同时使用。",
              "hash" : "V-node-S-node-data_dir",
              "text" : "data_dir",
              "type" : "String"
            },
            {
              "doc" : "系统调优参数，设置节点运行多久强制进行一次全局垃圾回收。禁用设置为 <code>disabled</code>。",
              "hash" : "V-node-S-node-global_gc_interval",
              "text" : "global_gc_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"15m\""
            },
            {
              "doc" : "选择节点的角色。<br/>\n<code>core</code> 节点提供数据的持久性，并负责写入。建议将核心节点放置在不同的机架或不同的可用区。<br/>\n<code>repliant</code> 节点是临时工作节点。 从集群中删除它们，不影响数据库冗余<br/>\n建议复制节点多于核心节点。<br/>\n注意：该参数仅在设置<code>backend</code>时生效到 <code>rlog</code>。",
              "hash" : "V-node-S-node-role",
              "aliases" : [
                "db_role"
              ],
              "text" : "role",
              "type" : "Enum(core,replicant)",
              "default" : "core"
            }
          ],
          "text" : "node"
        }
      ],
      "hash" : "V-node",
      "text" : "node",
      "type" : "Struct(node)"
    },
    {
      "refs" : [
        {
          "doc" : "EMQX 节点可以组成一个集群，以提高总容量。<br/> 这里指定了节点之间如何连接。",
          "hash" : "T-cluster-S-cluster",
          "fields" : [
            {
              "doc" : "EMQX 集群名称。每个集群都有一个唯一的名称。服务发现时会用于做路径的一部分。",
              "hash" : "V-cluster-S-cluster-name",
              "text" : "name",
              "type" : "String",
              "default" : "emqxcl"
            },
            {
              "doc" : "集群节点发现方式。可选值为:\n- manual: 使用 <code>emqx ctl cluster</code> 命令管理集群。<br/>\n- static: 配置静态节点。配置几个固定的节点，新节点通过连接固定节点中的某一个来加入集群。<br/>\n- dns: 使用 DNS A 记录的方式发现节点。<br/>\n- etcd: 使用 etcd 发现节点。<br/>\n- k8s: 使用 Kubernetes API 发现节点。",
              "hash" : "V-cluster-S-cluster-discovery_strategy",
              "text" : "discovery_strategy",
              "type" : "Enum(manual,static,dns,etcd,k8s)",
              "default" : "manual"
            },
            {
              "doc" : "指定多久之后从集群中删除离线节点。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-cluster-S-cluster-autoclean",
              "text" : "autoclean",
              "type" : "Duration",
              "default" : "\"24h\""
            },
            {
              "doc" : "集群脑裂自动恢复机制开关。",
              "hash" : "V-cluster-S-cluster-autoheal",
              "text" : "autoheal",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "分布式 Erlang 集群协议类型。可选值为:<br/>\n- inet_tcp: 使用 IPv4 <br/>\n- inet_tls: 使用 TLS，需要配合 <code>etc/ssl_dist.conf</code> 一起使用。<br/>\n- inet6_tcp: IPv6 TCP <br/>\n- inet6_tls: IPv6 TLS， 与 <code>etc/ssl_dist.conf</code> 配合使用。",
              "hash" : "V-cluster-S-cluster-proto_dist",
              "text" : "proto_dist",
              "type" : "Enum(inet_tcp,inet6_tcp,inet_tls,inet6_tls)",
              "default" : "inet_tcp"
            },
            {
              "refs" : [
                {
                  "doc" : "静态节点服务发现。新节点通过连接一个节点来加入集群。",
                  "hash" : "T-cluster-S-cluster-static-S-cluster_static",
                  "fields" : [
                    {
                      "doc" : "集群中的 EMQX 节点名称列表，\n指定固定的节点列表，多个节点间使用逗号 , 分隔。\n当 cluster.discovery_strategy 为 static 时，此配置项才有效。\n适合于节点数量较少且固定的集群。",
                      "hash" : "V-cluster-S-cluster-static-S-cluster_static-seeds",
                      "text" : "seeds",
                      "type" : "OneOf(String,Array(String))",
                      "default" : "[]"
                    }
                  ],
                  "text" : "cluster_static"
                }
              ],
              "hash" : "V-cluster-S-cluster-static",
              "text" : "static",
              "type" : "Struct(cluster_static)"
            },
            {
              "refs" : [
                {
                  "doc" : "DNS SRV 记录服务发现。",
                  "hash" : "T-cluster-S-cluster-dns-S-cluster_dns",
                  "fields" : [
                    {
                      "doc" : "指定 DNS A 记录的名字。emqx 会通过访问这个 DNS A 记录来获取 IP 地址列表。\n当<code>cluster.discovery_strategy</code> 为 <code>dns</code> 时有效。",
                      "hash" : "V-cluster-S-cluster-dns-S-cluster_dns-name",
                      "text" : "name",
                      "type" : "String",
                      "default" : "localhost"
                    },
                    {
                      "doc" : "DNS 记录类型。",
                      "hash" : "V-cluster-S-cluster-dns-S-cluster_dns-record_type",
                      "text" : "record_type",
                      "type" : "Enum(a,aaaa,srv)",
                      "default" : "a"
                    }
                  ],
                  "text" : "cluster_dns"
                }
              ],
              "hash" : "V-cluster-S-cluster-dns",
              "text" : "dns",
              "type" : "Struct(cluster_dns)"
            },
            {
              "refs" : [
                {
                  "doc" : "使用 'etcd' 服务的服务发现。",
                  "hash" : "T-cluster-S-cluster-etcd-S-cluster_etcd",
                  "fields" : [
                    {
                      "doc" : "指定 etcd 服务的地址。如有多个服务使用逗号 , 分隔。\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。",
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "指定 etcd 路径的前缀。每个节点在 etcd 中都会创建一个路径:\nv2/keys/<prefix>/<cluster.name>/<node.name> <br/>\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。",
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-prefix",
                      "text" : "prefix",
                      "type" : "String",
                      "default" : "emqxcl"
                    },
                    {
                      "doc" : "指定 etcd 中节点信息的过期时间。\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-node_ttl",
                      "text" : "node_ttl",
                      "type" : "Duration",
                      "default" : "\"1m\""
                    },
                    {
                      "doc" : "当使用 TLS 连接 etcd 时的配置选项。\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options",
                      "aliases" : [
                        "ssl"
                      ],
                      "text" : "ssl_options",
                      "type" : "Struct(ssl_client_opts)"
                    }
                  ],
                  "text" : "cluster_etcd"
                }
              ],
              "hash" : "V-cluster-S-cluster-etcd",
              "text" : "etcd",
              "type" : "Struct(cluster_etcd)"
            },
            {
              "refs" : [
                {
                  "doc" : "Kubernetes 服务发现。",
                  "hash" : "T-cluster-S-cluster-k8s-S-cluster_k8s",
                  "fields" : [
                    {
                      "doc" : "指定 Kubernetes API Server。如有多个 Server 使用逗号 , 分隔。\n当 cluster.discovery_strategy 为 k8s 时，此配置项才有效。",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-apiserver",
                      "text" : "apiserver",
                      "type" : "String",
                      "default" : "\"https://kubernetes.default.svc:443\""
                    },
                    {
                      "doc" : "指定 Kubernetes 中 EMQX 的服务名。\n当 cluster.discovery_strategy 为 k8s 时，此配置项才有效。",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-service_name",
                      "text" : "service_name",
                      "type" : "String",
                      "default" : "emqx"
                    },
                    {
                      "doc" : "当使用 k8s 方式集群时，address_type 用来从 Kubernetes 接口的应答里获取什么形式的 Host 列表。\n指定 <code>cluster.k8s.address_type</code> 为 <code>ip</code>，则将从 Kubernetes 接口中获取集群中其他节点\n的 IP 地址。",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-address_type",
                      "text" : "address_type",
                      "type" : "Enum(ip,dns,hostname)",
                      "default" : "ip"
                    },
                    {
                      "doc" : "当使用 k8s 方式并且 cluster.k8s.address_type 指定为 dns 类型时，\n可设置 emqx 节点名的命名空间。与 cluster.k8s.suffix 一起使用用以拼接得到节点名列表。",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-namespace",
                      "text" : "namespace",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "doc" : "当使用 k8s 方式并且 cluster.k8s.address_type 指定为 dns 类型时，可设置 emqx 节点名的后缀。\n与 cluster.k8s.namespace 一起使用用以拼接得到节点名列表。",
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-suffix",
                      "text" : "suffix",
                      "type" : "String",
                      "default" : "\"pod.local\""
                    }
                  ],
                  "text" : "cluster_k8s"
                }
              ],
              "hash" : "V-cluster-S-cluster-k8s",
              "text" : "k8s",
              "type" : "Struct(cluster_k8s)"
            }
          ],
          "text" : "cluster"
        }
      ],
      "hash" : "V-cluster",
      "text" : "cluster",
      "type" : "Struct(cluster)"
    },
    {
      "doc" : "EMQX 支持两种主要的日志处理进程：file 和 console，另有一个专门设计用于始终将日志定向到文件的 audit 处理进程。\n系统的默认日志处理行为可以通过环境变量 `EMQX_DEFAULT_LOG_HANDLER` 配置，它接受以下设置：\n\n- file：将日志输出仅定向到文件。\n- console：将日志输出仅定向到控制台。\n\n值得注意的是，当通过 systemd 的 emqx.service 文件启动 EMQX 时，EMQX_DEFAULT_LOG_HANDLER 被设置为 file。\n在 systemd 启动之外的场景中，console 作为默认的日志处理进程。",
      "refs" : [
        {
          "doc" : "EMQX 支持同时多个日志输出，一个控制台输出，和多个文件输出。\n默认情况下，EMQX 运行在容器中，或者在 'console' 或 'foreground' 模式下运行时，会输出到 控制台，否则输出到文件。",
          "hash" : "T-log-S-log",
          "fields" : [
            {
              "refs" : [
                {
                  "doc" : "日志处理进程将日志事件打印到 EMQX 控制台。",
                  "hash" : "T-log-S-log-console-S-console_handler",
                  "fields" : [
                    {
                      "doc" : "当前日志处理进程的日志级别。\n默认为 warning 级别。",
                      "hash" : "V-log-S-log-console-S-console_handler-level",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "doc" : "启用此日志处理进程。",
                      "hash" : "V-log-S-log-console-S-console_handler-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "选择日志格式类型。 <code>text</code> 用于纯文本，<code>json</code> 用于结构化日志记录。",
                      "hash" : "V-log-S-log-console-S-console_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "doc" : "选择时间戳格式：\n- `auto`：自动选择最佳格式。`epoch` 给 JSON 日志 `rfc3339` 给自由文本格式。\n- `epoch`： 微秒精度的 Unix epoch 整形值。\n- `rfc3339`： 遵从 RFC3339 规范的字符串格式。",
                      "hash" : "V-log-S-log-console-S-console_handler-timestamp_format",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "日志中的时间戳使用的时间偏移量。\n可选值为：\n  - <code>system</code>: 本地系统使用的时区偏移量\n  - <code>utc</code>: 0 时区的偏移量\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \"-02:00\" 或者 \"+00:00\"\n默认值为本地系统的时区偏移量：<code>system</code>。",
                      "hash" : "V-log-S-log-console-S-console_handler-time_offset",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    }
                  ],
                  "text" : "console_handler"
                }
              ],
              "hash" : "V-log-S-log-console",
              "aliases" : [
                "console_handler"
              ],
              "text" : "console",
              "type" : "Struct(console_handler)"
            },
            {
              "doc" : "输出到文件的日志处理进程列表",
              "refs" : [
                {
                  "doc" : "日志处理进程将日志事件打印到文件。",
                  "hash" : "T-log-S-log-file-S-log_file_handler",
                  "fields" : [
                    {
                      "doc" : "日志文件路径及名字。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-path",
                      "aliases" : [
                        "file",
                        "to"
                      ],
                      "text" : "path",
                      "type" : "String",
                      "default" : "\"${EMQX_LOG_DIR}/emqx.log\""
                    },
                    {
                      "doc" : "轮换的最大日志文件数。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_count",
                      "aliases" : [
                        "rotation"
                      ],
                      "text" : "rotation_count",
                      "type" : "Integer(1..128)",
                      "default" : "10"
                    },
                    {
                      "doc" : "此参数控制日志文件轮换。 `infinity` 意味着日志文件将无限增长，否则日志文件将在达到 `max_size`（以字节为单位）时进行轮换。\n与 rotation count 配合使用。如果 counter 为 10，则是 10 个文件轮换。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_size",
                      "aliases" : [
                        "max_size"
                      ],
                      "text" : "rotation_size",
                      "type" : "OneOf(String(\"infinity\"),Bytesize)",
                      "default" : "\"50MB\""
                    },
                    {
                      "doc" : "当前日志处理进程的日志级别。\n默认为 warning 级别。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-level",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "doc" : "启用此日志处理进程。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "选择日志格式类型。 <code>text</code> 用于纯文本，<code>json</code> 用于结构化日志记录。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "doc" : "选择时间戳格式：\n- `auto`：自动选择最佳格式。`epoch` 给 JSON 日志 `rfc3339` 给自由文本格式。\n- `epoch`： 微秒精度的 Unix epoch 整形值。\n- `rfc3339`： 遵从 RFC3339 规范的字符串格式。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-timestamp_format",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "日志中的时间戳使用的时间偏移量。\n可选值为：\n  - <code>system</code>: 本地系统使用的时区偏移量\n  - <code>utc</code>: 0 时区的偏移量\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \"-02:00\" 或者 \"+00:00\"\n默认值为本地系统的时区偏移量：<code>system</code>。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-time_offset",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    }
                  ],
                  "text" : "log_file_handler"
                },
                {
                  "doc" : "日志处理进程将日志事件打印到文件。",
                  "hash" : "T-log-S-log-file-S-log_file_handler",
                  "fields" : [
                    {
                      "doc" : "日志文件路径及名字。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-path",
                      "aliases" : [
                        "file",
                        "to"
                      ],
                      "text" : "path",
                      "type" : "String",
                      "default" : "\"${EMQX_LOG_DIR}/emqx.log\""
                    },
                    {
                      "doc" : "轮换的最大日志文件数。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_count",
                      "aliases" : [
                        "rotation"
                      ],
                      "text" : "rotation_count",
                      "type" : "Integer(1..128)",
                      "default" : "10"
                    },
                    {
                      "doc" : "此参数控制日志文件轮换。 `infinity` 意味着日志文件将无限增长，否则日志文件将在达到 `max_size`（以字节为单位）时进行轮换。\n与 rotation count 配合使用。如果 counter 为 10，则是 10 个文件轮换。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_size",
                      "aliases" : [
                        "max_size"
                      ],
                      "text" : "rotation_size",
                      "type" : "OneOf(String(\"infinity\"),Bytesize)",
                      "default" : "\"50MB\""
                    },
                    {
                      "doc" : "当前日志处理进程的日志级别。\n默认为 warning 级别。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-level",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "doc" : "启用此日志处理进程。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "选择日志格式类型。 <code>text</code> 用于纯文本，<code>json</code> 用于结构化日志记录。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "doc" : "选择时间戳格式：\n- `auto`：自动选择最佳格式。`epoch` 给 JSON 日志 `rfc3339` 给自由文本格式。\n- `epoch`： 微秒精度的 Unix epoch 整形值。\n- `rfc3339`： 遵从 RFC3339 规范的字符串格式。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-timestamp_format",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "日志中的时间戳使用的时间偏移量。\n可选值为：\n  - <code>system</code>: 本地系统使用的时区偏移量\n  - <code>utc</code>: 0 时区的偏移量\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \"-02:00\" 或者 \"+00:00\"\n默认值为本地系统的时区偏移量：<code>system</code>。",
                      "hash" : "V-log-S-log-file-S-log_file_handler-time_offset",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    }
                  ],
                  "text" : "log_file_handler"
                }
              ],
              "hash" : "V-log-S-log-file",
              "aliases" : [
                "file_handlers"
              ],
              "text" : "file",
              "type" : "OneOf(Struct(log_file_handler),Map($handler_name->Struct(log_file_handler)))",
              "default" : "{level = warning}"
            },
            {
              "refs" : [
                {
                  "doc" : "日志限流功能通过在配置的时间窗口内丢弃除第一个事件外的所有事件，来减少可能泛滥的日志事件数量。\n如果 `console` 或 `file` 日志级别设置为 debug，则自动禁用限流。",
                  "hash" : "T-log-S-log-throttling-S-log_throttling",
                  "fields" : [
                    {
                      "doc" : "此配置设置控制限流消息的日志记录行为，包括但不限于像 'authorization_permission_denied' 这样的消息。\n在每个定义的时间窗口内，只有一个限流消息的实例会被记录，以防止日志泛滥。\n在每个时间窗口结束时，将生成一个摘要日志，详细说明该期间内任何限流消息的发生。\n重要的是，此设置的最短有效时间窗口为 1 秒（1s）。\n如果指定的值低于 1s，则会自动调整为 1s。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-log-S-log-throttling-S-log_throttling-time_window",
                      "text" : "time_window",
                      "type" : "Duration(s)",
                      "default" : "\"1m\""
                    }
                  ],
                  "text" : "log_throttling"
                }
              ],
              "hash" : "V-log-S-log-throttling",
              "text" : "throttling",
              "type" : "Struct(log_throttling)"
            },
            {
              "doc" : "审计日志文件处理进程",
              "refs" : [
                {
                  "doc" : "将日志时间输出到文件的审计日志处理进程。",
                  "hash" : "T-log-S-log-audit-S-log_audit_handler",
                  "fields" : [
                    {
                      "doc" : "----",
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-path",
                      "text" : "path",
                      "type" : "String",
                      "default" : "\"${EMQX_LOG_DIR}/audit.log\""
                    },
                    {
                      "doc" : "轮换的最大日志文件数。",
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-rotation_count",
                      "text" : "rotation_count",
                      "type" : "Integer(1..128)",
                      "default" : "10"
                    },
                    {
                      "doc" : "此参数控制日志文件轮换。 `infinity` 意味着日志文件将无限增长，否则日志文件将在达到 `max_size`（以字节为单位）时进行轮换。\n与 rotation count 配合使用。如果 counter 为 10，则是 10 个文件轮换。",
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-rotation_size",
                      "text" : "rotation_size",
                      "type" : "OneOf(String(\"infinity\"),Bytesize)",
                      "default" : "\"50MB\""
                    },
                    {
                      "doc" : "将最新的 N 条日志条目存储在数据库中，以供 /audit HTTP API 进行日志数据的筛选和检索。\n清除多余的日志记录的间隔保持在 10 到 20 秒之间。",
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-max_filter_size",
                      "text" : "max_filter_size",
                      "type" : "Integer(10..30000)",
                      "default" : "5000"
                    },
                    {
                      "doc" : "忽略高频请求以避免淹没审计日志，例如发布/订阅踢出 http API 请求将被忽略。",
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-ignore_high_frequency_request",
                      "text" : "ignore_high_frequency_request",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "启用此日志处理进程。",
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "选择时间戳格式：\n- `auto`：自动选择最佳格式。`epoch` 给 JSON 日志 `rfc3339` 给自由文本格式。\n- `epoch`： 微秒精度的 Unix epoch 整形值。\n- `rfc3339`： 遵从 RFC3339 规范的字符串格式。",
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-timestamp_format",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "日志中的时间戳使用的时间偏移量。\n可选值为：\n  - <code>system</code>: 本地系统使用的时区偏移量\n  - <code>utc</code>: 0 时区的偏移量\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \"-02:00\" 或者 \"+00:00\"\n默认值为本地系统的时区偏移量：<code>system</code>。",
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-time_offset",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    }
                  ],
                  "text" : "log_audit_handler"
                }
              ],
              "hash" : "V-log-S-log-audit",
              "text" : "audit",
              "type" : "Struct(log_audit_handler)",
              "default" : "{enable = false, level = info}"
            }
          ],
          "text" : "log"
        }
      ],
      "hash" : "V-log",
      "text" : "log",
      "type" : "Struct(log)"
    },
    {
      "refs" : [
        {
          "doc" : "EMQX 使用 <code>gen_rpc</code> 库来实现跨节点通信。<br/>\n大多数情况下，默认的配置应该可以工作，但如果你需要做一些性能优化或者实验，可以尝试调整这些参数。",
          "hash" : "T-rpc-S-rpc",
          "fields" : [
            {
              "doc" : "在 <code>sync</code> 模式下，发送端等待接收端的 ack 信号。",
              "hash" : "V-rpc-S-rpc-mode",
              "text" : "mode",
              "type" : "Enum(sync,async)",
              "default" : "async"
            },
            {
              "doc" : "集群间通信使用的传输协议。",
              "hash" : "V-rpc-S-rpc-protocol",
              "aliases" : [
                "driver"
              ],
              "text" : "protocol",
              "type" : "Enum(tcp,ssl)",
              "default" : "tcp"
            },
            {
              "doc" : "异步模式下，发送的批量消息的最大数量。",
              "hash" : "V-rpc-S-rpc-async_batch_size",
              "text" : "async_batch_size",
              "type" : "Integer",
              "default" : "256"
            },
            {
              "doc" : "<code>manual</code>: 通过 <code>tcp_server_port</code> 来发现端口。\n<br/><code>stateless</code>: 使用无状态的方式来发现端口，使用如下算法。如果节点名称是 <code>\nemqxN@127.0.0.1</code>, N 是一个数字，那么监听端口就是 5370 + N。",
              "hash" : "V-rpc-S-rpc-port_discovery",
              "text" : "port_discovery",
              "type" : "Enum(manual,stateless)",
              "default" : "stateless"
            },
            {
              "doc" : "RPC 本地服务使用的 TCP 端口。<br/>\n只有当 rpc.port_discovery 设置为 manual 时，此配置才会生效。",
              "hash" : "V-rpc-S-rpc-tcp_server_port",
              "text" : "tcp_server_port",
              "type" : "Integer",
              "default" : "5369"
            },
            {
              "doc" : "RPC 本地服务使用的监听 SSL 端口。<br/>\n只有当 rpc.port_discovery 设置为 manual 且 <code> dirver </code> 设置为 <code>ssl</code>，\n此配置才会生效。",
              "hash" : "V-rpc-S-rpc-ssl_server_port",
              "text" : "ssl_server_port",
              "type" : "Integer",
              "default" : "5369"
            },
            {
              "doc" : "设置本节点与远程节点之间的 RPC 通信通道的最大数量。",
              "hash" : "V-rpc-S-rpc-tcp_client_num",
              "text" : "tcp_client_num",
              "type" : "Integer(1..256)",
              "default" : "10"
            },
            {
              "doc" : "建立 RPC 连接的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-connect_timeout",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "TLS 证书文件的路径，用于验证集群节点的身份。\n只有当 <code>rpc.driver</code> 设置为 <code>ssl</code> 时，此配置才会生效。",
              "hash" : "V-rpc-S-rpc-certfile",
              "text" : "certfile",
              "type" : "String"
            },
            {
              "doc" : "<code>rpc.certfile</code> 的私钥文件的路径。<br/>\n注意：此文件内容是私钥，所以需要设置权限为 600。",
              "hash" : "V-rpc-S-rpc-keyfile",
              "text" : "keyfile",
              "type" : "String"
            },
            {
              "doc" : "验证 <code>rpc.certfile</code> 的 CA 证书文件的路径。<br/>\n注意：集群中所有节点的证书必须使用同一个 CA 签发。",
              "hash" : "V-rpc-S-rpc-cacertfile",
              "text" : "cacertfile",
              "type" : "String"
            },
            {
              "doc" : "发送 RPC 请求的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-send_timeout",
              "text" : "send_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "远程节点认证的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-authentication_timeout",
              "text" : "authentication_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "doc" : "同步 RPC 的回复超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-call_receive_timeout",
              "text" : "call_receive_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "doc" : "broker 之间的连接在最后一条消息发送后保持打开的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-socket_keepalive_idle",
              "text" : "socket_keepalive_idle",
              "type" : "Duration(s)",
              "default" : "\"15m\""
            },
            {
              "doc" : "keepalive 消息的间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-socket_keepalive_interval",
              "text" : "socket_keepalive_interval",
              "type" : "Duration(s)",
              "default" : "\"75s\""
            },
            {
              "doc" : "keepalive 探测消息发送失败的次数，直到 RPC 连接被认为已经断开。",
              "hash" : "V-rpc-S-rpc-socket_keepalive_count",
              "text" : "socket_keepalive_count",
              "type" : "Integer",
              "default" : "9"
            },
            {
              "doc" : "TCP 调节参数。TCP 发送缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-socket_sndbuf",
              "text" : "socket_sndbuf",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "TCP 调节参数。TCP 接收缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-socket_recbuf",
              "text" : "socket_recbuf",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "TCP 调节参数。用户模式套接字缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
              "hash" : "V-rpc-S-rpc-socket_buffer",
              "text" : "socket_buffer",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "兼容旧的无鉴权模式",
              "hash" : "V-rpc-S-rpc-insecure_fallback",
              "text" : "insecure_fallback",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
              "hash" : "V-rpc-S-rpc-ciphers",
              "text" : "ciphers",
              "type" : "Array(String)",
              "default" : "[]"
            },
            {
              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
              "hash" : "V-rpc-S-rpc-tls_versions",
              "text" : "tls_versions",
              "type" : "Array(String)",
              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
            },
            {
              "doc" : "指示 RPC 服务器监听的 IP 地址。例如，使用 <code>\"0.0.0.0\"</code> 表示 IPv4 或 <code>\"::\"</code> 表示 IPv6。",
              "hash" : "V-rpc-S-rpc-listen_address",
              "text" : "listen_address",
              "type" : "String",
              "default" : "\"0.0.0.0\""
            },
            {
              "doc" : "此设置仅在 <code>rpc.listen_address</code> 被分配了一个 IPv6 地址时有效。\n如果设置为 <code>true</code>，RPC 客户端将仅使用 IPv6 进行连接。\n否则，即使服务器位于 IPv6 上，客户端也可能选择 IPv4。",
              "hash" : "V-rpc-S-rpc-ipv6_only",
              "text" : "ipv6_only",
              "type" : "Boolean",
              "default" : "false"
            }
          ],
          "text" : "rpc"
        }
      ],
      "hash" : "V-rpc",
      "text" : "rpc",
      "type" : "Struct(rpc)"
    },
    {
      "doc" : "系统主题配置。",
      "refs" : [
        {
          "doc" : "The EMQX Broker periodically publishes its own status, message statistics,\nclient online and offline events to the system topic starting with `$SYS/`.\n\nThe following options control the behavior of `$SYS` topics.",
          "hash" : "T-sys_topics-S-sys_topics",
          "fields" : [
            {
              "doc" : "发送 `$SYS` 主题的间隔时间。",
              "hash" : "V-sys_topics-S-sys_topics-sys_msg_interval",
              "text" : "sys_msg_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"1m\""
            },
            {
              "doc" : "发送心跳系统消息的间隔时间，它包括：\n  - `$SYS/brokers/<node>/uptime`\n  - `$SYS/brokers/<node>/datetime`",
              "hash" : "V-sys_topics-S-sys_topics-sys_heartbeat_interval",
              "text" : "sys_heartbeat_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"30s\""
            },
            {
              "doc" : "客户端事件消息。",
              "refs" : [
                {
                  "doc" : "Enable or disable client lifecycle event publishing.\n\nThe following options affect MQTT clients as well as\ngateway clients. The types of the clients\nare distinguished by the topic prefix:\n\n- For the MQTT clients, the format is:\n`$SYS/broker/<node>/clients/<clientid>/<event>`\n- For the Gateway clients, it is\n`$SYS/broker/<node>/gateway/<gateway-name>/clients/<clientid>/<event>`\n",
                  "hash" : "T-sys_topics-S-sys_topics-sys_event_messages-S-event_names",
                  "fields" : [
                    {
                      "doc" : "是否开启客户端已连接事件消息。",
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_connected",
                      "text" : "client_connected",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端已断开连接事件消息。",
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_disconnected",
                      "text" : "client_disconnected",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端已成功订阅主题事件消息。",
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_subscribed",
                      "text" : "client_subscribed",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "是否开启客户端已成功取消订阅主题事件消息。",
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_unsubscribed",
                      "text" : "client_unsubscribed",
                      "type" : "Boolean",
                      "default" : "false"
                    }
                  ],
                  "text" : "event_names"
                }
              ],
              "hash" : "V-sys_topics-S-sys_topics-sys_event_messages",
              "text" : "sys_event_messages",
              "type" : "Struct(event_names)"
            }
          ],
          "text" : "sys_topics"
        }
      ],
      "hash" : "V-sys_topics",
      "text" : "sys_topics",
      "type" : "Struct(sys_topics)"
    },
    {
      "refs" : [
        {
          "doc" : "When the process message queue length, or the memory bytes\nreaches a certain value, the process is forced to close.\n\nNote: \"message queue\" here refers to the \"message mailbox\"\nof the Erlang process, not the `mqueue` of QoS 1 and QoS 2.",
          "hash" : "T-force_shutdown-S-force_shutdown",
          "fields" : [
            {
              "doc" : "启用 `force_shutdown` 功能。",
              "hash" : "V-force_shutdown-S-force_shutdown-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "每个在线客户端在 EMQX 服务器中都是独立的一个进程。该配置可以设为单个进程的邮箱消息队列设置最大长度，当超过该上限时，客户端会被强制下线。",
              "hash" : "V-force_shutdown-S-force_shutdown-max_mailbox_size",
              "aliases" : [
                "max_message_queue_len"
              ],
              "text" : "max_mailbox_size",
              "type" : "Integer(0..inf)",
              "default" : "1000"
            },
            {
              "doc" : "Heap 的总大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
              "hash" : "V-force_shutdown-S-force_shutdown-max_heap_size",
              "text" : "max_heap_size",
              "type" : "Bytesize",
              "default" : "\"32MB\""
            }
          ],
          "text" : "force_shutdown"
        }
      ],
      "hash" : "V-force_shutdown",
      "text" : "force_shutdown",
      "type" : "Struct(force_shutdown)"
    },
    {
      "doc" : "与 EMQX 持久存储相关的配置。\n\nEMQX 使用持久存储来卸载各种数据到磁盘，如 MQTT 消息。",
      "refs" : [
        {
          "doc" : "与 EMQX 持久存储相关的配置。\n\nEMQX 使用持久存储来卸载各种数据到磁盘，如 MQTT 消息。",
          "hash" : "T-durable_storage-S-durable_storage",
          "fields" : [
            {
              "doc" : "与 MQTT 消息的持久存储相关的配置。",
              "refs" : [
                {
                  "doc" : "使用嵌入式 RocksDB 键值存储的内置会话存储后端。",
                  "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin",
                  "fields" : [
                    {
                      "doc" : "内置后端",
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin-backend",
                      "text" : "backend",
                      "type" : "String(\"builtin\")",
                      "default" : "builtin"
                    },
                    {
                      "doc" : "数据库所在的文件系统目录。\n\n默认情况下，它等于 node.data_dir。",
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin-data_dir",
                      "text" : "data_dir",
                      "type" : "String"
                    },
                    {
                      "doc" : "内置的持久存储将数据分成多个分片。\n此配置参数定义分片的数量。\n请注意，它仅在持久存储数据库初始化期间生效。\n在数据库已经创建后更改此配置参数将不会产生任何效果。",
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin-n_shards",
                      "text" : "n_shards",
                      "type" : "Integer(1..+inf)",
                      "default" : "12"
                    },
                    {
                      "doc" : "存储布局是一种在磁盘上排列来自各种主题和客户端消息的方法。\n\n根据工作负载类型和主题结构的不同，可以采用不同的数据存储策略，以最大化地提高从持久存储中读取消息的效率。",
                      "refs" : [
                        {
                          "doc" : "通配符优化 布局旨在最大化覆盖大量主题的通配符订阅的吞吐量。\n\n例如，它可以处理大量客户端将数据发布到包含其客户端 ID 的主题的场景，如：sensor/%device-version%/%clientid%/temperature、sensor/%device-version%/%clientid%/pressure 等。\n此布局将自动将此类主题分组到单个流中，因此订阅包含通配符的主题过滤器（如 sensor/+/+/temperature）的客户端将能够以单个批次消费所有设备发布的消息。\n\n此布局对非通配符订阅也是有效的。",
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin-layout-S-layout_builtin_wildcard_optimized",
                          "fields" : [
                            {
                              "doc" : "通配符优化布局类型。",
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin-layout-S-layout_builtin_wildcard_optimized-type",
                              "text" : "type",
                              "type" : "String(\"wildcard_optimized\")",
                              "default" : "wildcard_optimized"
                            }
                          ],
                          "text" : "layout_builtin_wildcard_optimized"
                        },
                        {
                          "doc" : "A simplistic layout type that stores all messages from all topics in chronological order in a single stream.\n\nNot recommended for production use.",
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin-layout-S-layout_builtin_reference",
                          "fields" : [
                            {
                              "doc" : "Reference layout type.",
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin-layout-S-layout_builtin_reference-type",
                              "text" : "type",
                              "type" : "String(\"reference\")"
                            }
                          ],
                          "text" : "layout_builtin_reference"
                        }
                      ],
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin-layout",
                      "text" : "layout",
                      "type" : "OneOf(Struct(layout_builtin_wildcard_optimized),Struct(layout_builtin_reference))",
                      "default" : "{type = wildcard_optimized}"
                    }
                  ],
                  "text" : "builtin"
                }
              ],
              "hash" : "V-durable_storage-S-durable_storage-messages",
              "text" : "messages",
              "type" : "OneOf(Struct(builtin))",
              "default" : "{backend = builtin}"
            }
          ],
          "text" : "durable_storage"
        }
      ],
      "hash" : "V-durable_storage",
      "text" : "durable_storage",
      "type" : "Struct(durable_storage)"
    },
    {
      "refs" : [
        {
          "doc" : "Force garbage collection in MQTT connection process after\n they process certain number of messages or bytes of data.",
          "hash" : "T-force_gc-S-force_gc",
          "fields" : [
            {
              "doc" : "启用强制垃圾回收。",
              "hash" : "V-force_gc-S-force_gc-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "在进程收到多少消息之后，对此进程执行垃圾回收。",
              "hash" : "V-force_gc-S-force_gc-count",
              "text" : "count",
              "type" : "Integer(0..inf)",
              "default" : "16000"
            },
            {
              "doc" : "在进程处理过多少个字节之后，对此进程执行垃圾回收。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
              "hash" : "V-force_gc-S-force_gc-bytes",
              "text" : "bytes",
              "type" : "Bytesize",
              "default" : "\"16MB\""
            }
          ],
          "text" : "force_gc"
        }
      ],
      "hash" : "V-force_gc",
      "text" : "force_gc",
      "type" : "Struct(force_gc)"
    },
    {
      "refs" : [
        {
          "doc" : "Features related to system monitoring and introspection.",
          "hash" : "T-sysmon-S-sysmon",
          "fields" : [
            {
              "refs" : [
                {
                  "doc" : "This part of the configuration is responsible for collecting\n BEAM VM events, such as long garbage collection, traffic congestion in the inter-broker\n communication, etc.",
                  "hash" : "T-sysmon-S-sysmon-vm-S-sysmon_vm",
                  "fields" : [
                    {
                      "doc" : "定期进程限制检查的时间间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_check_interval",
                      "text" : "process_check_interval",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "在发出相应警报之前，本地节点上可以同时存在多少进程的阈值（以进程百分比表示）。",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_high_watermark",
                      "text" : "process_high_watermark",
                      "type" : "String",
                      "default" : "\"80%\""
                    },
                    {
                      "doc" : "在清除相应警报之前，本地节点上可以同时存在多少进程的阈值（以进程百分比表示）。",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_low_watermark",
                      "text" : "process_low_watermark",
                      "type" : "String",
                      "default" : "\"60%\""
                    },
                    {
                      "doc" : "当系统检测到某个 Erlang 进程垃圾回收占用过长时间，会触发一条带有 <code>long_gc</code> 关键字的日志。\n同时还会发布一条主题为 <code>$SYS/sysmon/long_gc</code> 的 MQTT 系统消息。",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-long_gc",
                      "text" : "long_gc",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "启用后，如果 Erlang VM 调度器出现某个任务占用时间过长时，会触发一条带有 'long_schedule' 关键字的日志。\n同时还会发布一条主题为 <code>$SYS/sysmon/long_schedule</code> 的 MQTT 系统消息。",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-long_schedule",
                      "text" : "long_schedule",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "\"240ms\""
                    },
                    {
                      "doc" : "启用后，当一个 Erlang 进程申请了大量内存，系统会触发一条带有 <code>large_heap</code> 关键字的\nwarning 级别日志。同时还会发布一条主题为 <code>$SYS/sysmon/busy_dist_port</code> 的 MQTT 系统消息。",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-large_heap",
                      "text" : "large_heap",
                      "type" : "OneOf(String(\"disabled\"),Bytesize)",
                      "default" : "\"32MB\""
                    },
                    {
                      "doc" : "启用后，当用于集群接点之间 RPC 的连接过忙时，会触发一条带有 <code>busy_dist_port</code> 关键字的 warning 级别日志。\n同时还会发布一条主题为 <code>$SYS/sysmon/busy_dist_port</code> 的 MQTT 系统消息。",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-busy_dist_port",
                      "text" : "busy_dist_port",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "当一个系统接口（例如 TCP socket）过忙，会触发一条带有 <code>busy_port</code> 关键字的 warning 级别的日志。\n同时还会发布一条主题为 <code>$SYS/sysmon/busy_port</code> 的 MQTT 系统消息。",
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-busy_port",
                      "text" : "busy_port",
                      "type" : "Boolean",
                      "default" : "true"
                    }
                  ],
                  "text" : "sysmon_vm"
                }
              ],
              "hash" : "V-sysmon-S-sysmon-vm",
              "text" : "vm",
              "type" : "Struct(sysmon_vm)"
            },
            {
              "refs" : [
                {
                  "doc" : "This part of the configuration is responsible for monitoring\n the host OS health, such as free memory, disk space, CPU load, etc.",
                  "hash" : "T-sysmon-S-sysmon-os-S-sysmon_os",
                  "fields" : [
                    {
                      "doc" : "定期 CPU 检查的时间间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_check_interval",
                      "text" : "cpu_check_interval",
                      "type" : "Duration",
                      "default" : "\"60s\""
                    },
                    {
                      "doc" : "在发出相应警报之前可以使用多少系统 CPU 的阈值，以系统 CPU 负载的百分比表示。",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_high_watermark",
                      "text" : "cpu_high_watermark",
                      "type" : "String",
                      "default" : "\"80%\""
                    },
                    {
                      "doc" : "在解除相应警报之前可以使用多少系统 CPU 的阈值，以系统 CPU 负载的百分比表示。",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_low_watermark",
                      "text" : "cpu_low_watermark",
                      "type" : "String",
                      "default" : "\"60%\""
                    },
                    {
                      "doc" : "定期内存检查的时间间隔。",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-mem_check_interval",
                      "text" : "mem_check_interval",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "\"60s\""
                    },
                    {
                      "doc" : "在发出相应报警之前可以分配多少系统内存的阈值，以系统内存的百分比表示。",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-sysmem_high_watermark",
                      "text" : "sysmem_high_watermark",
                      "type" : "String",
                      "default" : "\"70%\""
                    },
                    {
                      "doc" : "在发出相应警报之前，一个 Erlang 进程可以分配多少系统内存的阈值，以系统内存的百分比表示。",
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-procmem_high_watermark",
                      "text" : "procmem_high_watermark",
                      "type" : "String",
                      "default" : "\"5%\""
                    }
                  ],
                  "text" : "sysmon_os"
                }
              ],
              "hash" : "V-sysmon-S-sysmon-os",
              "text" : "os",
              "type" : "Struct(sysmon_os)"
            }
          ],
          "text" : "sysmon"
        }
      ],
      "hash" : "V-sysmon",
      "text" : "sysmon",
      "type" : "Struct(sysmon)"
    },
    {
      "refs" : [
        {
          "doc" : "Settings for the alarms.",
          "hash" : "T-alarm-S-alarm",
          "fields" : [
            {
              "doc" : "警报激活时触发的动作。<br/>目前，支持以下操作：<code>log</code> 和 <code>publish</code>.\n<code>log</code> 将告警写入日志 (控制台或者文件).\n<code>publish</code> 将告警作为 MQTT 消息发布到系统主题:\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/activate</code> and\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/deactivate</code>",
              "hash" : "V-alarm-S-alarm-actions",
              "text" : "actions",
              "type" : "Array(Enum(log,publish))",
              "default" : "[log, publish]"
            },
            {
              "doc" : "要保留为历史记录的已停用报警的最大总数。当超过此限制时，将删除最旧的停用报警，以限制总数。",
              "hash" : "V-alarm-S-alarm-size_limit",
              "text" : "size_limit",
              "type" : "Integer(1..3000)",
              "default" : "1000"
            },
            {
              "doc" : "停用报警的保留时间。报警在停用时不会立即删除，而是在保留时间之后删除。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-alarm-S-alarm-validity_period",
              "text" : "validity_period",
              "type" : "Duration",
              "default" : "\"24h\""
            }
          ],
          "text" : "alarm"
        }
      ],
      "hash" : "V-alarm",
      "text" : "alarm",
      "type" : "Struct(alarm)"
    },
    {
      "refs" : [
        {
          "doc" : "This config controls the allowed maximum number of `CONNECT` packets received\nfrom the same clientid in a time frame defined by `window_time`.\nAfter the limit is reached, successive `CONNECT` requests are forbidden\n(banned) until the end of the time period defined by `ban_time`.",
          "hash" : "T-flapping_detect-S-flapping_detect",
          "fields" : [
            {
              "doc" : "启用抖动检测功能。",
              "hash" : "V-flapping_detect-S-flapping_detect-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "抖动检测的时间窗口。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-flapping_detect-S-flapping_detect-window_time",
              "text" : "window_time",
              "type" : "Duration",
              "default" : "\"1m\""
            },
            {
              "doc" : "MQTT 客户端在“窗口”时间内允许的最大断开次数",
              "hash" : "V-flapping_detect-S-flapping_detect-max_count",
              "text" : "max_count",
              "type" : "Integer(0..+inf)",
              "default" : "15"
            },
            {
              "doc" : "抖动的客户端将会被禁止登录多长时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-flapping_detect-S-flapping_detect-ban_time",
              "text" : "ban_time",
              "type" : "Duration",
              "default" : "\"5m\""
            }
          ],
          "text" : "flapping_detect"
        }
      ],
      "hash" : "V-flapping_detect",
      "text" : "flapping_detect",
      "type" : "Struct(flapping_detect)"
    },
    {
      "refs" : [
        {
          "doc" : "用于连接到外部系统的连接器。",
          "hash" : "T-connectors-S-connectors",
          "fields" : [
            {
              "doc" : "S3 Connector Config",
              "refs" : [
                {
                  "doc" : "配置连接到兼容 S3 API 存储服务的连接器。",
                  "hash" : "T-connectors-S-connectors-s3-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "S3 桶的访问密钥 ID。",
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-access_key_id",
                      "text" : "access_key_id",
                      "type" : "String"
                    },
                    {
                      "doc" : "S3 桶的密钥访问密钥。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-secret_access_key",
                      "text" : "secret_access_key",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "S3 端点的主机。",
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-host",
                      "text" : "host",
                      "type" : "String"
                    },
                    {
                      "doc" : "S3 端点的端口。",
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-port",
                      "text" : "port",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "doc" : "S3 客户端使用的 HTTP 传输层选项。",
                      "refs" : [
                        {
                          "doc" : "Options for the HTTP transport layer used by the S3 client",
                          "hash" : "T-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options",
                          "fields" : [
                            {
                              "doc" : "是否探测 IPv6 支持。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ipv6_probe",
                              "text" : "ipv6_probe",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-connect_timeout",
                              "text" : "connect_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "连接池类型。可以是random、hash之一。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-pool_type",
                              "text" : "pool_type",
                              "type" : "Enum(random,hash)",
                              "default" : "random"
                            },
                            {
                              "doc" : "连接池大小。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-pool_size",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-enable_pipelining",
                              "text" : "enable_pipelining",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "启用 SSL 连接。",
                              "refs" : [
                                {
                                  "doc" : "Socket options for SSL clients.",
                                  "hash" : "T-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts",
                                  "fields" : [
                                    {
                                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacertfile",
                                      "text" : "cacertfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "Deprecated since 5.1.4.",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacerts",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-certfile",
                                      "text" : "certfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "PEM 格式的私钥文件。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-keyfile",
                                      "text" : "keyfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "启用或禁用对等验证。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "doc" : "启用 TLS 会话重用。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-reuse_sessions",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-depth",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-password",
                                      "text" : "password",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-versions",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-ciphers",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-secure_renegotiate",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-log_level",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-hibernate_after",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "doc" : "启用 TLS。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-server_name_indication",
                                      "text" : "server_name_indication",
                                      "type" : "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "text" : "ssl_client_opts"
                                }
                              ],
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl",
                              "text" : "ssl",
                              "type" : "Struct(ssl_client_opts)",
                              "default" : "{enable = false}"
                            },
                            {
                              "doc" : "HTTP 请求头列表。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-headers",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "doc" : "如果发送请求时出错，最大重试次数。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)"
                            },
                            {
                              "doc" : "HTTP 请求超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-request_timeout",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "transport_options"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options",
                      "text" : "transport_options",
                      "type" : "Struct(transport_options)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "s3_connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(s3_connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-s3",
              "text" : "s3",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Syskeeper Proxy Connector Config",
              "refs" : [
                {
                  "doc" : "Syskeeper 代理连接器的配置",
                  "hash" : "T-connectors-S-connectors-syskeeper_proxy-S-config",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "此 Syskeeper 代理服务器的监听地址",
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-listen",
                      "text" : "listen",
                      "type" : "String"
                    },
                    {
                      "doc" : "接受者的数量",
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(0..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "在创建连接时等待握手的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-handshake_timeout",
                      "text" : "handshake_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config"
                }
              ],
              "hash" : "V-connectors-S-connectors-syskeeper_proxy",
              "text" : "syskeeper_proxy",
              "type" : "Map($name->Struct(config))"
            },
            {
              "doc" : "ClickHouse Connector Config",
              "refs" : [
                {
                  "doc" : "Clickhouse 桥接配置",
                  "hash" : "T-connectors-S-connectors-clickhouse-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "你想连接到的 Clickhouse 服务器的 HTTP URL（例如 http://myhostname:8123）。",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-clickhouse",
              "text" : "clickhouse",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "IoTDB Connector Config",
              "refs" : [
                {
                  "doc" : "Apache IoTDB 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-iotdb-S-config",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "连接池类型。可以是random、hash之一。",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-pool_type",
                      "text" : "pool_type",
                      "type" : "Enum(random,hash)",
                      "default" : "random"
                    },
                    {
                      "doc" : "连接池大小。",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-iotdb-S-config-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "IoTDB REST 服务的 URL。",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-base_url",
                      "text" : "base_url",
                      "type" : "String"
                    },
                    {
                      "doc" : "IoTDB 版本。",
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-iotdb_version",
                      "text" : "iotdb_version",
                      "type" : "Enum(v1.3.x,v1.1.x,v1.0.x,v0.13.x)",
                      "default" : "\"v1.3.x\""
                    },
                    {
                      "doc" : "认证配置",
                      "refs" : [
                        {
                          "doc" : "Basic Authentication",
                          "hash" : "T-connectors-S-connectors-iotdb-S-config-authentication-S-auth_basic",
                          "fields" : [
                            {
                              "doc" : "IoTDB REST 接口配置的用户名",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-authentication-S-auth_basic-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "IoTDB REST 接口配置的密码<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-iotdb-S-config-authentication-S-auth_basic-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_basic"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-iotdb-S-config-authentication",
                      "text" : "authentication",
                      "type" : "OneOf(Struct(auth_basic))",
                      "default" : "auth_basic"
                    }
                  ],
                  "text" : "config"
                }
              ],
              "hash" : "V-connectors-S-connectors-iotdb",
              "text" : "iotdb",
              "type" : "Map($name->Struct(config))"
            },
            {
              "doc" : "GreptimeDB Connector Config",
              "refs" : [
                {
                  "doc" : "GreptimeDB 动作的配置。",
                  "hash" : "T-connectors-S-connectors-greptimedb-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机条目的格式如下：主机名[:端口]。<br/>\n如果未指定 [:端口]，则使用 GreptimeDB 的默认端口 8086。",
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-server",
                      "text" : "server",
                      "type" : "String",
                      "default" : "\"127.0.0.1:4001\""
                    },
                    {
                      "doc" : "GreptimeDB 数据库",
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-dbname",
                      "text" : "dbname",
                      "type" : "String"
                    },
                    {
                      "doc" : "GreptimeDB 用户名。",
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "GreptimeDB 密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-greptimedb",
              "text" : "greptimedb",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Microsoft SQL Server Connector Config",
              "refs" : [
                {
                  "doc" : "Microsoft SOL Server 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-sqlserver-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "SQL Server Driver 名称",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-driver",
                      "text" : "driver",
                      "type" : "String",
                      "default" : "\"ms-sql\""
                    },
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 SQL Server 默认端口 1433。",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-username",
                      "text" : "username",
                      "type" : "String",
                      "default" : "sa"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-sqlserver",
              "text" : "sqlserver",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "InfluxDB Connector Config",
              "refs" : [
                {
                  "doc" : "InfluxDB 桥接配置。",
                  "hash" : "T-connectors-S-connectors-influxdb-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-server",
                      "text" : "server",
                      "type" : "String",
                      "default" : "\"127.0.0.1:8086\""
                    },
                    {
                      "doc" : "给定版本的 InfluxDB 连接器的参数集，`influxdb_type` 可以是 `influxdb_api_v1` 或 `influxdb_api_v2`。",
                      "refs" : [
                        {
                          "doc" : "InfluxDB HTTP API 协议。支持 Influxdb v1.8 以及之前的版本。",
                          "hash" : "T-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1",
                          "fields" : [
                            {
                              "doc" : "InfluxDB HTTP API 协议。支持 Influxdb v1.8 以及之前的版本。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1-influxdb_type",
                              "text" : "influxdb_type",
                              "type" : "String(\"influxdb_api_v1\")",
                              "default" : "influxdb_api_v1"
                            },
                            {
                              "doc" : "InfluxDB 数据库。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1-database",
                              "text" : "database",
                              "type" : "String"
                            },
                            {
                              "doc" : "InfluxDB 用户名。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "InfluxDB 密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "connector_influxdb_api_v1"
                        },
                        {
                          "doc" : "InfluxDB HTTP API V2 协议。支持 Influxdb v2.0 以及之后的版本。",
                          "hash" : "T-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2",
                          "fields" : [
                            {
                              "doc" : "InfluxDB HTTP API V2 协议。支持 Influxdb v2.0 以及之后的版本。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2-influxdb_type",
                              "text" : "influxdb_type",
                              "type" : "String(\"influxdb_api_v2\")",
                              "default" : "influxdb_api_v2"
                            },
                            {
                              "doc" : "InfluxDB bucket 名称。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2-bucket",
                              "text" : "bucket",
                              "type" : "String"
                            },
                            {
                              "doc" : "InfluxDB 组织名称。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2-org",
                              "text" : "org",
                              "type" : "String"
                            },
                            {
                              "doc" : "InfluxDB 令牌。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2-token",
                              "text" : "token",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "connector_influxdb_api_v2"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(connector_influxdb_api_v1),Struct(connector_influxdb_api_v2))"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-influxdb",
              "text" : "influxdb",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Matrix Connector Config",
              "refs" : [
                {
                  "doc" : "PostgreSQL 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-matrix-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "用于连接的 IPv4 或 IPv6 地址或主机名。<br/>\n一个主机条目具有以下格式：Host[:Port]。<br/>\n如果未指定 [:Port]，将使用 PostgreSQL 默认端口5432。",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-matrix",
              "text" : "matrix",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "GCP PubSub Consumer Connector Config",
              "refs" : [
                {
                  "doc" : "GCP PubSub 消费者客户端的配置。",
                  "hash" : "T-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "连接 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "连接池大小。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-pipelining",
                      "text" : "pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "请求出错时的最大重试次数。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)",
                      "default" : "2"
                    },
                    {
                      "doc" : "Deprecated since e5.0.1.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。\n当创建 GCP 服务账户时（如 https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-service_account_json",
                      "text" : "service_account_json",
                      "type" : "String"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer",
              "text" : "gcp_pubsub_consumer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "DynamoDB Connector Config",
              "refs" : [
                {
                  "doc" : "DynamoDB 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-dynamo-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "DynamoDB 的地址。",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "Region of AWS Dynamo",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-region",
                      "text" : "region",
                      "type" : "String"
                    },
                    {
                      "doc" : "DynamoDB 的访问 ID。",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-aws_access_key_id",
                      "text" : "aws_access_key_id",
                      "type" : "String"
                    },
                    {
                      "doc" : "DynamoDB 的访问密钥。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-aws_secret_access_key",
                      "text" : "aws_secret_access_key",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-dynamo",
              "text" : "dynamo",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "RocketMQ Connector Config",
              "refs" : [
                {
                  "doc" : "RocketMQ 客户端的配置。",
                  "hash" : "T-connectors-S-connectors-rocketmq-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 RocketMQ 默认端口 9876。",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "The namespace field MUST be set if you are using the RocketMQ service in\naliyun cloud and also the namespace is enabled,\nor if you have configured a namespace in your RocketMQ server.\nFor RocketMQ in aliyun cloud, the namespace is the instance ID.",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-namespace",
                      "text" : "namespace",
                      "type" : "String"
                    },
                    {
                      "doc" : "RocketMQ 服务器的 `accessKey`。",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-access_key",
                      "text" : "access_key",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "RocketMQ 服务器的 `secretKey`。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-secret_key",
                      "text" : "secret_key",
                      "type" : "Secret",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "RocketMQ 服务器安全令牌<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-security_token",
                      "text" : "security_token",
                      "type" : "Secret",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-rocketmq",
              "text" : "rocketmq",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "OpenTSDB Connector Config",
              "refs" : [
                {
                  "doc" : "OpenTSDB 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-opents-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "服务器的地址。",
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "是否返回摘要信息。",
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-summary",
                      "text" : "summary",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否返回详细信息。",
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-details",
                      "text" : "details",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-opents",
              "text" : "opents",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Kinesis Connector Config",
              "refs" : [
                {
                  "doc" : "Kinesis 客户端的配置。",
                  "hash" : "T-connectors-S-connectors-kinesis-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "连接到 Amazon Kinesis 的访问密钥 ID。",
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-aws_access_key_id",
                      "text" : "aws_access_key_id",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接到 Amazon Kinesis 的 AWS 秘密访问密钥。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-aws_secret_access_key",
                      "text" : "aws_secret_access_key",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Amazon Kinesis 终端节点的 URL。",
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-endpoint",
                      "text" : "endpoint",
                      "type" : "String"
                    },
                    {
                      "doc" : "发送请求时发生错误的最大重试次数。",
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)",
                      "default" : "2"
                    },
                    {
                      "doc" : "连接池大小",
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-kinesis",
              "text" : "kinesis",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Kafka Producer Connector Config",
              "refs" : [
                {
                  "doc" : "一个 Kafka 生产者客户端的配置项",
                  "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。",
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-bootstrap_hosts",
                      "text" : "bootstrap_hosts",
                      "type" : "String"
                    },
                    {
                      "doc" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-min_metadata_refresh_interval",
                      "text" : "min_metadata_refresh_interval",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "doc" : "刷新元数据时最大等待时长。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-metadata_request_timeout",
                      "text" : "metadata_request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "认证参数。",
                      "refs" : [
                        {
                          "doc" : "基于用户名密码的认证。",
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password",
                          "fields" : [
                            {
                              "doc" : "SASL 认证方法名称。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-mechanism",
                              "text" : "mechanism",
                              "type" : "Enum(plain,scram_sha_256,scram_sha_512)"
                            },
                            {
                              "doc" : "SASL 认证的用户名。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "SASL 认证的密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_username_password"
                        },
                        {
                          "doc" : "使用 GSSAPI/Kerberos 认证。",
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos",
                          "fields" : [
                            {
                              "doc" : "SASL GSSAPI 认证方法的 Kerberos principal，例如 <code>client_name@MY.KERBEROS.REALM.MYDOMAIN.COM</code>注意：这里使用的 realm 需要配置在 EMQX 服务器的 /etc/krb5.conf 中。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_principal",
                              "text" : "kerberos_principal",
                              "type" : "String"
                            },
                            {
                              "doc" : "SASL GSSAPI 认证方法的 Kerberos keytab 文件。注意：该文件需要上传到 EMQX 服务器中，且运行 EMQX 服务的系统账户需要有读取权限。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_keytab_file",
                              "text" : "kerberos_keytab_file",
                              "type" : "String"
                            }
                          ],
                          "text" : "auth_gssapi_kerberos"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication",
                      "text" : "authentication",
                      "type" : "OneOf(String(\"none\"),Struct(auth_username_password),Struct(auth_gssapi_kerberos))",
                      "default" : "none"
                    },
                    {
                      "doc" : "更多 Socket 参数设置。",
                      "refs" : [
                        {
                          "doc" : "更多 Socket 参数设置。",
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts",
                          "fields" : [
                            {
                              "doc" : "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "为 Kafka 桥接连接启用 TCP keepalive。\n该值是3个由逗号分隔的数字，格式为 'Idle,Interval,Probes'。\n - Idle: 连接在服务器开始发送 keep-alive 探测（Linux 默认 7200）之前需要空闲的秒数。\n - Interval: TCP keep-alive 探测发送间隔的秒数（Linux 默认 75）。\n - Probes: 如果没有从另一端获得响应，在放弃并终止连接之前发送的 TCP keep-alive 探测的最大数量 （Linux 默认 9）。\n例如 \"240,30,5\" 表示： 在连接空闲 240 秒后发送 TCP keepalive 探测 ，并且每 30 秒发送一次探测，直到收到响应，如果连续错过 5 个响应，则应关闭连接。\n默认值： 'none'",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "text" : "tcp_keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "socket_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts",
                      "text" : "socket_opts",
                      "type" : "Struct(socket_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Kafka 客户端的 TLS/SSL 选项",
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "TLS 握手的 Server Name Indication (SNI) 设置。<br/>\n- <code>auto</code>：客户端将使用 <code>\"servicebus.windows.net\"</code> 作为 SNI。<br/>\n- <code>disable</code>：如果您希望阻止客户端发送 SNI。<br/>\n- 其他字符串值将按原样发送。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"auto\"),String(\"disable\"),String)",
                              "default" : "auto"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-kafka_producer",
              "text" : "kafka_producer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "HStreamDB Connector Config",
              "refs" : [
                {
                  "doc" : "HStreamDB 连接器的配置",
                  "hash" : "T-connectors-S-connectors-hstreamdb-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "HStreamDB 服务器 URL。使用 gRPC http 服务器地址。",
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-url",
                      "text" : "url",
                      "type" : "String",
                      "default" : "\"http://127.0.0.1:6570\""
                    },
                    {
                      "doc" : "HStreamDB gRPC 连接超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-grpc_timeout",
                      "text" : "grpc_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-hstreamdb",
              "text" : "hstreamdb",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Kafka Consumer Connector Config",
              "refs" : [
                {
                  "doc" : "Kafka 消费者客户端的配置。",
                  "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。",
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-bootstrap_hosts",
                      "text" : "bootstrap_hosts",
                      "type" : "String"
                    },
                    {
                      "doc" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-min_metadata_refresh_interval",
                      "text" : "min_metadata_refresh_interval",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "doc" : "刷新元数据时最大等待时长。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-metadata_request_timeout",
                      "text" : "metadata_request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "认证参数。",
                      "refs" : [
                        {
                          "doc" : "基于用户名密码的认证。",
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_username_password",
                          "fields" : [
                            {
                              "doc" : "SASL 认证方法名称。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_username_password-mechanism",
                              "text" : "mechanism",
                              "type" : "Enum(plain,scram_sha_256,scram_sha_512)"
                            },
                            {
                              "doc" : "SASL 认证的用户名。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_username_password-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "SASL 认证的密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_username_password-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_username_password"
                        },
                        {
                          "doc" : "使用 GSSAPI/Kerberos 认证。",
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_gssapi_kerberos",
                          "fields" : [
                            {
                              "doc" : "SASL GSSAPI 认证方法的 Kerberos principal，例如 <code>client_name@MY.KERBEROS.REALM.MYDOMAIN.COM</code>注意：这里使用的 realm 需要配置在 EMQX 服务器的 /etc/krb5.conf 中。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_principal",
                              "text" : "kerberos_principal",
                              "type" : "String"
                            },
                            {
                              "doc" : "SASL GSSAPI 认证方法的 Kerberos keytab 文件。注意：该文件需要上传到 EMQX 服务器中，且运行 EMQX 服务的系统账户需要有读取权限。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_keytab_file",
                              "text" : "kerberos_keytab_file",
                              "type" : "String"
                            }
                          ],
                          "text" : "auth_gssapi_kerberos"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication",
                      "text" : "authentication",
                      "type" : "OneOf(String(\"none\"),Struct(auth_username_password),Struct(auth_gssapi_kerberos))",
                      "default" : "none"
                    },
                    {
                      "doc" : "更多 Socket 参数设置。",
                      "refs" : [
                        {
                          "doc" : "更多 Socket 参数设置。",
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts",
                          "fields" : [
                            {
                              "doc" : "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "为 Kafka 桥接连接启用 TCP keepalive。\n该值是3个由逗号分隔的数字，格式为 'Idle,Interval,Probes'。\n - Idle: 连接在服务器开始发送 keep-alive 探测（Linux 默认 7200）之前需要空闲的秒数。\n - Interval: TCP keep-alive 探测发送间隔的秒数（Linux 默认 75）。\n - Probes: 如果没有从另一端获得响应，在放弃并终止连接之前发送的 TCP keep-alive 探测的最大数量 （Linux 默认 9）。\n例如 \"240,30,5\" 表示： 在连接空闲 240 秒后发送 TCP keepalive 探测 ，并且每 30 秒发送一次探测，直到收到响应，如果连续错过 5 个响应，则应关闭连接。\n默认值： 'none'",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "text" : "tcp_keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "socket_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts",
                      "text" : "socket_opts",
                      "type" : "Struct(socket_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Kafka 客户端的 TLS/SSL 选项",
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "TLS 握手的 Server Name Indication (SNI) 设置。<br/>\n- <code>auto</code>：客户端将使用 <code>\"servicebus.windows.net\"</code> 作为 SNI。<br/>\n- <code>disable</code>：如果您希望阻止客户端发送 SNI。<br/>\n- 其他字符串值将按原样发送。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"auto\"),String(\"disable\"),String)",
                              "default" : "auto"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-kafka_consumer",
              "text" : "kafka_consumer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Oracle Connector Config",
              "refs" : [
                {
                  "doc" : "Oracle 客户端的配置。",
                  "hash" : "T-connectors-S-connectors-oracle-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Oracle Database 默认端口 1521。",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "Oracle Database Sid 名称",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-sid",
                      "text" : "sid",
                      "type" : "String"
                    },
                    {
                      "doc" : "Oracle Database 服务名称。",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-service_name",
                      "text" : "service_name",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-oracle",
              "text" : "oracle",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Cassandra Connector Config",
              "refs" : [
                {
                  "doc" : "Cassandra 桥接配置",
                  "hash" : "T-connectors-S-connectors-cassandra-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port][,Host2:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 Cassandra 默认端口 9042。",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "要连接到的 Keyspace 名称。",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-keyspace",
                      "text" : "keyspace",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-cassandra",
              "text" : "cassandra",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "ElasticSearch Connector Config",
              "refs" : [
                {
                  "doc" : "ElasticSearch 动作的配置。",
                  "hash" : "T-connectors-S-connectors-elasticsearch-S-config",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "连接池类型。可以是random、hash之一。",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-pool_type",
                      "text" : "pool_type",
                      "type" : "Enum(random,hash)",
                      "default" : "random"
                    },
                    {
                      "doc" : "连接池大小。",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。\n一个主机条目有如下形式：`主机[:端口]`。\n如果没有指定 `[:端口]`，则使用 Elasticsearch 默认端口 9200。",
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-server",
                      "text" : "server",
                      "type" : "String",
                      "default" : "\"127.0.0.1:9200\""
                    },
                    {
                      "doc" : "认证配置",
                      "refs" : [
                        {
                          "doc" : "Basic Authentication",
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic",
                          "fields" : [
                            {
                              "doc" : "IoTDB REST 接口配置的用户名",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "ElasticSearch REST 连接密码<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_basic"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication",
                      "text" : "authentication",
                      "type" : "OneOf(Struct(auth_basic))"
                    }
                  ],
                  "text" : "config"
                }
              ],
              "hash" : "V-connectors-S-connectors-elasticsearch",
              "text" : "elasticsearch",
              "type" : "Map($name->Struct(config))"
            },
            {
              "doc" : "GCP PubSub Producer Connector Config",
              "refs" : [
                {
                  "doc" : "GCP PubSub 生产者客户端的具体配置。",
                  "hash" : "T-connectors-S-connectors-gcp_pubsub_producer-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "连接 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "连接池大小。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-pipelining",
                      "text" : "pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "请求出错时的最大重试次数。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-max_retries",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)",
                      "default" : "2"
                    },
                    {
                      "doc" : "Deprecated since e5.0.1.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。\n当创建 GCP 服务账户时（如 https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。",
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-service_account_json",
                      "text" : "service_account_json",
                      "type" : "String"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer",
              "text" : "gcp_pubsub_producer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "RabbitMQ Connector Config",
              "refs" : [
                {
                  "doc" : "RabbitMQ 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-rabbitmq-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用/禁用数据桥接",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "您想要连接的 RabbitMQ 服务器地址（例如，localhost）。",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-server",
                      "text" : "server",
                      "type" : "String",
                      "default" : "localhost"
                    },
                    {
                      "doc" : "您想要连接的 RabbitMQ 服务器地址（例如，localhost）。",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-port",
                      "text" : "port",
                      "type" : "Integer(1..65535)",
                      "default" : "5672"
                    },
                    {
                      "doc" : "用于与 RabbitMQ 服务器进行认证的用户名。",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "连接池的大小",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "等待连接建立的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-timeout",
                      "text" : "timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "连接到 RabbitMQ 服务器时使用的虚拟主机。",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-virtual_host",
                      "text" : "virtual_host",
                      "type" : "String",
                      "default" : "\"/\""
                    },
                    {
                      "doc" : "向 RabbitMQ 服务器发送心跳消息的间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-heartbeat",
                      "text" : "heartbeat",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "连接器资源选项。",
                          "hash" : "T-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-rabbitmq",
              "text" : "rabbitmq",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Redis Connector Config",
              "refs" : [
                {
                  "doc" : "Redis 动作的配置。",
                  "hash" : "T-connectors-S-connectors-redis-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "特定于某个 Redis 连接器类型的参数集，`redis_type`可以是`single`，`cluster`或`sentinel`之一。",
                      "refs" : [
                        {
                          "doc" : "Single 模式下的 Redis 连接器。",
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector",
                          "fields" : [
                            {
                              "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-server",
                              "text" : "server",
                              "type" : "String"
                            },
                            {
                              "doc" : "Single 模式。 当 Redis 服务器在 Single 模式下运行时必须设置为 'single' 。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-redis_type",
                              "text" : "redis_type",
                              "type" : "String(\"single\")",
                              "default" : "single"
                            },
                            {
                              "doc" : "桥接远端服务时使用的连接池大小。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-pool_size",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "doc" : "内部数据库的用户名。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-password",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "doc" : "Redis 数据库 ID。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-database",
                              "text" : "database",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "Deprecated since v5.0.15.",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-auto_reconnect",
                              "text" : "auto_reconnect",
                              "type" : "Boolean"
                            }
                          ],
                          "text" : "redis_single_connector"
                        },
                        {
                          "doc" : "Sentinel 模式下的 Redis 连接器。",
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector",
                          "fields" : [
                            {
                              "doc" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：Node[,Node]。每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-servers",
                              "text" : "servers",
                              "type" : "String"
                            },
                            {
                              "doc" : "Sentinel 模式。 当 Redis 服务器在 Senitel 模式下运行时必须设置为 'sentinel' 。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-redis_type",
                              "text" : "redis_type",
                              "type" : "String(\"sentinel\")",
                              "default" : "sentinel"
                            },
                            {
                              "doc" : "Redis sentinel 模式下的集群名称。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-sentinel",
                              "text" : "sentinel",
                              "type" : "String"
                            },
                            {
                              "doc" : "桥接远端服务时使用的连接池大小。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-pool_size",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "doc" : "内部数据库的用户名。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-password",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "doc" : "Redis 数据库 ID。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-database",
                              "text" : "database",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "Deprecated since v5.0.15.",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-auto_reconnect",
                              "text" : "auto_reconnect",
                              "type" : "Boolean"
                            }
                          ],
                          "text" : "redis_sentinel_connector"
                        },
                        {
                          "doc" : "集群模式下的 Redis 连接器。",
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector",
                          "fields" : [
                            {
                              "doc" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：Node[,Node]。每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。主机名具有以下形式：Host[:Port]。如果未指定 [:Port]，则使用 Redis 默认端口 6379。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-servers",
                              "text" : "servers",
                              "type" : "String"
                            },
                            {
                              "doc" : "Cluster 模式。当 Redis 服务器在集群模式下运行时必须设置为'cluster'。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-redis_type",
                              "text" : "redis_type",
                              "type" : "String(\"cluster\")",
                              "default" : "cluster"
                            },
                            {
                              "doc" : "桥接远端服务时使用的连接池大小。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-pool_size",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "doc" : "内部数据库的用户名。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-password",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "doc" : "Deprecated since v5.0.15.",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-auto_reconnect",
                              "text" : "auto_reconnect",
                              "type" : "Boolean"
                            }
                          ],
                          "text" : "redis_cluster_connector"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(redis_single_connector),Struct(redis_sentinel_connector),Struct(redis_cluster_connector))"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-redis",
              "text" : "redis",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "MQTT Connector Config",
              "refs" : [
                {
                  "doc" : "MQTT connector 的配置。",
                  "hash" : "T-connectors-S-connectors-mqtt-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "将发布消息到远程代理的 MQTT 客户端池的大小。<br/>\n每个 MQTT 客户端都将分配'clientid'，格式为'${clientid_prefix}:${bridge_name}:egress:${node}:${n}'\n其中'n'是池中客户端的编号。",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "Deprecated since v5.1.0 & e5.1.0.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-mode",
                      "text" : "mode",
                      "type" : "Enum(cluster_shareload)"
                    },
                    {
                      "doc" : "远程 MQTT 代理的主机和端口",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "附加到 egress 动作使用的 clientid 前缀（可选）。",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-clientid_prefix",
                      "text" : "clientid_prefix",
                      "type" : "String"
                    },
                    {
                      "doc" : "Deprecated since v5.0.16.",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-reconnect_interval",
                      "text" : "reconnect_interval",
                      "type" : "String"
                    },
                    {
                      "doc" : "MQTT协议版本",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-proto_ver",
                      "text" : "proto_ver",
                      "type" : "Enum(v3,v4,v5)",
                      "default" : "v4"
                    },
                    {
                      "doc" : "如果启用桥接模式。\n注意：此设置仅适用于 MQTT 协议版本早于5.0的情况，远程 MQTT\n代理必须支持此功能。\n如果将 bridge_mode 设置为true，则桥接将指示远程代理它是一个桥接而不是普通客户端。\n这意味着循环检测将更加有效，并且保留的消息将被正确传递。",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-bridge_mode",
                      "text" : "bridge_mode",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "MQTT 协议的用户名",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "MQTT 协议的密码<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "在重新连接到入口动作时是否启动新会话",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-clean_start",
                      "text" : "clean_start",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,\n- `s` for seconds,\n- `m` for minutes,\n- `h` for hours;\n<br/>or combination of whereof: `1h5m0s`",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-keepalive",
                      "text" : "keepalive",
                      "type" : "String",
                      "default" : "\"300s\""
                    },
                    {
                      "doc" : "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,\n- `s` for seconds,\n- `m` for minutes,\n- `h` for hours;\n<br/>or combination of whereof: `1h5m0s`",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-retry_interval",
                      "text" : "retry_interval",
                      "type" : "String",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "MQTT 协议的最大 inflight（已发送但未确认）消息数",
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-max_inflight",
                      "text" : "max_inflight",
                      "type" : "Integer(0..+inf)",
                      "default" : "32"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-mqtt",
              "text" : "mqtt",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "PostgreSQL Connector Config",
              "refs" : [
                {
                  "doc" : "PostgreSQL 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-pgsql-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "用于连接的 IPv4 或 IPv6 地址或主机名。<br/>\n一个主机条目具有以下格式：Host[:Port]。<br/>\n如果未指定 [:Port]，将使用 PostgreSQL 默认端口5432。",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-pgsql",
              "text" : "pgsql",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Azure Event Hub Connector Config",
              "refs" : [
                {
                  "doc" : "Azure Event Hubs 数据桥接配置项。",
                  "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "逗号分隔的 Azure Event Hubs Kafka 命名空间主机名 <code>host[:port]</code> ，用于引导客户端。  默认端口号为 9093。",
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-bootstrap_hosts",
                      "text" : "bootstrap_hosts",
                      "type" : "String"
                    },
                    {
                      "doc" : "TCP 连接建立的最大等待时间（包括如果已启用身份认证则包括身份认证时间）<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "客户端在刷新 Azure Event Hubs Kafka 代理和主题元数据之前必须等待的最小时间间隔。设置太小的值可能会给 Azure Event Hubs 增加额外的负载。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-min_metadata_refresh_interval",
                      "text" : "min_metadata_refresh_interval",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "doc" : "从 Azure Event Hubs 获取元数据时的最大等待时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-metadata_request_timeout",
                      "text" : "metadata_request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "认证配置",
                      "refs" : [
                        {
                          "doc" : "基于用户名/密码进行认证",
                          "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication-S-auth_username_password",
                          "fields" : [
                            {
                              "doc" : "用于连接 Azure Event Hubs 的连接字符串。应为命名空间共享访问策略的 \"连接字符串-主键\"。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication-S-auth_username_password-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_username_password"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication",
                      "text" : "authentication",
                      "type" : "Struct(auth_username_password)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "额外的套接字选项。",
                      "refs" : [
                        {
                          "doc" : "更多 Socket 参数设置。",
                          "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts",
                          "fields" : [
                            {
                              "doc" : "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "为 Kafka 桥接连接启用 TCP keepalive。\n该值是3个由逗号分隔的数字，格式为 'Idle,Interval,Probes'。\n - Idle: 连接在服务器开始发送 keep-alive 探测（Linux 默认 7200）之前需要空闲的秒数。\n - Interval: TCP keep-alive 探测发送间隔的秒数（Linux 默认 75）。\n - Probes: 如果没有从另一端获得响应，在放弃并终止连接之前发送的 TCP keep-alive 探测的最大数量 （Linux 默认 9）。\n例如 \"240,30,5\" 表示： 在连接空闲 240 秒后发送 TCP keepalive 探测 ，并且每 30 秒发送一次探测，直到收到响应，如果连续错过 5 个响应，则应关闭连接。\n默认值： 'none'",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "text" : "tcp_keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "socket_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts",
                      "text" : "socket_opts",
                      "type" : "Struct(socket_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "用于 Azure Event Hubs 客户端的 TLS/SSL 选项。",
                          "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "String(\"true\")",
                              "default" : "true"
                            },
                            {
                              "doc" : "TLS 握手的服务器名称指示（SNI）设置。<br/>\n- <code>auto</code>：客户端将使用<code>\"servicebus.windows.net\"</code>作为SNI。<br/>\n- <code>disable</code>：如果您希望阻止客户端发送SNI。<br/>\n- 其他字符串值将按原样发送。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"auto\"),String(\"disable\"),String)",
                              "default" : "auto"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = true}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-azure_event_hub_producer",
              "text" : "azure_event_hub_producer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "TDengine Connector Config",
              "refs" : [
                {
                  "doc" : "TDengine 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-tdengine-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 TDengine 默认端口 6041。",
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-username",
                      "text" : "username",
                      "type" : "String",
                      "default" : "root"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-tdengine",
              "text" : "tdengine",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Syskeeper Connector Config",
              "refs" : [
                {
                  "doc" : "Syskeeper 转发连接器的配置",
                  "hash" : "T-connectors-S-connectors-syskeeper_forwarder-S-config",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Syskeeper 代理服务器的地址",
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "指定代理服务器是否应该回复消息转发的确认，可以是：<br>- need_ack <br>- no_ack <br>",
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-ack_mode",
                      "text" : "ack_mode",
                      "type" : "Enum(need_ack,no_ack)",
                      "default" : "no_ack"
                    },
                    {
                      "doc" : "等待代理服务器确认的最大时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-ack_timeout",
                      "text" : "ack_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config"
                }
              ],
              "hash" : "V-connectors-S-connectors-syskeeper_forwarder",
              "text" : "syskeeper_forwarder",
              "type" : "Map($name->Struct(config))"
            },
            {
              "doc" : "Pulsar Connector Config",
              "refs" : [
                {
                  "doc" : "Pulsar 连接器配置。",
                  "hash" : "T-connectors-S-connectors-pulsar-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用/禁用数据桥接",
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "以逗号分隔的 <code>scheme://host[:port]</code> 格式的 Pulsar URL 列表，支持的 scheme 有 <code>pulsar://</code> （默认）和<code>pulsar+ssl://</code>。默认的端口是 6650。",
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-servers",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "doc" : "认证参数。",
                      "refs" : [
                        {
                          "doc" : "基本认证的参数。",
                          "hash" : "T-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_basic",
                          "fields" : [
                            {
                              "doc" : "基本认证用户名。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_basic-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "基本认证密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_basic-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_basic"
                        },
                        {
                          "doc" : "令牌认证的参数。",
                          "hash" : "T-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_token",
                          "fields" : [
                            {
                              "doc" : "JWT 认证令牌。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_token-jwt",
                              "text" : "jwt",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_token"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-authentication",
                      "text" : "authentication",
                      "type" : "OneOf(String(\"none\"),Struct(auth_basic),Struct(auth_token))",
                      "default" : "none"
                    },
                    {
                      "doc" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "Pulsar 连接器资源选项。",
                          "hash" : "T-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-pulsar",
              "text" : "pulsar",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "MongoDB Connector Config",
              "refs" : [
                {
                  "doc" : "MongoDB 动作的配置",
                  "hash" : "T-connectors-S-connectors-mongodb-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "特定于此 MongoDB 连接器类型的一组参数，mongo_type 可以是 single（独立）、sharded（分片）或 rs（副本集）之一。",
                      "refs" : [
                        {
                          "doc" : "单个 MongoDB 实例的设置",
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_single",
                          "fields" : [
                            {
                              "doc" : "独立实例。当MongoDB服务器以独立模式运行时，必须设置为`single`。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_single-mongo_type",
                              "text" : "mongo_type",
                              "type" : "String(\"single\")",
                              "default" : "single"
                            },
                            {
                              "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机条目具有以下形式：主机[:端口]。<br/>如果未指定[:端口]，则使用MongoDB的默认端口27017。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_single-server",
                              "text" : "server",
                              "type" : "String"
                            },
                            {
                              "doc" : "写入模式",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_single-w_mode",
                              "text" : "w_mode",
                              "type" : "Enum(unsafe,safe)",
                              "default" : "unsafe"
                            }
                          ],
                          "text" : "connector_single"
                        },
                        {
                          "doc" : "分片集群的设置。",
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_sharded",
                          "fields" : [
                            {
                              "doc" : "分片集群。当 MongoDB 服务器以`分片`模式运行时，必须设置为`sharded`。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_sharded-mongo_type",
                              "text" : "mongo_type",
                              "type" : "String(\"sharded\")",
                              "default" : "sharded"
                            },
                            {
                              "doc" : "集群连接的节点列表。节点应使用逗号分隔，例如：节点[,节点]。\n对于每个节点，应该是要连接的 IPv4 或 IPv6 地址或主机名。\n主机条目具有以下形式：主机[:端口]。\n如果未指定[:端口]，则使用 MongoDB 的默认端口27017。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_sharded-servers",
                              "text" : "servers",
                              "type" : "String"
                            },
                            {
                              "doc" : "写入模式",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_sharded-w_mode",
                              "text" : "w_mode",
                              "type" : "Enum(unsafe,safe)",
                              "default" : "unsafe"
                            }
                          ],
                          "text" : "connector_sharded"
                        },
                        {
                          "doc" : "副本集的设置。",
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs",
                          "fields" : [
                            {
                              "doc" : "副本集。当MongoDB服务器以`副本集`模式运行时，必须设置为`rs`。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-mongo_type",
                              "text" : "mongo_type",
                              "type" : "String(\"rs\")",
                              "default" : "rs"
                            },
                            {
                              "doc" : "集群连接的节点列表。节点应使用逗号分隔，例如：节点[,节点]。\n对于每个节点，应该是要连接的 IPv4 或 IPv6 地址或主机名。\n主机条目具有以下形式：主机[:端口]。\n如果未指定[:端口]，则使用 MongoDB 的默认端口27017。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-servers",
                              "text" : "servers",
                              "type" : "String"
                            },
                            {
                              "doc" : "写入模式",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-w_mode",
                              "text" : "w_mode",
                              "type" : "Enum(unsafe,safe)",
                              "default" : "unsafe"
                            },
                            {
                              "doc" : "读取模式。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-r_mode",
                              "text" : "r_mode",
                              "type" : "Enum(master,slave_ok)",
                              "default" : "master"
                            },
                            {
                              "doc" : "副本集的名称。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-replica_set_name",
                              "text" : "replica_set_name",
                              "type" : "String"
                            }
                          ],
                          "text" : "connector_rs"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(connector_single),Struct(connector_sharded),Struct(connector_rs))"
                    },
                    {
                      "doc" : "使用 DNS SRV 记录。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-srv_record",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-use_legacy_protocol",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "doc" : "与用户认证信息关联的数据库名称。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-auth_source",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "MongoDB 的拓扑结构。",
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology",
                          "fields" : [
                            {
                              "doc" : "在池中的所有工作线程都繁忙时，可以创建的附加工作线程的最大数量。这有助于通过允许更多并发连接到 MongoDB 服务器来管理工作负载的暂时性波动。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-max_overflow",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "doc" : "超出配置的池大小（\"溢出\"）的工作线程在终止之前的时间段。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-overflow_ttl",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "检查是否存在多余工作线程（\"溢出\"）的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-overflow_check_period",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "用于在多个合适的 MongoDB 实例中进行选择的延迟窗口的大小。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-local_threshold_ms",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "在超时之前尝试连接的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-connect_timeout_ms",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "在套接字上尝试发送或接收超时之前的持续时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-socket_timeout_ms",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "指定在抛出异常之前进行服务器选择的阻塞时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-server_selection_timeout_ms",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "工作线程等待连接可用的最长时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-wait_queue_timeout_ms",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "doc" : "控制驱动程序何时检查 MongoDB 部署的状态。指定检查之间的时间间隔，从上次检查结束到下次检查开始计算。如果连接数增加（例如，如果增加了池大小），则可能需要增加此时间间隔，以避免在 MongoDB 日志文件中创建过多的日志条目。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-heartbeat_frequency_ms",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "doc" : "控制心跳之间等待的最短时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-min_heartbeat_frequency_ms",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-mongodb",
              "text" : "mongodb",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "HTTP Connector Config",
              "refs" : [
                {
                  "doc" : "HTTP 动作的配置",
                  "hash" : "T-connectors-S-connectors-http-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "HTTP 动作的 URL。<br/>\n此路径允许使用带有变量的模板，但变量不能用于方案、主机或端口部分。<br/>\n例如，<code> http://localhost:9901/${topic} </code> 是允许的，但\n<code> http://${host}:9901/message </code> 或 <code> http://localhost:${port}/message </code>\n是不允许的。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "HTTP 请求头。<br/>\n允许使用带有变量的模板。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-headers",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=5\"}"
                    },
                    {
                      "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "Deprecated since 5.0.4.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-retry_interval",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "doc" : "连接池类型。可以是random、hash之一。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-pool_type",
                      "text" : "pool_type",
                      "type" : "Enum(random,hash)",
                      "default" : "random"
                    },
                    {
                      "doc" : "连接池大小。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-enable_pipelining",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "doc" : "Deprecated since 5.3.2.",
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-request",
                      "text" : "request",
                      "type" : "Map"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-http",
              "text" : "http",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Timescale Connector Config",
              "refs" : [
                {
                  "doc" : "PostgreSQL 连接器的配置。",
                  "hash" : "T-connectors-S-connectors-timescale-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "用于连接的 IPv4 或 IPv6 地址或主机名。<br/>\n一个主机条目具有以下格式：Host[:Port]。<br/>\n如果未指定 [:Port]，将使用 PostgreSQL 默认端口5432。",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-username",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-timescale",
              "text" : "timescale",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "Confluent Connector Config",
              "refs" : [
                {
                  "doc" : "Confluent 动作的配置",
                  "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "逗号分隔的 Confluent Kafka 命名空间主机名 <code>host[:port]</code> ，用于引导客户端。  默认端口号为 9092。",
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-bootstrap_hosts",
                      "text" : "bootstrap_hosts",
                      "type" : "String"
                    },
                    {
                      "doc" : "TCP 连接建立的最大等待时间（包括启用认证时的认证时间）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-connect_timeout",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "客户端刷新 Confluent Kafka 代理和主题元数据的最短时间间隔。设置过小的值可能会给 Confluent 增加额外的负载。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-min_metadata_refresh_interval",
                      "text" : "min_metadata_refresh_interval",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "doc" : "从 Confluent 获取元数据的最大等待时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-metadata_request_timeout",
                      "text" : "metadata_request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "认证配置",
                      "refs" : [
                        {
                          "doc" : "基于用户名/密码的认证。",
                          "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector-authentication-S-auth_username_password",
                          "fields" : [
                            {
                              "doc" : "Confluent 键。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-authentication-S-auth_username_password-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-authentication-S-auth_username_password-password",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "text" : "auth_username_password"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-authentication",
                      "text" : "authentication",
                      "type" : "Struct(auth_username_password)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "额外的套接字选项。",
                      "refs" : [
                        {
                          "doc" : "更多 Socket 参数设置。",
                          "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts",
                          "fields" : [
                            {
                              "doc" : "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "为 Kafka 桥接连接启用 TCP keepalive。\n该值是3个由逗号分隔的数字，格式为 'Idle,Interval,Probes'。\n - Idle: 连接在服务器开始发送 keep-alive 探测（Linux 默认 7200）之前需要空闲的秒数。\n - Interval: TCP keep-alive 探测发送间隔的秒数（Linux 默认 75）。\n - Probes: 如果没有从另一端获得响应，在放弃并终止连接之前发送的 TCP keep-alive 探测的最大数量 （Linux 默认 9）。\n例如 \"240,30,5\" 表示： 在连接空闲 240 秒后发送 TCP keepalive 探测 ，并且每 30 秒发送一次探测，直到收到响应，如果连续错过 5 个响应，则应关闭连接。\n默认值： 'none'",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "text" : "tcp_keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "text" : "socket_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts",
                      "text" : "socket_opts",
                      "type" : "Struct(socket_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Confluent 客户端的 TLS/SSL 选项。",
                          "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "TLS 握手的服务器名称指示（SNI）设置。<br/>\n- <code>auto</code>：客户端将使用<code>\"servicebus.windows.net\"</code>作为 SNI。<br/>\n- <code>disable</code>：如果您不希望客户端发送 SNI。<br/>\n- 其他字符串值将按原样发送。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"auto\"),String(\"disable\"),String)",
                              "default" : "auto"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = true}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-confluent_producer",
              "text" : "confluent_producer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "doc" : "MySQL Connector Config",
              "refs" : [
                {
                  "doc" : "MySQL 动作的配置",
                  "hash" : "T-connectors-S-connectors-mysql-S-config_connector",
                  "fields" : [
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该连接器。",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "用于连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机条目的格式如下：主机[:端口]。<br/>\n如果未指定[:端口]，将使用 MySQL 的默认端口3306。",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "doc" : "数据库名字。",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-database",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "doc" : "桥接远端服务时使用的连接池大小。",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "doc" : "内部数据库的用户名。",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-username",
                      "text" : "username",
                      "type" : "String",
                      "default" : "root"
                    },
                    {
                      "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-password",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "doc" : "Deprecated since v5.0.15.",
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "doc" : "启用 SSL 连接。",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-mysql",
              "text" : "mysql",
              "type" : "Map($name->Struct(config_connector))"
            }
          ],
          "text" : "connectors"
        }
      ],
      "hash" : "V-connectors",
      "text" : "connectors",
      "type" : "Struct(connectors)"
    },
    {
      "refs" : [
        {
          "doc" : "数据桥接的配置信息",
          "hash" : "T-actions-S-actions",
          "fields" : [
            {
              "doc" : "HTTP Action Config",
              "refs" : [
                {
                  "doc" : "HTTP 动作的配置",
                  "hash" : "T-actions-S-actions-http-S-http_action",
                  "fields" : [
                    {
                      "doc" : "启用或停用动作",
                      "hash" : "V-actions-S-actions-http-S-http_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-http-S-http_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-http-S-http_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-http-S-http_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "HTTP 动作的参数",
                      "refs" : [
                        {
                          "doc" : "HTTP 动作的参数",
                          "hash" : "T-actions-S-actions-http-S-http_action-parameters-S-parameters_opts",
                          "fields" : [
                            {
                              "doc" : "此动作的 URL 路径。<br/>\n此路径将附加到连接器的 <code>url</code> 配置，以形成完整的 URL 地址。\n此选项允许使用带有变量的模板。例如，<code>/room/{$room_no}</code>。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-path",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "doc" : "HTTP 请求的方法。所有可用的方法包括：post、put、get、delete。<br/>\n允许使用带有变量的模板。",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-method",
                              "text" : "method",
                              "type" : "Enum(post,put,get,delete)",
                              "default" : "post"
                            },
                            {
                              "doc" : "HTTP 请求头。<br/>\n允许使用带有变量的模板。",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-headers",
                              "text" : "headers",
                              "type" : "Map",
                              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=5\"}"
                            },
                            {
                              "doc" : "HTTP 请求的主体。<br/>\n如果未提供，主体将是所有可用字段的 JSON 对象。<br/>\n这里的“所有可用字段”是指在触发此 Webhook 时的 MQTT 消息的上下文（当 local_topic 已设置并接收到 MQTT 消息时触发），<br/>或者当此 Webhook 用作规则的动作时，在触发此 Webhook 时的事件上下文。<br/>允许使用带有变量的模板。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-body",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "doc" : "如果发送请求时出错，最大的重试次数。",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            },
                            {
                              "doc" : "Deprecated since v5.0.26.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-request_timeout",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "text" : "parameters_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-http-S-http_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(parameters_opts)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-http-S-http_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "http_action"
                }
              ],
              "hash" : "V-actions-S-actions-http",
              "aliases" : [
                "webhook"
              ],
              "text" : "http",
              "type" : "Map($name->Struct(http_action))"
            },
            {
              "doc" : "与 MySQL 连接器交互的动作",
              "refs" : [
                {
                  "doc" : "与 MySQL 连接器交互的动作",
                  "hash" : "T-actions-S-actions-mysql-S-mysql_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "特定于此动作类型的附加参数",
                      "refs" : [
                        {
                          "doc" : "特定于此动作类型的附加参数",
                          "hash" : "T-actions-S-actions-mysql-S-mysql_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "SQL 模版",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-parameters-S-action_parameters-sql",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "mysql_action"
                }
              ],
              "hash" : "V-actions-S-actions-mysql",
              "text" : "mysql",
              "type" : "Map($name->Struct(mysql_action))"
            },
            {
              "doc" : "MongoDB Action Config",
              "refs" : [
                {
                  "doc" : "与 MongoDB 连接器交互的动作",
                  "hash" : "T-actions-S-actions-mongodb-S-mongodb_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "特定于此动作类型的附加参数",
                      "refs" : [
                        {
                          "doc" : "特定于此动作类型的附加参数",
                          "hash" : "T-actions-S-actions-mongodb-S-mongodb_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "数据将存储在其中的集合",
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-parameters-S-action_parameters-collection",
                              "text" : "collection",
                              "type" : "String",
                              "default" : "mqtt"
                            },
                            {
                              "doc" : "用于格式化发送消息的模板。如果未定义，规则引擎将使用 JSON 格式序列化所有可见输入，例如 clientid、主题、有效载荷等。",
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-parameters-S-action_parameters-payload_template",
                              "text" : "payload_template",
                              "type" : "String"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "mongodb_action"
                }
              ],
              "hash" : "V-actions-S-actions-mongodb",
              "text" : "mongodb",
              "type" : "Map($name->Struct(mongodb_action))"
            },
            {
              "doc" : "Redis Action Config",
              "refs" : [
                {
                  "doc" : "与 Redis 连接器交互的动作。",
                  "hash" : "T-actions-S-actions-redis-S-redis_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-redis-S-redis_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-redis-S-redis_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-redis-S-redis_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-redis-S-redis_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-redis-S-redis_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "动作的参数。",
                      "refs" : [
                        {
                          "doc" : "动作的参数。",
                          "hash" : "T-actions-S-actions-redis-S-redis_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "用于导出消息的 Redis 命令模板。每个列表元素代表一个命令名称或其参数。\n例如，要将有效负载推送到 Redis 列表中的键 msgs，元素应该如下所示：\nrpush，msgs，${payload}。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-parameters-S-action_parameters-command_template",
                              "text" : "command_template",
                              "type" : "Array(String)"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-redis-S-redis_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "这个参数定义了批处理计数的上限。\n将这个值设置为1将有效地禁用批处理，因为它表示每个批处理将只处理一个项目。\n关于 Redis 集群模式的注意事项：\n在 Redis 集群模式的情况下不支持批处理。\n因此，batch_size 总是设置为1，\n反映了该模式对于批处理操作固有的限制。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在低消息速率下积累批处理时的最大等待间隔，以实现更高效的资源使用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "redis_action"
                }
              ],
              "hash" : "V-actions-S-actions-redis",
              "text" : "redis",
              "type" : "Map($name->Struct(redis_action))"
            },
            {
              "doc" : "MQTT Publisher Action Config",
              "refs" : [
                {
                  "doc" : "发布动作的配置。",
                  "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "动作的具体配置。",
                      "refs" : [
                        {
                          "doc" : "动作的具体配置。",
                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "要转发到远程代理的主题。<br/>\n允许使用带有变量的模板。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "要发送的 MQTT 消息的 QoS 级别。<br/>\n允许使用带有变量的模板。",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-qos",
                              "text" : "qos",
                              "type" : "OneOf(Integer(0..2),String)",
                              "default" : "1"
                            },
                            {
                              "doc" : "要发送的 MQTT 消息的'retain'标志。<br/>\n允许使用带有变量的模板。",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-retain",
                              "text" : "retain",
                              "type" : "OneOf(Boolean,String)",
                              "default" : "false"
                            },
                            {
                              "doc" : "要发送的 MQTT 消息的有效载荷。<br/>\n允许使用带有变量的模板。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-payload",
                              "text" : "payload",
                              "type" : "String"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源启动相关的选项。",
                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "mqtt_publisher_action"
                }
              ],
              "hash" : "V-actions-S-actions-mqtt",
              "text" : "mqtt",
              "type" : "Map($name->Struct(mqtt_publisher_action))"
            },
            {
              "doc" : "Azure Event Hub Actions Config",
              "refs" : [
                {
                  "doc" : "一个动作的配置项",
                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions",
                  "fields" : [
                    {
                      "doc" : "将 MQTT 主题或主题过滤器作为数据源（动作输入）。如果使用规则动作作为数据源，则应将此配置保留为空，否则消息将在 Azure Event Hubs 中重复。",
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "Azure Event Hubs 生产者配置",
                      "refs" : [
                        {
                          "doc" : "Azure Event Hubs 生产者配置",
                          "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts",
                          "fields" : [
                            {
                              "doc" : "----",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "呈现 Azure Event Hubs 消息的模版。",
                              "refs" : [
                                {
                                  "doc" : "呈现 Azure Event Hubs 消息的模版。",
                                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "fields" : [
                                    {
                                      "doc" : "用于呈现 Azure Event Hubs 消息键的模版。如果模板呈现为空值（即在规则引擎上下文中没有此类数据字段），则使用 Azure Event Hubs 的 NULL（而不是空字符串）。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "text" : "key",
                                      "type" : "String",
                                      "default" : "\"${.clientid}\""
                                    },
                                    {
                                      "doc" : "用于呈现 Azure Event Hubs 消息值的模版。如果模板呈现为空值（即在规则引擎上下文中没有此类数据字段），则使用 Azure Event Hubs 的 NULL（而不是空字符串）。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "text" : "value",
                                      "type" : "String",
                                      "default" : "\"${.}\""
                                    }
                                  ],
                                  "text" : "kafka_message"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message",
                              "text" : "message",
                              "type" : "Struct(kafka_message)"
                            },
                            {
                              "doc" : "在 Azure Event Hubs 消息批次中收集的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"896KB\""
                            },
                            {
                              "doc" : "分区策略是用来指导生产者如何将消息分配到Azure Event Hubs的各个分区。\n\n<code>random</code>: 为每条消息随机选择一个分区。\n<code>key_dispatch</code>: 根据 Azure Event Hubs 消息键的哈希值将消息分配到分区，确保拥有相同键的消息能够一致地被分配到特定分区。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-partition_strategy",
                              "text" : "partition_strategy",
                              "type" : "Enum(random,key_dispatch)",
                              "default" : "random"
                            },
                            {
                              "doc" : "Azure Event Hubs 分区领导者的确认标准。它确定了在向 EMQX Azure Event Hubs 生产者回送确认前，需要从追随者分区获得的确认等级。\n\n<code>all_isr</code>：要求所有同步副本进行确认。\n<code>leader_only</code>：仅要求分区领导者的确认。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-required_acks",
                              "text" : "required_acks",
                              "type" : "Enum(all_isr,leader_only)",
                              "default" : "all_isr"
                            },
                            {
                              "doc" : "为Azure Event Hubs头部提供一个占位符。例如：<code>${pub_props}</code>。<br/>\n注意，占位符的值必须是一个对象：\n<code>{\"foo\": \"bar\"}</code>\n或者是一组键值对：\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code><br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_headers",
                              "text" : "kafka_headers",
                              "type" : "String"
                            },
                            {
                              "doc" : "请提供更多的 Azure Event Hubs 标头键值对<br/>这里的键值对将与<code>kafka_headers</code>字段的值合并，然后发送到 Azure Event Hubs。",
                              "refs" : [
                                {
                                  "doc" : "请提供更多的 Kafka 头部键值对<br/>\n这里的键值对将与 <code>kafka_headers</code> 字段的值合并，然后发送到 Kafka。",
                                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "fields" : [
                                    {
                                      "doc" : "Kafka 头部的键。支持格式为 ${var} 的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "text" : "kafka_ext_header_key",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "Kafka 头部的值。支持格式为 ${var} 的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "text" : "kafka_ext_header_value",
                                      "type" : "String"
                                    }
                                  ],
                                  "text" : "producer_kafka_ext_headers"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "text" : "kafka_ext_headers",
                              "type" : "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "doc" : "Azure Event Hubs 头部值的编码模式。<br/>\n - None: 仅将二进制值添加到 Azure Event Hubs 头部;<br/>\n - JSON: 仅将 JSON 值添加到 Azure Event Hubs 头部，并在发送前将其编码为 JSON 字符串。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "text" : "kafka_header_value_encode_mode",
                              "type" : "Enum(none,json)",
                              "default" : "none"
                            },
                            {
                              "doc" : "Azure Event Hubs 生产者发现分区数量增加的时间间隔。\n在 Azure Event Hubs 中增加分区数量后，EMQX 将开始根据<code>partition_strategy</code>\n在分发消息时考虑新发现的分区。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "text" : "partition_count_refresh_interval",
                              "type" : "Duration(s)",
                              "default" : "\"60s\""
                            },
                            {
                              "doc" : "限制为给定主题产生数据的分区数量。\n特殊值 all_partitions 用于利用主题的所有分区。\n设置的值大于分区总数时无效。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-partitions_limit",
                              "text" : "partitions_limit",
                              "type" : "OneOf(String(\"all_partitions\"),Integer(1..+inf))",
                              "default" : "all_partitions"
                            },
                            {
                              "doc" : "Azure Event Hubs 生产者在接收到 Azure Event Hubs 的确认之前，每个分区允许发送的批次的最大数量。较高的值通常意味着更好的吞吐量。然而，当这个值大于1时，可能会有消息重新排序的风险。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-max_inflight",
                              "text" : "max_inflight",
                              "type" : "Integer(1..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "配置生产者消息缓冲区。\n\n告诉 Azure Event Hubs 生产者，在 EMQX 需要发送的消息多于 Azure Event Hubs 能够处理的消息时，或者 Azure Event Hubs 宕机时，如何缓冲消息。",
                              "refs" : [
                                {
                                  "doc" : "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "fields" : [
                                    {
                                      "doc" : "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "text" : "mode",
                                      "type" : "Enum(memory,disk,hybrid)",
                                      "default" : "memory"
                                    },
                                    {
                                      "doc" : "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "text" : "per_partition_limit",
                                      "type" : "Bytesize",
                                      "default" : "\"2GB\""
                                    },
                                    {
                                      "doc" : "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "text" : "segment_bytes",
                                      "type" : "Bytesize",
                                      "default" : "\"100MB\""
                                    },
                                    {
                                      "doc" : "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "text" : "memory_overload_protection",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    }
                                  ],
                                  "text" : "producer_buffer"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer",
                              "text" : "buffer",
                              "type" : "Struct(producer_buffer)"
                            },
                            {
                              "doc" : "查询模式。可选'sync/async'，默认为'async'。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(async,sync)",
                              "default" : "async"
                            },
                            {
                              "doc" : "此参数定义同步查询的超时限制。仅当桥接查询模式配置为 'sync' 时适用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "text" : "sync_query_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "producer_kafka_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters",
                      "aliases" : [
                        "kafka"
                      ],
                      "text" : "parameters",
                      "type" : "Struct(producer_kafka_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts-S-resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "启用 (是) 或 停用 (否) 该动作。",
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "text" : "actions"
                }
              ],
              "hash" : "V-actions-S-actions-azure_event_hub_producer",
              "text" : "azure_event_hub_producer",
              "type" : "Map($name->Struct(actions))"
            },
            {
              "doc" : "Cassandra Action Config",
              "refs" : [
                {
                  "doc" : "动作配置。",
                  "hash" : "T-actions-S-actions-cassandra-S-cassandra_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "动作的具体配置",
                      "refs" : [
                        {
                          "doc" : "动作的具体配置",
                          "hash" : "T-actions-S-actions-cassandra-S-cassandra_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "CQL 模板<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-parameters-S-action_parameters-cql",
                              "text" : "cql",
                              "type" : "String",
                              "default" : "\"insert into mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic},  ${qos}, ${payload}, ${timestamp})\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "cassandra_action"
                }
              ],
              "hash" : "V-actions-S-actions-cassandra",
              "text" : "cassandra",
              "type" : "Map($name->Struct(cassandra_action))"
            },
            {
              "doc" : "ClickHouse Action Config",
              "refs" : [
                {
                  "doc" : "动作配置。",
                  "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对动作的详细配置。",
                      "refs" : [
                        {
                          "doc" : "针对动作的详细配置。",
                          "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "可以使用 ${field} 占位符来引用消息与客户端上下文中的变量，请确保对应字段存在且数据格式符合预期。此处不支持 [SQL 预处理](https://docs.emqx.com/zh/enterprise/v5.0/data-integration/data-bridges.html#sql-预处理)。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-parameters-S-action_parameters-sql",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"INSERT INTO messages(data, arrived) VALUES ('${payload}', ${timestamp})\""
                            },
                            {
                              "doc" : "默认为逗号 ','，适用于 VALUE 格式。您也可以使用其他分隔符， 请参考 [INSERT INTO 语句](https://clickhouse.com/docs/en/sql-reference/statements/insert-into)。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-parameters-S-action_parameters-batch_value_separator",
                              "text" : "batch_value_separator",
                              "type" : "String",
                              "default" : "\", \""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "clickhouse_action"
                }
              ],
              "hash" : "V-actions-S-actions-clickhouse",
              "text" : "clickhouse",
              "type" : "Map($name->Struct(clickhouse_action))"
            },
            {
              "doc" : "Confluent Actions Config",
              "refs" : [
                {
                  "doc" : "动作的配置。",
                  "hash" : "T-actions-S-actions-confluent_producer-S-actions",
                  "fields" : [
                    {
                      "doc" : "将 MQTT 主题或主题过滤器作为数据源（动作输入）。如果使用规则动作作为数据源，则应将此配置保留为空，否则消息将在 Confluent 中重复。",
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "Confluent 生产者配置。",
                      "refs" : [
                        {
                          "doc" : "Confluent 生产者配置。",
                          "hash" : "T-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts",
                          "fields" : [
                            {
                              "doc" : "事件中心名称",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "呈现 Confluent 消息的模版。",
                              "refs" : [
                                {
                                  "doc" : "呈现 Confluent 消息的模版。",
                                  "hash" : "T-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "fields" : [
                                    {
                                      "doc" : "用于呈现 Confluent 消息键的模版。如果模板呈现为空值（即在规则引擎上下文中没有此类数据字段），则使用 Confluent 的 NULL（而不是空字符串）。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "text" : "key",
                                      "type" : "String",
                                      "default" : "\"${.clientid}\""
                                    },
                                    {
                                      "doc" : "用于呈现 Confluent 消息键的模版。如果模板呈现为空值（即在规则引擎上下文中没有此类数据字段），则使用 Confluent 的 NULL（而不是空字符串）。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "text" : "value",
                                      "type" : "String",
                                      "default" : "\"${.}\""
                                    }
                                  ],
                                  "text" : "kafka_message"
                                }
                              ],
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-message",
                              "text" : "message",
                              "type" : "Struct(kafka_message)"
                            },
                            {
                              "doc" : "最大 Confluent 消息批量字节数。大多数 Kafka 环境的默认最低值是 1 MB，EMQX 的默认值比 1 MB 更小是因为需要补偿 Kafka 消息编码所需要的额外字节（尤其是当每条消息都很小的情况下）。当单个消息的大小超过该限制时，它仍然会被发送，（相当于该批量中只有单个消息）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"896KB\""
                            },
                            {
                              "doc" : "压缩方法。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-compression",
                              "text" : "compression",
                              "type" : "Enum(no_compression,snappy,gzip)",
                              "default" : "no_compression"
                            },
                            {
                              "doc" : "分区策略是用来指导生产者如何将消息分配到 Confluent 的各个分区。\n\n<code>random</code>: 为每条消息随机选择一个分区。\n<code>key_dispatch</code>: 根据 Confluent 消息键的哈希值将消息分配到分区，确保拥有相同键的消息能够一致地被分配到特定分区。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-partition_strategy",
                              "text" : "partition_strategy",
                              "type" : "Enum(random,key_dispatch)",
                              "default" : "random"
                            },
                            {
                              "doc" : "Confluent 分区领导者的确认标准。它确定了在向 EMQX Confluent 生产者回送确认前，需要从追随者分区获得的确认等级。\n\n<code>all_isr</code>：要求所有同步副本进行确认。\n<code>leader_only</code>：仅要求分区领导者的确认。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-required_acks",
                              "text" : "required_acks",
                              "type" : "Enum(all_isr,leader_only,none)",
                              "default" : "all_isr"
                            },
                            {
                              "doc" : "提供用作 Confluent 头部的占位符<br/>\n例如<code>${pub_props}</code><br/>\n注意，占位符的值必须是对象：\n<code>{\"foo\": \"bar\"}</code>\n或键值对数组：\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code><br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_headers",
                              "text" : "kafka_headers",
                              "type" : "String"
                            },
                            {
                              "doc" : "请提供更多的 Confluent 头部键值对<br/>\n这里的键值对将与<code>kafka_headers</code>字段的值结合后发送给 Confluent。",
                              "refs" : [
                                {
                                  "doc" : "请提供更多的 Kafka 头部键值对<br/>\n这里的键值对将与 <code>kafka_headers</code> 字段的值合并，然后发送到 Kafka。",
                                  "hash" : "T-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "fields" : [
                                    {
                                      "doc" : "Kafka 头部的键。支持格式为 ${var} 的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "text" : "kafka_ext_header_key",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "Kafka 头部的值。支持格式为 ${var} 的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "text" : "kafka_ext_header_value",
                                      "type" : "String"
                                    }
                                  ],
                                  "text" : "producer_kafka_ext_headers"
                                }
                              ],
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "text" : "kafka_ext_headers",
                              "type" : "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "doc" : "Confluent 头部值编码模式<br/>\n - None：仅向 Confluent 头部添加二进制值；<br/>\n - JSON：仅向 Confluent 头部添加 JSON 值，并在发送前将其编码为 JSON 字符串。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "text" : "kafka_header_value_encode_mode",
                              "type" : "Enum(none,json)",
                              "default" : "none"
                            },
                            {
                              "doc" : "Confluent 生产者发现分区数量增加的时间间隔。\n在 Confluent 中增加分区数量后，EMQX 将开始根据<code>partition_strategy</code>\n在分发消息时考虑新发现的分区。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "text" : "partition_count_refresh_interval",
                              "type" : "Duration(s)",
                              "default" : "\"60s\""
                            },
                            {
                              "doc" : "限制为给定主题产生数据的分区数量。\n特殊值 all_partitions 用于利用主题的所有分区。\n设置的值如果大于分区总数则无效。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-partitions_limit",
                              "text" : "partitions_limit",
                              "type" : "OneOf(String(\"all_partitions\"),Integer(1..+inf))",
                              "default" : "all_partitions"
                            },
                            {
                              "doc" : "Confluent 生产者在接收到 Confluent 的确认之前，每个分区允许发送的批次的最大数量。较高的值通常意味着更好的吞吐量。然而，当这个值大于1时，可能会有消息重新排序的风险。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-max_inflight",
                              "text" : "max_inflight",
                              "type" : "Integer(1..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "配置生产者消息缓冲区。\n\n在 EMQX 有更多消息需要发送而 Confluent 跟不上时，或者 Confluent 宕机时，告诉 Confluent 生产者如何缓冲消息。",
                              "refs" : [
                                {
                                  "doc" : "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                                  "hash" : "T-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "fields" : [
                                    {
                                      "doc" : "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "text" : "mode",
                                      "type" : "Enum(memory,disk,hybrid)",
                                      "default" : "memory"
                                    },
                                    {
                                      "doc" : "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "text" : "per_partition_limit",
                                      "type" : "Bytesize",
                                      "default" : "\"2GB\""
                                    },
                                    {
                                      "doc" : "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "text" : "segment_bytes",
                                      "type" : "Bytesize",
                                      "default" : "\"100MB\""
                                    },
                                    {
                                      "doc" : "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "text" : "memory_overload_protection",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    }
                                  ],
                                  "text" : "producer_buffer"
                                }
                              ],
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer",
                              "text" : "buffer",
                              "type" : "Struct(producer_buffer)"
                            },
                            {
                              "doc" : "查询模式。可选'sync/async'，默认'async'。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(async,sync)",
                              "default" : "async"
                            },
                            {
                              "doc" : "此参数定义同步查询的超时限制。仅在动作查询模式配置为'sync'时适用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "text" : "sync_query_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "producer_kafka_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters",
                      "aliases" : [
                        "kafka"
                      ],
                      "text" : "parameters",
                      "type" : "Struct(producer_kafka_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-confluent_producer-S-actions-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-resource_opts-S-resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "text" : "actions"
                }
              ],
              "hash" : "V-actions-S-actions-confluent_producer",
              "text" : "confluent_producer",
              "type" : "Map($name->Struct(actions))"
            },
            {
              "doc" : "DynamoDB Action Config",
              "refs" : [
                {
                  "doc" : "DynamoDB 动作的配置。",
                  "hash" : "T-actions-S-actions-dynamo-S-dynamo_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对动作的详细配置。",
                      "refs" : [
                        {
                          "doc" : "针对动作的详细配置。",
                          "hash" : "T-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "模板, 默认为空，为空时将会将整个消息存入数据库<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-template",
                              "text" : "template",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "doc" : "DynamoDB Hash Key",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-hash_key",
                              "text" : "hash_key",
                              "type" : "String"
                            },
                            {
                              "doc" : "DynamoDB Range Key",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-range_key",
                              "text" : "range_key",
                              "type" : "String"
                            },
                            {
                              "doc" : "DynamoDB 的表。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-table",
                              "text" : "table",
                              "type" : "String"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "dynamo_action"
                }
              ],
              "hash" : "V-actions-S-actions-dynamo",
              "text" : "dynamo",
              "type" : "Map($name->Struct(dynamo_action))"
            },
            {
              "doc" : "Elasticsearch 动作",
              "refs" : [
                {
                  "doc" : "ElasticSearch 动作配置项",
                  "hash" : "T-actions-S-actions-elasticsearch-S-action_config",
                  "fields" : [
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "ElasticSearch 动作参数",
                      "refs" : [
                        {
                          "doc" : "将一个 JSON 文件添加到指定的索引中，并使其可搜索。\n如果目标是一个索引并且文件已经存在，\n请求会更新该文件并增加其版本。",
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create",
                          "fields" : [
                            {
                              "doc" : "create",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-action",
                              "text" : "action",
                              "type" : "String(\"create\")"
                            },
                            {
                              "doc" : "执行操作的索引名称或索引别名。\n此参数是必需的。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-index",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "doc" : "文档 ID。如果没有指定 ID，将自动生成。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-id",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "doc" : "JSON 文档模板，如果留空则为包含所有可用字段的 JSON 文本，如 clientid、topic、payload 等。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-doc",
                              "text" : "doc",
                              "type" : "String"
                            },
                            {
                              "doc" : "用于将操作路由到特定分片的自定义值。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-routing",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "doc" : "如果为 true, 则请求的操作必须针对一个索引别名。默认为 false。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-require_alias",
                              "text" : "require_alias",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "如果指定 _id 的文档已经存在（冲突），将设置为 false，操作将失败。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-overwrite",
                              "text" : "overwrite",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "如果发送请求时出错，最大的重试次数。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "text" : "action_create"
                        },
                        {
                          "doc" : "从指定的索引中删除一个 JSON 文件。",
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete",
                          "fields" : [
                            {
                              "doc" : "delete",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-action",
                              "text" : "action",
                              "type" : "String(\"delete\")"
                            },
                            {
                              "doc" : "执行操作的索引名称或索引别名。\n此参数是必需的。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-index",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "doc" : "文档 ID。如果没有指定 ID，将自动生成。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-id",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "doc" : "用于将操作路由到特定分片的自定义值。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-routing",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "doc" : "如果发送请求时出错，最大的重试次数。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "text" : "action_delete"
                        },
                        {
                          "doc" : "使用指定的文件更新一个文件。",
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update",
                          "fields" : [
                            {
                              "doc" : "update",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-action",
                              "text" : "action",
                              "type" : "String(\"update\")"
                            },
                            {
                              "doc" : "执行操作的索引名称或索引别名。\n此参数是必需的。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-index",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "doc" : "文档 ID。如果没有指定 ID，将自动生成。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-id",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "doc" : "JSON 文档模板，如果留空则为包含所有可用字段的 JSON 文本，如 clientid、topic、payload 等。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-doc",
                              "text" : "doc",
                              "type" : "String"
                            },
                            {
                              "doc" : "你可以将 doc_as_upsert 设置为 true，使用 doc 的内容作为 upsert 值，而不是发送一个不完整的文件加上一个 upsert 文件。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-doc_as_upsert",
                              "text" : "doc_as_upsert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "用于将操作路由到特定分片的自定义值。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-routing",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "doc" : "如果为 true, 则请求的操作必须针对一个索引别名。默认为 false。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-require_alias",
                              "text" : "require_alias",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "如果发送请求时出错，最大的重试次数。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "text" : "action_update"
                        }
                      ],
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(action_create),Struct(action_delete),Struct(action_update))"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源选项。",
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-elasticsearch",
              "text" : "elasticsearch",
              "type" : "Map($action_name->Struct(action_config))"
            },
            {
              "doc" : "GCP PubSub Producer Action Config",
              "refs" : [
                {
                  "doc" : "动作的配置",
                  "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "动作的配置",
                      "refs" : [
                        {
                          "doc" : "动作的具体配置。",
                          "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "格式化出站消息属性的模板。未定义的值将被呈现为空字符串值。属性映射中的空键将被移除。",
                              "refs" : [
                                {
                                  "doc" : "键值对",
                                  "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-attributes_template-S-key_value_pair",
                                  "fields" : [
                                    {
                                      "doc" : "键<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-attributes_template-S-key_value_pair-key",
                                      "text" : "key",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "值<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-attributes_template-S-key_value_pair-value",
                                      "text" : "value",
                                      "type" : "String"
                                    }
                                  ],
                                  "text" : "key_value_pair"
                                }
                              ],
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-attributes_template",
                              "text" : "attributes_template",
                              "type" : "Array(Struct(key_value_pair))",
                              "default" : "[]"
                            },
                            {
                              "doc" : "格式化出站消息排序键的模板。未定义的值将被呈现为空字符串值。如果此值为空，则不会将其添加到消息中。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-ordering_key_template",
                              "text" : "ordering_key_template",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "doc" : "用于格式化外发信息的模板。 如果未定义，将以 JSON 格式发送所有可用的上下文。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-payload_template",
                              "text" : "payload_template",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "doc" : "要发布消息的 GCP PubSub 主题。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-pubsub_topic",
                              "text" : "pubsub_topic",
                              "type" : "String"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "producer_action"
                }
              ],
              "hash" : "V-actions-S-actions-gcp_pubsub_producer",
              "text" : "gcp_pubsub_producer",
              "type" : "Map($name->Struct(producer_action))"
            },
            {
              "doc" : "GreptimeDB Action Config",
              "refs" : [
                {
                  "doc" : "与一个 GreptimeDB 连接器交互的动作。",
                  "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对这个动作类型的更多参数。",
                      "refs" : [
                        {
                          "doc" : "针对这个动作类型的更多参数。",
                          "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "GreptimeDB gRPC 协议写入数据点的配置。写入语法是一种文本格式，提供了数据点的测量、标签集、字段集和时间戳，并支持占位符，与 InfluxDB 行协议相同。\n参见 [InfluxDB 2.3 行协议](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 和\n[GreptimeDB 1.8 行协议](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) <br/>\n简而言之:<br/>\n```\n<measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]\n```\n请注意，整数值的占位符必须用后缀 `i` 注释。例如 `${payload.int_value}i`。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-parameters-S-action_parameters-write_syntax",
                              "text" : "write_syntax",
                              "type" : "String"
                            },
                            {
                              "doc" : "GreptimeDB 的时间精度。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-parameters-S-action_parameters-precision",
                              "text" : "precision",
                              "type" : "Enum(ns,us,ms,s)",
                              "default" : "ms"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "greptimedb_action"
                }
              ],
              "hash" : "V-actions-S-actions-greptimedb",
              "text" : "greptimedb",
              "type" : "Map($name->Struct(greptimedb_action))"
            },
            {
              "doc" : "HStreamDB Action Config",
              "refs" : [
                {
                  "doc" : "HStreamDB 动作的配置。",
                  "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对动作的详细配置。",
                      "refs" : [
                        {
                          "doc" : "针对动作的详细配置。",
                          "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "HStreamDB 流名称",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-stream",
                              "text" : "stream",
                              "type" : "String"
                            },
                            {
                              "doc" : "HStreamDB 分区键。支持占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-partition_key",
                              "text" : "partition_key",
                              "type" : "String"
                            },
                            {
                              "doc" : "将 gRPC 调用刷新到 HStreamDB 服务器的时间间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-grpc_flush_timeout",
                              "text" : "grpc_flush_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "doc" : "要转发到 HStreamDB 的 HStream 记录模板。支持占位符。<br>\n注意：当您使用'原始记录'模板（这意味着数据不是有效的 JSON）时，您应该在 HStream 中使用 'read' 或 'subscription' 来获取数据。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-record_template",
                              "text" : "record_template",
                              "type" : "String",
                              "default" : "\"${payload}\""
                            },
                            {
                              "doc" : "Record 聚合池的大小。更大的聚合池可以提升并行处理能力，但可能会因为批处理变小而导致效率降低。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-aggregation_pool_size",
                              "text" : "aggregation_pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "doc" : "刷新队列中未确认批次的最大数量。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-max_batches",
                              "text" : "max_batches",
                              "type" : "Integer(1..+inf)",
                              "default" : "500"
                            },
                            {
                              "doc" : "写入池大小。更大的池规模可能增加并行化和并发写入操作，可能提升吞吐量。但需权衡内存消耗和资源竞争。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-writer_pool_size",
                              "text" : "writer_pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "doc" : "单个请求中可以发送的最大插入数据子句数量。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "两次连续（批处理）请求之间允许的最大间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-batch_interval",
                              "text" : "batch_interval",
                              "type" : "Duration",
                              "default" : "\"500ms\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "hstreamdb_action"
                }
              ],
              "hash" : "V-actions-S-actions-hstreamdb",
              "text" : "hstreamdb",
              "type" : "Map($name->Struct(hstreamdb_action))"
            },
            {
              "doc" : "InfluxDB Action Config",
              "refs" : [
                {
                  "doc" : "与 InfluxDB 连接器交互的动作",
                  "hash" : "T-actions-S-actions-influxdb-S-influxdb_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "此动作类型特定的额外参数",
                      "refs" : [
                        {
                          "doc" : "此动作类型特定的额外参数",
                          "hash" : "T-actions-S-actions-influxdb-S-influxdb_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符<br/>\n参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及\n[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) <br/>\nTLDR: <br/>\n\n```\n<measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]\n```\n注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-parameters-S-action_parameters-write_syntax",
                              "text" : "write_syntax",
                              "type" : "String"
                            },
                            {
                              "doc" : "InfluxDB 时间精度。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-parameters-S-action_parameters-precision",
                              "text" : "precision",
                              "type" : "Enum(ns,us,ms,s)",
                              "default" : "ms"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "influxdb_action"
                }
              ],
              "hash" : "V-actions-S-actions-influxdb",
              "text" : "influxdb",
              "type" : "Map($name->Struct(influxdb_action))"
            },
            {
              "doc" : "IoTDB Action Config",
              "refs" : [
                {
                  "doc" : "IoTDB 数据桥接配置",
                  "hash" : "T-actions-S-actions-iotdb-S-action_config",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "IoTDB 动作参数",
                      "refs" : [
                        {
                          "doc" : "IoTDB 动作参数",
                          "hash" : "T-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "是否对齐时间序列。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-is_aligned",
                              "text" : "is_aligned",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "IoTDB 的设备 ID（DeviceID）。可以使用一个占位符。如果留空则 MQTT 消息体中必须有一个 `device_id` 字段，\n或者 EMQX 规则引擎的 SQL 必须输出一个 `device_id` 字段。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-device_id",
                              "text" : "device_id",
                              "type" : "String"
                            },
                            {
                              "doc" : "IoTDB 动作参数数据",
                              "refs" : [
                                {
                                  "doc" : "IoTDB 动作参数数据",
                                  "hash" : "T-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data",
                                  "fields" : [
                                    {
                                      "doc" : "时间戳。支持格式为 ${var} 的占位符，最终值可以是：</br>\n- now: 使用载荷中包含的 `now_ms` 作为时间戳\n- now_ms: 同上\n- now_us: 使用载荷中包含的 `now_us` 作为时间戳\n- now_ns: 使用载荷中包含的 `now_ns` 作为时间戳\n- 其他: 直接使用值作为时间戳。",
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-timestamp",
                                      "text" : "timestamp",
                                      "type" : "OneOf(Enum(now,now_ms,now_ns,now_us),String)",
                                      "default" : "now"
                                    },
                                    {
                                      "doc" : "也称 Measurement，支持使用 ${var} 格式的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-measurement",
                                      "text" : "measurement",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "数据类型，可以是枚举或字符串。</br>支持格式为 ${var} 的字符串占位符，最终值可以是：</br>\n- TEXT\n- BOOLEAN\n- INT32\n- INT64\n- FLOAT\n- DOUBLE",
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-data_type",
                                      "text" : "data_type",
                                      "type" : "OneOf(Enum(text,boolean,int32,int64,float,double),String)"
                                    },
                                    {
                                      "doc" : "值。支持格式为 ${var} 的占位符<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-value",
                                      "text" : "value",
                                      "type" : "String"
                                    }
                                  ],
                                  "text" : "action_parameters_data"
                                }
                              ],
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data",
                              "text" : "data",
                              "type" : "Array(Struct(action_parameters_data))",
                              "default" : "[]"
                            },
                            {
                              "doc" : "如果发送请求时出错，最大的重试次数。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-max_retries",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "Action Resource Options",
                          "hash" : "T-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-iotdb",
              "text" : "iotdb",
              "type" : "Map($name->Struct(action_config))"
            },
            {
              "doc" : "Kafka Producer Action Config",
              "refs" : [
                {
                  "doc" : "Kafka 生产者动作",
                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action",
                  "fields" : [
                    {
                      "doc" : "启用（true）或停用该（false）Kafka 数据桥接。",
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "MQTT 主题数据源由桥接指定，或留空由规则动作指定。",
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "Kafka 生产者参数。",
                      "refs" : [
                        {
                          "doc" : "Kafka 生产者参数。",
                          "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts",
                          "fields" : [
                            {
                              "doc" : "Kafka 主题名称",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "用于生成 Kafka 消息的模版。",
                              "refs" : [
                                {
                                  "doc" : "用于生成 Kafka 消息的模版。",
                                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "fields" : [
                                    {
                                      "doc" : "生成 Kafka 消息 Key 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code> ，而非空字符串。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "text" : "key",
                                      "type" : "String",
                                      "default" : "\"${.clientid}\""
                                    },
                                    {
                                      "doc" : "生成 Kafka 消息 Value 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code>，而非空字符串。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "text" : "value",
                                      "type" : "String",
                                      "default" : "\"${.}\""
                                    },
                                    {
                                      "doc" : "生成 Kafka 消息时间戳的模版。该时间必需是一个整型数值（可以是字符串格式）例如 <code>1661326462115</code> 或 <code>'1661326462115'</code>。当所需的输入字段不存在，或不是一个整型时，则会使用当前系统时间。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-timestamp",
                                      "text" : "timestamp",
                                      "type" : "String",
                                      "default" : "\"${.timestamp}\""
                                    }
                                  ],
                                  "text" : "kafka_message"
                                }
                              ],
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message",
                              "text" : "message",
                              "type" : "Struct(kafka_message)"
                            },
                            {
                              "doc" : "最大消息批量字节数。大多数 Kafka 环境的默认最低值是 1 MB，EMQX 的默认值比 1 MB 更小是因为需要补偿 Kafka 消息编码所需要的额外字节（尤其是当每条消息都很小的情况下）。当单个消息的大小超过该限制时，它仍然会被发送，（相当于该批量中只有单个消息）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"896KB\""
                            },
                            {
                              "doc" : "压缩方法。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-compression",
                              "text" : "compression",
                              "type" : "Enum(no_compression,snappy,gzip)",
                              "default" : "no_compression"
                            },
                            {
                              "doc" : "设置消息发布时应该如何选择 Kafka 分区。\n\n<code>random</code>: 为每个消息随机选择一个分区。\n<code>key_dispatch</code>: Hash Kafka message key to a partition number",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-partition_strategy",
                              "text" : "partition_strategy",
                              "type" : "Enum(random,key_dispatch)",
                              "default" : "random"
                            },
                            {
                              "doc" : "设置 Kafka leader 在返回给 EMQX 确认之前需要等待多少个 follower 的确认。\n\n<code>all_isr</code>: 需要所有的在线复制者都确认。\n<code>leader_only</code>: 仅需要分区 leader 确认。\n<code>none</code>: 无需 Kafka 回复任何确认。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-required_acks",
                              "text" : "required_acks",
                              "type" : "Enum(all_isr,leader_only,none)",
                              "default" : "all_isr"
                            },
                            {
                              "doc" : "请提供要用作 Kafka 头部的占位符<br/>\n例如：<code>${pub_props}</code><br/>\n请注意，占位符的值必须是对象形式的：<code>{\"foo\": \"bar\"}</code>\n或者是键值对的数组形式：<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code>。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_headers",
                              "text" : "kafka_headers",
                              "type" : "String"
                            },
                            {
                              "doc" : "请提供更多的 Kafka 头部键值对<br/>\n这里的键值对将与 <code>kafka_headers</code> 字段的值合并，然后发送到 Kafka。",
                              "refs" : [
                                {
                                  "doc" : "请提供更多的 Kafka 头部键值对<br/>\n这里的键值对将与 <code>kafka_headers</code> 字段的值合并，然后发送到 Kafka。",
                                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "fields" : [
                                    {
                                      "doc" : "Kafka 头部的键。支持格式为 ${var} 的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "text" : "kafka_ext_header_key",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "Kafka 头部的值。支持格式为 ${var} 的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "text" : "kafka_ext_header_value",
                                      "type" : "String"
                                    }
                                  ],
                                  "text" : "producer_kafka_ext_headers"
                                }
                              ],
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "text" : "kafka_ext_headers",
                              "type" : "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "doc" : "Kafka 头部值编码模式<br/>\n - None: 仅将二进制值添加到 Kafka 头部；<br/>\n - JSON: 仅将 JSON 值添加到 Kafka 头部，并在发送前对其进行 JSON 字符串编码。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "text" : "kafka_header_value_encode_mode",
                              "type" : "Enum(none,json)",
                              "default" : "none"
                            },
                            {
                              "doc" : "配置 Kafka 刷新分区数量的时间间隔。\nEMQX 发现 Kafka 分区数量增加后，会开始按 <code>partition_strategy<code> 配置，把消息发送到新的分区中。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "text" : "partition_count_refresh_interval",
                              "type" : "Duration(s)",
                              "default" : "\"60s\""
                            },
                            {
                              "doc" : "限制为给定主题生产数据的分区数量。\n特殊值 all_partitions 用于利用该主题的所有分区。\n将此设置为大于分区总数的值将不会产生任何效果。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-partitions_limit",
                              "text" : "partitions_limit",
                              "type" : "OneOf(String(\"all_partitions\"),Integer(1..+inf))",
                              "default" : "all_partitions"
                            },
                            {
                              "doc" : "设置 Kafka 生产者（每个分区一个）在收到 Kafka 的确认前最多发送多少个请求（批量）。调大这个值通常可以增加吞吐量，但是，当该值设置大于 1 时存在消息乱序的风险。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-max_inflight",
                              "text" : "max_inflight",
                              "type" : "Integer(1..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                              "refs" : [
                                {
                                  "doc" : "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "fields" : [
                                    {
                                      "doc" : "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "text" : "mode",
                                      "type" : "Enum(memory,disk,hybrid)",
                                      "default" : "memory"
                                    },
                                    {
                                      "doc" : "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "text" : "per_partition_limit",
                                      "type" : "Bytesize",
                                      "default" : "\"2GB\""
                                    },
                                    {
                                      "doc" : "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "text" : "segment_bytes",
                                      "type" : "Bytesize",
                                      "default" : "\"100MB\""
                                    },
                                    {
                                      "doc" : "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "text" : "memory_overload_protection",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    }
                                  ],
                                  "text" : "producer_buffer"
                                }
                              ],
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer",
                              "text" : "buffer",
                              "type" : "Struct(producer_buffer)"
                            },
                            {
                              "doc" : "查询模式。可选 'sync/async'，默认 'async'。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(async,sync)",
                              "default" : "async"
                            },
                            {
                              "doc" : "该参数定义同步查询的超时限制。仅当桥接查询模式配置为'sync'时才适用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "text" : "sync_query_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "text" : "producer_kafka_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters",
                      "aliases" : [
                        "kafka"
                      ],
                      "text" : "parameters",
                      "type" : "Struct(producer_kafka_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts-S-resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "kafka_producer_action"
                }
              ],
              "hash" : "V-actions-S-actions-kafka_producer",
              "text" : "kafka_producer",
              "type" : "Map($name->Struct(kafka_producer_action))"
            },
            {
              "doc" : "Kinesis Action Config",
              "refs" : [
                {
                  "doc" : "Kinesis 动作的配置。",
                  "hash" : "T-actions-S-actions-kinesis-S-kinesis_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对动作的详细配置。",
                      "refs" : [
                        {
                          "doc" : "针对动作的详细配置。",
                          "hash" : "T-actions-S-actions-kinesis-S-kinesis_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "用于格式化传出消息的模板。如果未定义，将以 JSON 格式发送所有可用的上下文。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-parameters-S-action_parameters-payload_template",
                              "text" : "payload_template",
                              "type" : "String",
                              "default" : "\"${.}\""
                            },
                            {
                              "doc" : "消息将要被发布到的 Amazon Kinesis 流。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-parameters-S-action_parameters-stream_name",
                              "text" : "stream_name",
                              "type" : "String"
                            },
                            {
                              "doc" : "与发布消息关联的 Amazon Kinesis 分区键。支持格式为 ${var} 的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-parameters-S-action_parameters-partition_key",
                              "text" : "partition_key",
                              "type" : "String"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..500)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "kinesis_action"
                }
              ],
              "hash" : "V-actions-S-actions-kinesis",
              "text" : "kinesis",
              "type" : "Map($name->Struct(kinesis_action))"
            },
            {
              "doc" : "Matrix Action Config",
              "refs" : [
                {
                  "doc" : "PostgreSQL 动作的配置",
                  "hash" : "T-actions-S-actions-matrix-S-pgsql_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "特定于 PostgreSQL 动作的参数配置",
                      "refs" : [
                        {
                          "doc" : "特定于 PostgreSQL 动作的参数配置",
                          "hash" : "T-actions-S-actions-matrix-S-pgsql_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "SQL 模板<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-parameters-S-action_parameters-sql",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "pgsql_action"
                }
              ],
              "hash" : "V-actions-S-actions-matrix",
              "text" : "matrix",
              "type" : "Map($name->Struct(pgsql_action))"
            },
            {
              "doc" : "OpenTSDB Action Config",
              "refs" : [
                {
                  "doc" : "OpenTSDB 桥接配置",
                  "hash" : "T-actions-S-actions-opents-S-action_config",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-opents-S-action_config-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-opents-S-action_config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-opents-S-action_config-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-opents-S-action_config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-opents-S-action_config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "OpenTSDB 动作参数。",
                      "refs" : [
                        {
                          "doc" : "OpenTSDB 动作参数。",
                          "hash" : "T-actions-S-actions-opents-S-action_config-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "OpenTSDB 动作参数数据。",
                              "refs" : [
                                {
                                  "doc" : "OpenTSDB 动作参数数据。",
                                  "hash" : "T-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data",
                                  "fields" : [
                                    {
                                      "doc" : "秒级或毫秒级时间戳，支持 ${var} 格式的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-timestamp",
                                      "text" : "timestamp",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "度量的名称，应为时间序列数据的唯一标识符，支持 ${var} 格式的占位符。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-metric",
                                      "text" : "metric",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "标签。仅支持使用占位符从变量或标签映射中提取标签。",
                                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-tags",
                                      "text" : "tags",
                                      "type" : "OneOf(Map,String)"
                                    },
                                    {
                                      "doc" : "数据点的值，支持 ${var} 格式的占位符。它代表实际的测量或观察值。",
                                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-value",
                                      "text" : "value",
                                      "type" : "OneOf(Integer,Float,String)"
                                    }
                                  ],
                                  "text" : "action_parameters_data"
                                }
                              ],
                              "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data",
                              "text" : "data",
                              "type" : "Array(Struct(action_parameters_data))",
                              "default" : "[]"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-opents",
              "text" : "opents",
              "type" : "Map($name->Struct(action_config))"
            },
            {
              "doc" : "Oracle Action Config",
              "refs" : [
                {
                  "doc" : "Oracle 动作的配置。",
                  "hash" : "T-actions-S-actions-oracle-S-oracle_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对动作的详细配置。",
                      "refs" : [
                        {
                          "doc" : "针对动作的详细配置。",
                          "hash" : "T-actions-S-actions-oracle-S-oracle_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "SQL 模板。模板字符串可以包含消息元数据和有效载荷字段的占位符。占位符的插入不需要任何检查和特殊格式化，因此必须确保插入的数值格式化和转义正确。模板字符串可以包含占位符模板字符串可以包含消息元数据和有效载荷字段的占位符。这些占位符被插入所以必须确保插入的值的格式正确。因此，确保插入的值格式化和转义正确是非常重要的。模板字符串可以包含占位符模板字符串可以包含消息元数据和有效载荷字段的占位符。这些占位符被插入所以必须确保插入的值的格式正确。确保插入的值被正确地格式化和转义。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-parameters-S-action_parameters-sql",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msgs(msgid, topic, qos, payload) values (${id}, ${topic}, ${qos}, ${payload})\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "oracle_action"
                }
              ],
              "hash" : "V-actions-S-actions-oracle",
              "text" : "oracle",
              "type" : "Map($name->Struct(oracle_action))"
            },
            {
              "doc" : "PostgreSQL Action Config",
              "refs" : [
                {
                  "doc" : "PostgreSQL 动作的配置",
                  "hash" : "T-actions-S-actions-pgsql-S-pgsql_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "特定于 PostgreSQL 动作的参数配置",
                      "refs" : [
                        {
                          "doc" : "特定于 PostgreSQL 动作的参数配置",
                          "hash" : "T-actions-S-actions-pgsql-S-pgsql_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "SQL 模板<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-parameters-S-action_parameters-sql",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "pgsql_action"
                }
              ],
              "hash" : "V-actions-S-actions-pgsql",
              "text" : "pgsql",
              "type" : "Map($name->Struct(pgsql_action))"
            },
            {
              "doc" : "Pulsar Action Config",
              "refs" : [
                {
                  "doc" : "发布消息到 Pulsar 主题。",
                  "hash" : "T-actions-S-actions-pulsar-S-publisher_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对动作的详细配置。",
                      "refs" : [
                        {
                          "doc" : "针对动作的详细配置。",
                          "hash" : "T-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "渲染 Pulsar 消息的模版。",
                              "refs" : [
                                {
                                  "doc" : "渲染 Pulsar 消息的模版。",
                                  "hash" : "T-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-message-S-producer_pulsar_message",
                                  "fields" : [
                                    {
                                      "doc" : "渲染 Pulsar 消息键的模板。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-message-S-producer_pulsar_message-key",
                                      "text" : "key",
                                      "type" : "String",
                                      "default" : "\"${.clientid}\""
                                    },
                                    {
                                      "doc" : "渲染 Pulsar 消息值的模版。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-message-S-producer_pulsar_message-value",
                                      "text" : "value",
                                      "type" : "String",
                                      "default" : "\"${.}\""
                                    }
                                  ],
                                  "text" : "producer_pulsar_message"
                                }
                              ],
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-message",
                              "text" : "message",
                              "type" : "Struct(producer_pulsar_message)"
                            },
                            {
                              "doc" : "同步发布时等待从 Pulsar 接收回执的最大等待时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-sync_timeout",
                              "text" : "sync_timeout",
                              "type" : "Duration",
                              "default" : "\"3s\""
                            },
                            {
                              "doc" : "Pulsar 主题名称",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-pulsar_topic",
                              "text" : "pulsar_topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "在一个 Pulsar 消息中批处理的单个请求的最大数量。",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "压缩方法。",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-compression",
                              "text" : "compression",
                              "type" : "Enum(no_compression,snappy,zlib)",
                              "default" : "no_compression"
                            },
                            {
                              "doc" : "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-send_buffer",
                              "text" : "send_buffer",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "doc" : "当没有连接到 Pulsar 代理时，信息将被缓冲的时间。 较长的时间意味着将使用更多的内存/磁盘",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-retention_period",
                              "text" : "retention_period",
                              "type" : "OneOf(String(\"infinity\"),Duration)",
                              "default" : "infinity"
                            },
                            {
                              "doc" : "最大消息批量字节数。大多数 Pulsar 环境的默认最低值是 5 MB，EMQX 的默认值比 5 MB 更小是因为需要补偿 Pulsar 消息编码所需要的额外字节（尤其是当每条消息都很小的情况下）。当单个消息的大小超过该限制时，它仍然会被发送，（相当于该批量中只有单个消息）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-max_batch_bytes",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"900KB\""
                            },
                            {
                              "doc" : "设置消息发布时应该如何选择 Pulsar 分区。\n\n<code>random</code>: 为每个消息随机选择一个分区。\n<code>roundrobin</code>: 依次为每条信息挑选可用的生产商。\n<code>key_dispatch</code>: 将一批信息中的第一条信息的 Pulsar 信息密钥哈希到一个分区编号。",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-strategy",
                              "text" : "strategy",
                              "type" : "Enum(random,roundrobin,key_dispatch)",
                              "default" : "random"
                            },
                            {
                              "doc" : "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Pulsar 处理能力，或者当 Pulsar 临时下线时，EMQX 内部会将消息缓存起来。",
                              "refs" : [
                                {
                                  "doc" : "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Pulsar 处理能力，或者当 Pulsar 临时下线时，EMQX 内部会将消息缓存起来。",
                                  "hash" : "T-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer",
                                  "fields" : [
                                    {
                                      "doc" : "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer-mode",
                                      "text" : "mode",
                                      "type" : "Enum(memory,disk,hybrid)",
                                      "default" : "memory"
                                    },
                                    {
                                      "doc" : "为每个 Pulsar 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer-per_partition_limit",
                                      "text" : "per_partition_limit",
                                      "type" : "Bytesize",
                                      "default" : "\"2GB\""
                                    },
                                    {
                                      "doc" : "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer-segment_bytes",
                                      "text" : "segment_bytes",
                                      "type" : "Bytesize",
                                      "default" : "\"100MB\""
                                    },
                                    {
                                      "doc" : "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer-memory_overload_protection",
                                      "text" : "memory_overload_protection",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    }
                                  ],
                                  "text" : "producer_buffer"
                                }
                              ],
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer",
                              "text" : "buffer",
                              "type" : "Struct(producer_buffer)"
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源启动相关的选项。",
                          "hash" : "T-actions-S-actions-pulsar-S-publisher_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "publisher_action"
                }
              ],
              "hash" : "V-actions-S-actions-pulsar",
              "text" : "pulsar",
              "type" : "Map($name->Struct(publisher_action))"
            },
            {
              "doc" : "RabbitMQ Action Config",
              "refs" : [
                {
                  "doc" : "动作的配置",
                  "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "动作配置定义了此动作输出如何将消息发送到远程 RabbitMQ 代理。",
                      "refs" : [
                        {
                          "doc" : "动作配置定义了此动作输出如何将消息发送到远程 RabbitMQ 代理。",
                          "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "一个布尔值，指示在使用发布者确认时是否等待 RabbitMQ 确认消息发布。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-wait_for_publish_confirmations",
                              "text" : "wait_for_publish_confirmations",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "等待连接建立的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-publish_confirmation_timeout",
                              "text" : "publish_confirmation_timeout",
                              "type" : "Duration",
                              "default" : "\"30s\""
                            },
                            {
                              "doc" : "消息将被发送到的 RabbitMQ 交换机的名称。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-exchange",
                              "text" : "exchange",
                              "type" : "String"
                            },
                            {
                              "doc" : "用于将消息路由到 RabbitMQ 交换机中正确队列的路由键。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-routing_key",
                              "text" : "routing_key",
                              "type" : "String"
                            },
                            {
                              "doc" : "发布到 RabbitMQ 的消息的传递模式。非持久化传递模式（1）适用于不需要在 RabbitMQ 重启后保持的消息，而持久化传递模式（2）用于必须在 RabbitMQ 重启后仍然存在的消息。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-delivery_mode",
                              "text" : "delivery_mode",
                              "type" : "Enum(non_persistent,persistent)",
                              "default" : "non_persistent"
                            },
                            {
                              "doc" : "在发送消息到 RabbitMQ 之前格式化消息 payload 的模板。例如 ${field1.sub_field} 的模板占位符将被相应字段的值替换。如果留空，整个输入消息将被用作 payload，格式化为 JSON 文本。这种行为等同于将 ${.} 指定为 payload 模板。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-payload_template",
                              "text" : "payload_template",
                              "type" : "String",
                              "default" : "\"\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源启动相关的选项。",
                          "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "publisher_action"
                }
              ],
              "hash" : "V-actions-S-actions-rabbitmq",
              "text" : "rabbitmq",
              "type" : "Map($name->Struct(publisher_action))"
            },
            {
              "doc" : "RocketMQ Action Config",
              "refs" : [
                {
                  "doc" : "RocketMQ 动作的配置。",
                  "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对动作的详细配置。",
                      "refs" : [
                        {
                          "doc" : "针对动作的详细配置。",
                          "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "模板, 默认为空，为空时将会将整个消息转发给 RocketMQ。 <br/>\n            模板可以是任意带有占位符的合法字符串, 例如:<br/>            ${id}, ${username}, ${clientid}, ${timestamp}<br/>\n            {\"id\" : ${id}, \"username\" : ${username}}<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-template",
                              "text" : "template",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "doc" : "Producer key dispatch strategy, the default is `roundrobin`, also supports placeholders, such as: `clientid`, `messageid`, `username`.",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-strategy",
                              "text" : "strategy",
                              "type" : "OneOf(String(\"roundrobin\"),String)",
                              "default" : "roundrobin"
                            },
                            {
                              "doc" : "RocketMQ 主题<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-topic",
                              "text" : "topic",
                              "type" : "String",
                              "default" : "TopicTest"
                            },
                            {
                              "doc" : "RocketMQ 驱动同步调用的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-sync_timeout",
                              "text" : "sync_timeout",
                              "type" : "Duration",
                              "default" : "\"3s\""
                            },
                            {
                              "doc" : "RocketMQ 主题路由更新间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-refresh_interval",
                              "text" : "refresh_interval",
                              "type" : "Duration",
                              "default" : "\"3s\""
                            },
                            {
                              "doc" : "RocketMQ 驱动的套字节发送消息的缓冲区大小<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-send_buffer",
                              "text" : "send_buffer",
                              "type" : "Bytesize",
                              "default" : "\"1024KB\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "rocketmq_action"
                }
              ],
              "hash" : "V-actions-S-actions-rocketmq",
              "text" : "rocketmq",
              "type" : "Map($name->Struct(rocketmq_action))"
            },
            {
              "doc" : "S3 Upload Action Config",
              "refs" : [
                {
                  "doc" : "Action that takes incoming events and uploads them to the S3 API compatible service.",
                  "hash" : "T-actions-S-actions-s3-S-s3",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-s3-S-s3-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-s3-S-s3-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-s3-S-s3-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-s3-S-s3-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-s3-S-s3-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Action that takes incoming events and uploads them to the S3 API compatible service.",
                      "refs" : [
                        {
                          "doc" : "Set of parameters for the aggregated upload action.",
                          "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters",
                          "fields" : [
                            {
                              "doc" : "Enables time-based aggregation of incoming events and uploading them to the S3 service as a single object.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-mode",
                              "text" : "mode",
                              "type" : "String(\"aggregated\")"
                            },
                            {
                              "doc" : "Settings governing the file format of an upload containing aggregated events.",
                              "refs" : [
                                {
                                  "doc" : "Records (events) will be aggregated and uploaded as a CSV file.",
                                  "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container-S-s3_aggregated_container_csv",
                                  "fields" : [
                                    {
                                      "doc" : "Records (events) will be aggregated and uploaded as a CSV file.",
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container-S-s3_aggregated_container_csv-type",
                                      "text" : "type",
                                      "type" : "String(\"csv\")"
                                    },
                                    {
                                      "doc" : "Event fields that will be ordered first as columns in the resulting CSV file.<br/>\nRegardless of this setting, resulting CSV will contain all the fields of aggregated events, but all the columns not explicitly mentioned here will be ordered after the ones listed here in the lexicographical order.",
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container-S-s3_aggregated_container_csv-column_order",
                                      "text" : "column_order",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "s3_aggregated_container_csv"
                                }
                              ],
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container",
                              "text" : "container",
                              "type" : "OneOf(Struct(s3_aggregated_container_csv))",
                              "default" : "{type = csv}"
                            },
                            {
                              "doc" : "Set of parameters governing the aggregation process.",
                              "refs" : [
                                {
                                  "doc" : "Set of parameters governing the aggregation process.",
                                  "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-aggregation-S-s3_aggregation",
                                  "fields" : [
                                    {
                                      "doc" : "Amount of time events will be aggregated in a single object before uploading.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-aggregation-S-s3_aggregation-time_interval",
                                      "text" : "time_interval",
                                      "type" : "Duration(s)",
                                      "default" : "\"30m\""
                                    },
                                    {
                                      "doc" : "Number of records (events) allowed per each aggregated object. Each aggregated upload will contain no more than that number of events, but may contain less.<br/>\nIf event rate is high enough, there obviously may be more than one aggregated upload during the same time interval. These uploads will have different, but consecutive sequence numbers, which will be a part of S3 object key.",
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-aggregation-S-s3_aggregation-max_records",
                                      "text" : "max_records",
                                      "type" : "Integer(1..+inf)",
                                      "default" : "\"100000\""
                                    }
                                  ],
                                  "text" : "s3_aggregation"
                                }
                              ],
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-aggregation",
                              "text" : "aggregation",
                              "type" : "Struct(s3_aggregation)"
                            },
                            {
                              "doc" : "S3 桶的名称。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-bucket",
                              "text" : "bucket",
                              "type" : "String"
                            },
                            {
                              "doc" : "Template for the S3 object key of an aggregated upload.<br/>\nTemplate may contain placeholders for the following variables:\n<ul>\n<li><code>${action}</code>: name of the action (required).</li>\n<li><code>${node}</code>: name of the EMQX node conducting the upload (required).</li>\n<li><code>${datetime.{format}}</code>: date and time when aggregation started, formatted according to the <code>{format}</code> string (required):\n    <ul>\n    <li><code>${datetime.rfc3339utc}</code>: RFC3339-formatted date and time in UTC,</li>\n    <li><code>${datetime.rfc3339}</code>: RFC3339-formatted date and time in local timezone,</li>\n    <li><code>${datetime.unix}</code>: Unix timestamp.</li>\n    </ul>\n</li>\n<li><code>${datetime_until.{format}}</code>: date and time when aggregation ended, with the same formatting options.</li>\n<li><code>${sequence}</code>: sequence number of the aggregated upload within the same time interval (required).</li>\n</ul>\nAll other placeholders are considered invalid. Note that placeholders marked as required will be added as a path suffix to the S3 object key if they are missing from the template.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-key",
                              "text" : "key",
                              "type" : "String"
                            },
                            {
                              "doc" : "上传对象使用的 ACL。",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-acl",
                              "text" : "acl",
                              "type" : "Enum(private,public_read,public_read_write,authenticated_read,bucket_owner_read,bucket_owner_full_control)"
                            },
                            {
                              "doc" : "HTTP headers to include in the S3 object upload request.<br/>\nUseful to specify content type, content encoding, etc. of the S3 object.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-headers",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "doc" : "多部分上传的最小部分大小。<br/>\n上传的数据将在内存中累积，直到达到此大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-min_part_size",
                              "text" : "min_part_size",
                              "type" : "Bytesize",
                              "default" : "\"5mb\""
                            },
                            {
                              "doc" : "多部分上传的最大部分大小。<br/>\nS3 上传器不会尝试上传超过此大小的部分。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-max_part_size",
                              "text" : "max_part_size",
                              "type" : "Bytesize",
                              "default" : "\"5gb\""
                            }
                          ],
                          "text" : "s3_aggregated_upload_parameters"
                        },
                        {
                          "doc" : "Set of parameters for the upload action. Action supports templates in S3 bucket name, object key and object content.",
                          "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters",
                          "fields" : [
                            {
                              "doc" : "S3 桶的名称。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-bucket",
                              "text" : "bucket",
                              "type" : "String"
                            },
                            {
                              "doc" : "S3 对象的键。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-key",
                              "text" : "key",
                              "type" : "String"
                            },
                            {
                              "doc" : "上传对象使用的 ACL。",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-acl",
                              "text" : "acl",
                              "type" : "Enum(private,public_read,public_read_write,authenticated_read,bucket_owner_read,bucket_owner_full_control)"
                            },
                            {
                              "doc" : "HTTP headers to include in the S3 object upload request.<br/>\nUseful to specify content type, content encoding, etc. of the S3 object.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-headers",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "doc" : "Enables uploading of events to the S3 service as separate objects.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-mode",
                              "text" : "mode",
                              "type" : "String(\"direct\")",
                              "default" : "direct"
                            },
                            {
                              "doc" : "Content of the S3 object being uploaded. Supports templates.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-content",
                              "text" : "content",
                              "type" : "String",
                              "default" : "\"${.}\""
                            }
                          ],
                          "text" : "s3_direct_upload_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-s3-S-s3-parameters",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(s3_aggregated_upload_parameters),Struct(s3_direct_upload_parameters))"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"10ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "s3_upload_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-s3-S-s3-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(s3_upload_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "s3"
                }
              ],
              "hash" : "V-actions-S-actions-s3",
              "text" : "s3",
              "type" : "Map($name->Struct(s3))"
            },
            {
              "doc" : "Microsoft SOL Server 动作的配置。",
              "refs" : [
                {
                  "doc" : "Microsoft SOL Server 动作的配置。",
                  "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "针对动作的详细配置。",
                      "refs" : [
                        {
                          "doc" : "针对动作的详细配置。",
                          "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "SQL 模板<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-parameters-S-action_parameters-sql",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload) values ( ${id}, ${topic}, ${qos}, ${payload} )\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "sqlserver_action"
                }
              ],
              "hash" : "V-actions-S-actions-sqlserver",
              "text" : "sqlserver",
              "type" : "Map($name->Struct(sqlserver_action))"
            },
            {
              "doc" : "Syskeeper Forwarder Action Config",
              "refs" : [
                {
                  "doc" : "Syskeeper 动作的配置",
                  "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config",
                  "fields" : [
                    {
                      "doc" : "启用或停用该动作",
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "Syskeeper 动作的参数",
                      "refs" : [
                        {
                          "doc" : "Syskeeper 动作的参数",
                          "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config-parameters-S-parameters",
                          "fields" : [
                            {
                              "doc" : "被转发消息的主题<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-parameters-S-parameters-target_topic",
                              "text" : "target_topic",
                              "type" : "String",
                              "default" : "\"${topic}\""
                            },
                            {
                              "doc" : "被转发消息的服务质量 (QoS)，-1 表示与原始主题相同",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-parameters-S-parameters-target_qos",
                              "text" : "target_qos",
                              "type" : "Integer(0..2)"
                            },
                            {
                              "doc" : "模版<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-parameters-S-parameters-template",
                              "text" : "template",
                              "type" : "String",
                              "default" : "\"${payload}\""
                            }
                          ],
                          "text" : "parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-parameters",
                      "text" : "parameters",
                      "type" : "Struct(parameters)"
                    },
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。如果规则动作用作数据源，则此配置应保留为空，否则消息将在 Syskeeper 中重复。",
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源启动相关的选项。",
                          "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "是否在创建资源后立即启动资源。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在回复资源创建请求前等待资源进入健康状态的时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "Deprecated since 5.1.0.",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text" : "auto_restart_interval",
                              "type" : "OneOf(String(\"infinity\"),Duration)"
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "infinity"
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "Deprecated since v5.0.14.",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text" : "enable_queue",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "creation_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(creation_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "config"
                }
              ],
              "hash" : "V-actions-S-actions-syskeeper_forwarder",
              "text" : "syskeeper_forwarder",
              "type" : "Map($name->Struct(config))"
            },
            {
              "doc" : "TDengine Action Config",
              "refs" : [
                {
                  "doc" : "TDengine 桥接配置",
                  "hash" : "T-actions-S-actions-tdengine-S-action_config",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "TDengine 动作的参数。",
                      "refs" : [
                        {
                          "doc" : "TDengine 动作的参数。",
                          "hash" : "T-actions-S-actions-tdengine-S-action_config-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "数据库名字。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-parameters-S-action_parameters-database",
                              "text" : "database",
                              "type" : "String"
                            },
                            {
                              "doc" : "SQL 模板<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-parameters-S-action_parameters-sql",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(ts, msgid, mqtt_topic, qos, payload, arrived) values (${ts}, '${id}', '${topic}', ${qos}, '${payload}', ${timestamp})\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-tdengine",
              "text" : "tdengine",
              "type" : "Map($name->Struct(action_config))"
            },
            {
              "doc" : "Timescale Action Config",
              "refs" : [
                {
                  "doc" : "PostgreSQL 动作的配置",
                  "hash" : "T-actions-S-actions-timescale-S-pgsql_action",
                  "fields" : [
                    {
                      "doc" : "MQTT 主题或主题过滤器作为数据源（动作输入）。 如果规则动作用作数据源，则应将此配置留空，否则消息将在远程系统中重复。",
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-local_topic",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "特定于 PostgreSQL 动作的参数配置",
                      "refs" : [
                        {
                          "doc" : "特定于 PostgreSQL 动作的参数配置",
                          "hash" : "T-actions-S-actions-timescale-S-pgsql_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "doc" : "SQL 模板<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-parameters-S-action_parameters-sql",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\""
                            }
                          ],
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "doc" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "doc" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-query_mode",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "doc" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "doc" : "最大批量请求大小。如果设为 1，则无批处理。",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-batch_size",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "doc" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-batch_time",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "doc" : "每个缓存 worker 允许使用的最大字节数。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "pgsql_action"
                }
              ],
              "hash" : "V-actions-S-actions-timescale",
              "text" : "timescale",
              "type" : "Map($name->Struct(pgsql_action))"
            }
          ],
          "text" : "actions"
        }
      ],
      "hash" : "V-actions",
      "text" : "actions",
      "type" : "Struct(actions)"
    },
    {
      "refs" : [
        {
          "doc" : "Source 的配置。",
          "hash" : "T-sources-S-sources",
          "fields" : [
            {
              "doc" : "MQTT Subscriber Source Config",
              "refs" : [
                {
                  "doc" : "订阅 Source 的配置。",
                  "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source",
                  "fields" : [
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Source 的具体配置",
                          "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters",
                          "fields" : [
                            {
                              "doc" : "从远程代理接收消息的主题",
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "订阅远程代理时要使用的 QoS 级别.",
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters-qos",
                              "text" : "qos",
                              "type" : "Integer(0..2)",
                              "default" : "1"
                            }
                          ],
                          "text" : "ingress_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters",
                      "text" : "parameters",
                      "type" : "Struct(ingress_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源启动相关的选项。",
                          "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "mqtt_subscriber_source"
                }
              ],
              "hash" : "V-sources-S-sources-mqtt",
              "text" : "mqtt",
              "type" : "Map($name->Struct(mqtt_subscriber_source))"
            },
            {
              "doc" : "GCP PubSub Consumer Source Config",
              "refs" : [
                {
                  "doc" : "Source 配置。",
                  "hash" : "T-sources-S-sources-gcp_pubsub_consumer-S-consumer_source",
                  "fields" : [
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Source 配置。",
                      "refs" : [
                        {
                          "doc" : "针对 Source 的详细配置。",
                          "hash" : "T-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-parameters-S-source_parameters",
                          "fields" : [
                            {
                              "doc" : "要发布消息的 GCP PubSub 主题。",
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-parameters-S-source_parameters-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "从 GCP PubSub 中在一个拉取请求里检索的最大消息数。 实际数量可能小于指定的值。",
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-parameters-S-source_parameters-pull_max_messages",
                              "text" : "pull_max_messages",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            }
                          ],
                          "text" : "source_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-parameters",
                      "text" : "parameters",
                      "type" : "Struct(source_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"30s\""
                            },
                            {
                              "doc" : "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts-S-source_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            }
                          ],
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "consumer_source"
                }
              ],
              "hash" : "V-sources-S-sources-gcp_pubsub_consumer",
              "text" : "gcp_pubsub_consumer",
              "type" : "Map($name->Struct(consumer_source))"
            },
            {
              "doc" : "Kafka Consumer Source Config",
              "refs" : [
                {
                  "doc" : "Source 配置。",
                  "hash" : "T-sources-S-sources-kafka_consumer-S-consumer_source",
                  "fields" : [
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Source 配置。",
                      "refs" : [
                        {
                          "doc" : "针对 Source 的详细配置。",
                          "hash" : "T-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters",
                          "fields" : [
                            {
                              "doc" : "指定从哪个 Kafka 主题消费消息。",
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-topic",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "doc" : "设置每次从 Kafka 拉取数据的字节数。如该配置小于 Kafka 消息的大小，可能会影响消费性能。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-max_batch_bytes",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"896KB\""
                            },
                            {
                              "doc" : "如不存在偏移量历史记录或历史记录失效，消费者应使用哪个偏移量开始消费。",
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-offset_reset_policy",
                              "text" : "offset_reset_policy",
                              "type" : "Enum(latest,earliest)",
                              "default" : "latest"
                            },
                            {
                              "doc" : "指定 Kafka 消费组偏移量提交的时间间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-offset_commit_interval_seconds",
                              "text" : "offset_commit_interval_seconds",
                              "type" : "Duration(s)",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "通过 MQTT 转发之前，如何处理 Kafka 消息的 Key。<code>none</code> 使用 Kafka 消息中的 Key 原始值，不进行编码。  注意：在这种情况下，Key 必须是一个有效的 UTF-8 字符串。\n<code>base64</code> 对收到的密钥或值使用 base-64 编码。",
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-key_encoding_mode",
                              "text" : "key_encoding_mode",
                              "type" : "Enum(none,base64)",
                              "default" : "none"
                            },
                            {
                              "doc" : "通过 MQTT 转发之前，如何处理 Kafka 消息的 Value。<code>none</code> 使用 Kafka 消息中的 Value 原始值，不进行编码。  注意：在这种情况下，Value 必须是一个有效的 UTF-8 字符串。\n<code>base64</code> 对收到的 Value 使用 base-64 编码。",
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-value_encoding_mode",
                              "text" : "value_encoding_mode",
                              "type" : "Enum(none,base64)",
                              "default" : "none"
                            }
                          ],
                          "text" : "source_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters",
                      "text" : "parameters",
                      "type" : "Struct(source_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-sources-S-sources-kafka_consumer-S-consumer_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "consumer_source"
                }
              ],
              "hash" : "V-sources-S-sources-kafka_consumer",
              "text" : "kafka_consumer",
              "type" : "Map($name->Struct(consumer_source))"
            },
            {
              "doc" : "MQTT Subscriber Source Config",
              "refs" : [
                {
                  "doc" : "Source 配置",
                  "hash" : "T-sources-S-sources-rabbitmq-S-subscriber_source",
                  "fields" : [
                    {
                      "doc" : "启用（是）或停用（否）此动作。",
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "由动作指定的连接器名称，用于选择外部资源。",
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-connector",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "doc" : "连接器的标签",
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-tags",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "doc" : "描述性文本。",
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "doc" : "Source 配置定义了此数据输入如何从远程 RabbitMQ 代理接收消息。",
                      "refs" : [
                        {
                          "doc" : "Source 配置定义了此数据输入如何从远程 RabbitMQ 代理接收消息。",
                          "hash" : "T-sources-S-sources-rabbitmq-S-subscriber_source-parameters-S-source_parameters",
                          "fields" : [
                            {
                              "doc" : "RabbitMQ 代理的队列名称。",
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-parameters-S-source_parameters-queue",
                              "text" : "queue",
                              "type" : "String"
                            },
                            {
                              "doc" : "一个布尔值，指示在使用发布者确认时是否等待 RabbitMQ 确认消息发布。",
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-parameters-S-source_parameters-wait_for_publish_confirmations",
                              "text" : "wait_for_publish_confirmations",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在从 RabbitMQ 代理消费消息时是否使用 no_ack 模式。",
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-parameters-S-source_parameters-no_ack",
                              "text" : "no_ack",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "text" : "source_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-parameters",
                      "text" : "parameters",
                      "type" : "Struct(source_parameters)"
                    },
                    {
                      "doc" : "资源相关的选项。",
                      "refs" : [
                        {
                          "doc" : "资源相关的选项。",
                          "hash" : "T-sources-S-sources-rabbitmq-S-subscriber_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "doc" : "健康检查间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "text" : "subscriber_source"
                }
              ],
              "hash" : "V-sources-S-sources-rabbitmq",
              "text" : "rabbitmq",
              "type" : "Map($name->Struct(subscriber_source))"
            }
          ],
          "text" : "sources"
        }
      ],
      "hash" : "V-sources",
      "text" : "sources",
      "type" : "Struct(sources)"
    },
    {
      "refs" : [
        {
          "doc" : "Configuration related to handling `PUBLISH` packets with a `retain` flag set to 1.",
          "hash" : "T-retainer-S-retainer",
          "fields" : [
            {
              "doc" : "是否开启消息保留功能",
              "hash" : "V-retainer-S-retainer-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "消息保留时间。0 代表永久保留<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-retainer-S-retainer-msg_expiry_interval",
              "text" : "msg_expiry_interval",
              "type" : "Duration",
              "default" : "\"0s\""
            },
            {
              "doc" : "消息清理间隔。0 代表不进行清理<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-retainer-S-retainer-msg_clear_interval",
              "text" : "msg_clear_interval",
              "type" : "Duration",
              "default" : "\"0s\""
            },
            {
              "doc" : "消息大小最大值<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
              "hash" : "V-retainer-S-retainer-max_payload_size",
              "text" : "max_payload_size",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "doc" : "当 PUBLISH 消息的保留标志被设置且有效载荷为空时，是否继续发布消息。\n参见：\nhttp://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718038",
              "hash" : "V-retainer-S-retainer-stop_publish_clear_msg",
              "text" : "stop_publish_clear_msg",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "发送保留消息的最大速率",
              "hash" : "V-retainer-S-retainer-delivery_rate",
              "aliases" : [
                "deliver_rate"
              ],
              "text" : "delivery_rate",
              "type" : "String",
              "default" : "\"1000/s\""
            },
            {
              "doc" : "保留消息的存储后端",
              "refs" : [
                {
                  "doc" : "Configuration of the internal database storing retained messages.",
                  "hash" : "T-retainer-S-retainer-backend-S-mnesia_config",
                  "fields" : [
                    {
                      "doc" : "后端类型",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-type",
                      "text" : "type",
                      "type" : "String(\"built_in_database\")",
                      "default" : "built_in_database"
                    },
                    {
                      "doc" : "选择消息是存放在磁盘还是内存中",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-storage_type",
                      "text" : "storage_type",
                      "type" : "Enum(ram,disc)",
                      "default" : "ram"
                    },
                    {
                      "doc" : "消息保留的数量上限。0 表示无限",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-max_retained_messages",
                      "text" : "max_retained_messages",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "doc" : "Retainer index specifications: list of arrays of positive ascending integers. Each array specifies an index. Numbers in an index specification are 1-based word positions in topics. Words from specified positions will be used for indexing.<br/>For example, it is good to have <code>[2, 4]</code> index to optimize <code>+/X/+/Y/...</code> topic wildcard subscriptions.",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-index_specs",
                      "text" : "index_specs",
                      "type" : "Array(Integer)",
                      "default" : "[[1, 2, 3], [1, 3], [2, 3], [3]]"
                    },
                    {
                      "doc" : "启用内置的 Mnesia 后端。",
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    }
                  ],
                  "text" : "mnesia_config"
                }
              ],
              "hash" : "V-retainer-S-retainer-backend",
              "text" : "backend",
              "type" : "Struct(mnesia_config)"
            }
          ],
          "text" : "retainer"
        }
      ],
      "hash" : "V-retainer",
      "text" : "retainer",
      "type" : "Struct(retainer)"
    },
    {
      "refs" : [
        {
          "doc" : "Settings for the delayed module.",
          "hash" : "T-delayed-S-delayed",
          "fields" : [
            {
              "doc" : "是否启用",
              "hash" : "V-delayed-S-delayed-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "doc" : "延迟消息的数量上限(0 代表不限数量)",
              "hash" : "V-delayed-S-delayed-max_delayed_messages",
              "text" : "max_delayed_messages",
              "type" : "Integer",
              "default" : "0"
            }
          ],
          "text" : "delayed"
        }
      ],
      "hash" : "V-delayed",
      "text" : "delayed",
      "type" : "Struct(delayed)"
    },
    {
      "refs" : [
        {
          "doc" : "管理 EMQX 插件。<br/>\n插件可以是 EMQX 安装包中的一部分，也可以是一个独立的安装包。<br/>\n独立安装的插件称为“外部插件”。",
          "hash" : "T-plugins-S-plugins",
          "fields" : [
            {
              "doc" : "一组插件的状态。插件将按照定义的顺序启动",
              "refs" : [
                {
                  "doc" : "描述插件的状态",
                  "hash" : "T-plugins-S-plugins-states-S-state",
                  "fields" : [
                    {
                      "doc" : "插件的名称{name}-{version}。<br/>\n它应该与插件的发布包名称一致，如 my_plugin-0.1.0。",
                      "hash" : "V-plugins-S-plugins-states-S-state-name_vsn",
                      "text" : "name_vsn",
                      "type" : "String"
                    },
                    {
                      "doc" : "设置为“true”以启用此插件。",
                      "hash" : "V-plugins-S-plugins-states-S-state-enable",
                      "text" : "enable",
                      "type" : "Boolean"
                    }
                  ],
                  "text" : "state"
                }
              ],
              "hash" : "V-plugins-S-plugins-states",
              "text" : "states",
              "type" : "Array(Struct(state))",
              "default" : "[]"
            },
            {
              "doc" : "插件安装包的目录，出于安全考虑，该目录应该值允许 <code>emqx</code>，或用于运行 EMQX 服务的用户拥有写入权限。",
              "hash" : "V-plugins-S-plugins-install_dir",
              "text" : "install_dir",
              "type" : "String",
              "default" : "plugins"
            },
            {
              "doc" : "Deprecated since 5.0.24.<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-plugins-S-plugins-check_interval",
              "text" : "check_interval",
              "type" : "Duration"
            }
          ],
          "text" : "plugins"
        }
      ],
      "hash" : "V-plugins",
      "text" : "plugins",
      "type" : "Struct(plugins)"
    },
    {
      "refs" : [
        {
          "doc" : "EMQX Dashboard 配置。",
          "hash" : "T-dashboard-S-dashboard",
          "fields" : [
            {
              "doc" : "Dashboard 监听器设置。监听器必须有唯一的端口号和 IP 地址的组合。\n例如，可以通过指定 IP 地址 0.0.0.0 来监听机器上给定端口上的所有配置的 IP 地址。\n或者，可以为每个监听器指定唯一的 IP 地址，但使用相同的端口。",
              "refs" : [
                {
                  "doc" : "Dashboard 监听器配置。",
                  "hash" : "T-dashboard-S-dashboard-listeners-S-listeners",
                  "fields" : [
                    {
                      "doc" : "TCP listeners",
                      "refs" : [
                        {
                          "doc" : "Dashboard 监听器(HTTP)配置。",
                          "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-http-S-http",
                          "fields" : [
                            {
                              "doc" : "监听地址和端口，热更新此配置时，会重启 Dashboard 服务。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-bind",
                              "text" : "bind",
                              "type" : "String",
                              "default" : "0"
                            },
                            {
                              "doc" : "TCP 协议的 Socket acceptor 池大小, 通常配置为 CPU 核数",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-num_acceptors",
                              "text" : "num_acceptors",
                              "type" : "Integer",
                              "default" : "8"
                            },
                            {
                              "doc" : "同时处理的最大连接数。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-max_connections",
                              "text" : "max_connections",
                              "type" : "Integer",
                              "default" : "512"
                            },
                            {
                              "doc" : "排队等待连接的队列的最大长度。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-backlog",
                              "text" : "backlog",
                              "type" : "Integer",
                              "default" : "1024"
                            },
                            {
                              "doc" : "发送响应内容的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "doc" : "启用 IPv6， 如果机器不支持 IPv6，请关闭此选项，否则会导致 Dashboard 无法使用。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-inet6",
                              "text" : "inet6",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "当开启 inet6 功能的同时禁用 IPv4-to-IPv6 映射。该配置仅在 inet6 功能开启时有效。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-ipv6_v6only",
                              "text" : "ipv6_v6only",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "启用 Proxy Protocol 以提取客户端连接的原始信息，要求使用了代理服务器并且代理服务器也启用 Proxy Protocol。注意：一旦开启了这个功能，就无法再处理普通的 HTTP 请求。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-proxy_header",
                              "text" : "proxy_header",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "text" : "http"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http",
                      "text" : "http",
                      "type" : "Struct(http)"
                    },
                    {
                      "doc" : "SSL listeners",
                      "refs" : [
                        {
                          "doc" : "Dashboard 监听器(HTTPS)配置。",
                          "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-https-S-https",
                          "fields" : [
                            {
                              "doc" : "监听地址和端口，热更新此配置时，会重启 Dashboard 服务。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-bind",
                              "text" : "bind",
                              "type" : "String",
                              "default" : "0"
                            },
                            {
                              "doc" : "Dashboard 监听器的 SSL/TLS 选项。",
                              "refs" : [
                                {
                                  "doc" : "Dashboard 监听器的 SSL/TLS 选项。",
                                  "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options",
                                  "fields" : [
                                    {
                                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-cacertfile",
                                      "text" : "cacertfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                    },
                                    {
                                      "doc" : "Deprecated since 5.1.4.",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-cacerts",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-certfile",
                                      "text" : "certfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                    },
                                    {
                                      "doc" : "PEM 格式的私钥文件。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-keyfile",
                                      "text" : "keyfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                    },
                                    {
                                      "doc" : "启用或禁用对等验证。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-verify",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "doc" : "启用 TLS 会话重用。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-reuse_sessions",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-depth",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-password",
                                      "text" : "password",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-versions",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-ciphers",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-secure_renegotiate",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-log_level",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-hibernate_after",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-dhfile",
                                      "text" : "dhfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-honor_cipher_order",
                                      "text" : "honor_cipher_order",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-client_renegotiation",
                                      "text" : "client_renegotiation",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-handshake_timeout",
                                      "text" : "handshake_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "text" : "ssl_options"
                                }
                              ],
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_options)"
                            },
                            {
                              "doc" : "TCP 协议的 Socket acceptor 池大小, 通常配置为 CPU 核数",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-num_acceptors",
                              "text" : "num_acceptors",
                              "type" : "Integer",
                              "default" : "8"
                            },
                            {
                              "doc" : "同时处理的最大连接数。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-max_connections",
                              "text" : "max_connections",
                              "type" : "Integer",
                              "default" : "512"
                            },
                            {
                              "doc" : "排队等待连接的队列的最大长度。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-backlog",
                              "text" : "backlog",
                              "type" : "Integer",
                              "default" : "1024"
                            },
                            {
                              "doc" : "发送响应内容的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-send_timeout",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "doc" : "启用 IPv6， 如果机器不支持 IPv6，请关闭此选项，否则会导致 Dashboard 无法使用。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-inet6",
                              "text" : "inet6",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "当开启 inet6 功能的同时禁用 IPv4-to-IPv6 映射。该配置仅在 inet6 功能开启时有效。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ipv6_v6only",
                              "text" : "ipv6_v6only",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "启用 Proxy Protocol 以提取客户端连接的原始信息，要求使用了代理服务器并且代理服务器也启用 Proxy Protocol。注意：一旦开启了这个功能，就无法再处理普通的 HTTP 请求。",
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-proxy_header",
                              "text" : "proxy_header",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "text" : "https"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https",
                      "text" : "https",
                      "type" : "Struct(https)"
                    }
                  ],
                  "text" : "listeners"
                }
              ],
              "hash" : "V-dashboard-S-dashboard-listeners",
              "text" : "listeners",
              "type" : "Struct(listeners)"
            },
            {
              "doc" : "登录成功返回的 JWT token 过期时间，默认为 60 分钟。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-dashboard-S-dashboard-token_expired_time",
              "text" : "token_expired_time",
              "type" : "Duration",
              "default" : "\"60m\""
            },
            {
              "doc" : "CORS（Cross-Origin Resource Sharing，跨域资源共享）允许服务器响应来自任何来源（域名、协议或端口）的请求，启用后允许另一个域名下的服务直接通过 JavaScript 调用 EMQX REST API。",
              "hash" : "V-dashboard-S-dashboard-cors",
              "text" : "cors",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "启用或禁用对 Swagger API 文档的支持。",
              "hash" : "V-dashboard-S-dashboard-swagger_support",
              "text" : "swagger_support",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "refs" : [
                {
                  "doc" : "Dashboard Single Sign-On",
                  "hash" : "T-dashboard-S-dashboard-sso-S-sso",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "doc" : "LDAP",
                          "hash" : "T-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap",
                          "fields" : [
                            {
                              "doc" : "是否启用该后端",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "----",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-backend",
                              "text" : "backend",
                              "type" : "Enum(ldap)"
                            },
                            {
                              "doc" : "LDAP 查询超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-query_timeout",
                              "text" : "query_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机名条目的格式为：`主机[:端口]`。<br/>\n如果 `[:端口]` 未指定， 将使用 LDAP 默认端口 389。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-server",
                              "text" : "server",
                              "type" : "String"
                            },
                            {
                              "doc" : "桥接远端服务时使用的连接池大小。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-pool_size",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "doc" : "内部数据库的用户名。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "内部数据库密码。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-password",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "doc" : "与基本对象条目（或根）相关的名称。\n搜索用户的起点。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-base_dn",
                              "text" : "base_dn",
                              "type" : "String"
                            },
                            {
                              "doc" : "LDAP 中匹配用户的过滤器默认为 `(&(objectClass=person)(uid=${username}))`。 对于 Active Directory，默认过滤器是 `(&(objectClass=user)(sAMAccountName=${username}))`。更多详细内容，请参考 [LDAP Filters](https://ldap.com/ldap-filters/)。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-filter",
                              "text" : "filter",
                              "type" : "String",
                              "default" : "\"(& (objectClass=person) (uid=${username}))\""
                            },
                            {
                              "doc" : "设置每个单独请求所使用的最大时间（以毫秒为单位）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-request_timeout",
                              "text" : "request_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "doc" : "启用 SSL 连接。",
                              "refs" : [
                                {
                                  "doc" : "启用 SSL 连接。",
                                  "hash" : "T-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl",
                                  "fields" : [
                                    {
                                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-cacertfile",
                                      "text" : "cacertfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "Deprecated since 5.1.4.",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-cacerts",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-certfile",
                                      "text" : "certfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "PEM 格式的私钥文件。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-keyfile",
                                      "text" : "keyfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "启用或禁用对等验证。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-verify",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "doc" : "启用 TLS 会话重用。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-reuse_sessions",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-depth",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-password",
                                      "text" : "password",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-versions",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-ciphers",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-secure_renegotiate",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-log_level",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-hibernate_after",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "doc" : "启用 TLS。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-server_name_indication",
                                      "text" : "server_name_indication",
                                      "type" : "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "text" : "ssl"
                                }
                              ],
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl",
                              "text" : "ssl",
                              "type" : "Struct(ssl)",
                              "default" : "{enable = false}"
                            }
                          ],
                          "text" : "ldap"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap",
                      "text" : "ldap",
                      "type" : "Struct(ldap)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "saml",
                          "hash" : "T-dashboard-S-dashboard-sso-S-sso-saml-S-saml",
                          "fields" : [
                            {
                              "doc" : "是否启用该后端",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "----",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-backend",
                              "text" : "backend",
                              "type" : "Enum(saml)"
                            },
                            {
                              "doc" : "EMQX Dashboard 的地址。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-dashboard_addr",
                              "text" : "dashboard_addr",
                              "type" : "String",
                              "default" : "\"https://127.0.0.1:18083\""
                            },
                            {
                              "doc" : "身份提供商的元数据地址。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-idp_metadata_url",
                              "text" : "idp_metadata_url",
                              "type" : "String",
                              "default" : "\"https://idp.example.com\""
                            },
                            {
                              "doc" : "是否签署 SAML 请求。",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_sign_request",
                              "text" : "sp_sign_request",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "----",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_public_key",
                              "text" : "sp_public_key",
                              "type" : "String",
                              "default" : "\"Pub Key\""
                            },
                            {
                              "doc" : "----",
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_private_key",
                              "text" : "sp_private_key",
                              "type" : "String"
                            }
                          ],
                          "text" : "saml"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml",
                      "text" : "saml",
                      "type" : "Struct(saml)"
                    }
                  ],
                  "text" : "sso"
                }
              ],
              "hash" : "V-dashboard-S-dashboard-sso",
              "text" : "sso",
              "type" : "Struct(sso)"
            }
          ],
          "text" : "dashboard"
        }
      ],
      "hash" : "V-dashboard",
      "text" : "dashboard",
      "type" : "Struct(dashboard)"
    },
    {
      "refs" : [
        {
          "doc" : "EMQX Gateway configuration root.",
          "hash" : "T-gateway-S-gateway",
          "fields" : [
            {
              "refs" : [
                {
                  "doc" : "The CoAP protocol gateway provides EMQX with the access capability of the CoAP protocol.\nIt allows publishing, subscribing, and receiving messages to EMQX in accordance\nwith a certain defined CoAP message format.",
                  "hash" : "T-gateway-S-gateway-coap-S-coap",
                  "fields" : [
                    {
                      "doc" : "CoAP 网关要求客户端的最小心跳间隔时间。\n当 <code>connection_required</code> 开启后，该参数用于检查客户端连接是否存活<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-heartbeat",
                      "text" : "heartbeat",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "是否开启连接模式。\n连接模式是非标准协议的功能。它维护 CoAP 客户端上线、认证、和连接状态的保持",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-connection_required",
                      "text" : "connection_required",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "投递给 CoAP 客户端的通知消息类型。当客户端 Observe 一个资源（或订阅某个主题）时，网关会向客户端推送新产生的消息。其消息类型可设置为：<br/>\n\n  - non: 不需要客户端返回确认消息;<br/>\n  - con: 需要客户端返回一个确认消息;<br/>\n  - qos: 取决于消息的 QoS 等级; QoS 0 会以 `non` 类型下发，QoS 1/2 会以 `con` 类型下发",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-notify_type",
                      "text" : "notify_type",
                      "type" : "Enum(non,con,qos)",
                      "default" : "qos"
                    },
                    {
                      "doc" : "客户端订阅请求的默认 QoS 等级。\n当 CoAP 客户端发起订阅请求时，如果未携带 `qos` 参数则会使用该默认值。默认值可设置为：<br/>\n  - qos0、 qos1、qos2: 设置为固定的 QoS 等级<br/>\n  - coap: 依据订阅操作的 CoAP 报文类型来动态决定<br/>\n    * 当订阅请求为 `non-confirmable` 类型时，取值为 qos0<br/>\n    * 当订阅请求为 `confirmable` 类型时，取值为 qos1",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-subscribe_qos",
                      "text" : "subscribe_qos",
                      "type" : "Enum(qos0,qos1,qos2,coap)",
                      "default" : "coap"
                    },
                    {
                      "doc" : "客户端发布请求的默认 QoS 等级。\n当 CoAP 客户端发起发布请求时，如果未携带 `qos` 参数则会使用该默认值。默认值可设置为：<br/>\n\n  - qos0、qos1、qos2: 设置为固定的 QoS 等级<br/>\n  - coap: 依据发布操作的 CoAP 报文类型来动态决定<br/>\n    * 当发布请求为 `non-confirmable` 类型时，取值为 qos0<br/>\n    * 当发布请求为 `confirmable` 类型时，取值为 qos1",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-publish_qos",
                      "text" : "publish_qos",
                      "type" : "Enum(qos0,qos1,qos2,coap)",
                      "default" : "coap"
                    },
                    {
                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the UDP listeners.",
                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for UDP listener.",
                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间接收缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间发送缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在用户空间的缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for DTLS listener.",
                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间接收缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间发送缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在用户空间的缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "DTLS Socket 配置",
                                      "refs" : [
                                        {
                                          "doc" : "Settings for DTLS protocol.",
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "是否为该监听器启用 CRL 检查。",
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "doc" : "是否启用该网关",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端统计",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-coap-S-coap-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo 重写。",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "username 重写模板",
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "password 重写模板",
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "clientid 重写模板",
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "coap"
                }
              ],
              "hash" : "V-gateway-S-gateway-coap",
              "text" : "coap",
              "type" : "Struct(coap)"
            },
            {
              "refs" : [
                {
                  "doc" : "Settings for EMQX extension protocol (exproto).",
                  "hash" : "T-gateway-S-gateway-exproto-S-exproto",
                  "fields" : [
                    {
                      "doc" : "配置 ExProto 网关需要启动的 <code>ConnectionAdapter</code> 服务。\n该服务用于提供客户端的认证、发布、订阅和数据下行等功能。",
                      "refs" : [
                        {
                          "doc" : "Settings for the exproto gRPC server.",
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server",
                          "fields" : [
                            {
                              "doc" : "服务监听地址和端口。",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-bind",
                              "text" : "bind",
                              "type" : "String"
                            },
                            {
                              "doc" : "服务 SSL 配置。",
                              "refs" : [
                                {
                                  "doc" : "SSL configuration for the server.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts",
                                  "fields" : [
                                    {
                                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-cacertfile",
                                      "text" : "cacertfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                    },
                                    {
                                      "doc" : "Deprecated since 5.1.4.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-cacerts",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-certfile",
                                      "text" : "certfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                    },
                                    {
                                      "doc" : "PEM 格式的私钥文件。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-keyfile",
                                      "text" : "keyfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                    },
                                    {
                                      "doc" : "启用或禁用对等验证。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-verify",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "doc" : "启用 TLS 会话重用。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-reuse_sessions",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-depth",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-password",
                                      "text" : "password",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-versions",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-ciphers",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-secure_renegotiate",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-log_level",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-hibernate_after",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-dhfile",
                                      "text" : "dhfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-fail_if_no_peer_cert",
                                      "text" : "fail_if_no_peer_cert",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-honor_cipher_order",
                                      "text" : "honor_cipher_order",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-client_renegotiation",
                                      "text" : "client_renegotiation",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-handshake_timeout",
                                      "text" : "handshake_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "text" : "ssl_server_opts"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_server_opts)"
                            }
                          ],
                          "text" : "exproto_grpc_server"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server",
                      "text" : "server",
                      "type" : "Struct(exproto_grpc_server)"
                    },
                    {
                      "doc" : "配置 ExProto 网关需要请求的 <code>ConnectionHandler</code> 服务地址。\n该服务用于给 ExProto 提供客户端的 Socket 事件处理、字节解码、订阅消息接收等功能。",
                      "refs" : [
                        {
                          "doc" : "Settings for the exproto gRPC connection handler.",
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler",
                          "fields" : [
                            {
                              "doc" : "对端 gRPC 服务器地址。",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-address",
                              "text" : "address",
                              "type" : "String"
                            },
                            {
                              "doc" : "用于处理连接事件的服务名称\n在初始版本中，我们期望使用流来提高 ConnectionHandler 中请求的效率。\n但不幸的是，不同流之间的事件顺序混乱。\n这导致 OnSocketCreated 事件可能会\n在 OnReceivedBytes 之后到达。\n因此，自 v5.0.25 起，我们添加了 `ConnectionUnaryHandler` 服务，并强制在其中使用了 Unary，以避免顺序问题。",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-service_name",
                              "text" : "service_name",
                              "type" : "OneOf(String(\"ConnectionHandler\"),String(\"ConnectionUnaryHandler\"))",
                              "default" : "ConnectionUnaryHandler"
                            },
                            {
                              "doc" : "gRPC 客户端的 SSL 配置。",
                              "refs" : [
                                {
                                  "doc" : "Socket options for SSL clients.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts",
                                  "fields" : [
                                    {
                                      "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-cacertfile",
                                      "text" : "cacertfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "Deprecated since 5.1.4.",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-cacerts",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-certfile",
                                      "text" : "certfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "PEM 格式的私钥文件。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-keyfile",
                                      "text" : "keyfile",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "启用或禁用对等验证。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-verify",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "doc" : "启用 TLS 会话重用。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-reuse_sessions",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-depth",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-password",
                                      "text" : "password",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-versions",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-ciphers",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-secure_renegotiate",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-log_level",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-hibernate_after",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "doc" : "启用 TLS。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-server_name_indication",
                                      "text" : "server_name_indication",
                                      "type" : "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "text" : "ssl_client_opts"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_client_opts)"
                            }
                          ],
                          "text" : "exproto_grpc_handler"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler",
                      "text" : "handler",
                      "type" : "Struct(exproto_grpc_handler)"
                    },
                    {
                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for TCP and UDP listeners.",
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners",
                          "fields" : [
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for TCP listener.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for SSL listener.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "Socket options for SSL connections.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "是否为该监听器启用 CRL 检查。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for UDP listener.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间接收缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间发送缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在用户空间的缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for DTLS listener.",
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间接收缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间发送缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在用户空间的缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "DTLS Socket 配置",
                                      "refs" : [
                                        {
                                          "doc" : "Settings for DTLS protocol.",
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "是否为该监听器启用 CRL 检查。",
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "text" : "tcp_udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_udp_listeners)"
                    },
                    {
                      "doc" : "是否启用该网关",
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端统计",
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo 重写。",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "username 重写模板",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "password 重写模板",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "clientid 重写模板",
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "exproto"
                }
              ],
              "hash" : "V-gateway-S-gateway-exproto",
              "text" : "exproto",
              "type" : "Struct(exproto)"
            },
            {
              "refs" : [
                {
                  "doc" : "The GBT-32960 gateway",
                  "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960",
                  "fields" : [
                    {
                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"gbt32960/${clientid}/\""
                    },
                    {
                      "doc" : "重新发送时间间隔<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-retry_interval",
                      "text" : "retry_interval",
                      "type" : "Duration",
                      "default" : "\"8s\""
                    },
                    {
                      "doc" : "最大重新发送次数",
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-max_retry_times",
                      "text" : "max_retry_times",
                      "type" : "Integer(0..+inf)",
                      "default" : "3"
                    },
                    {
                      "doc" : "最大消息队列长度",
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-message_queue_len",
                      "text" : "message_queue_len",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the TCP listeners.",
                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners",
                          "fields" : [
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for TCP listener.",
                                  "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for SSL listener.",
                                  "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "Socket options for SSL connections.",
                                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "是否为该监听器启用 CRL 检查。",
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "text" : "tcp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_listeners)"
                    },
                    {
                      "doc" : "是否启用该网关",
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端统计",
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo 重写。",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "username 重写模板",
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "password 重写模板",
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "clientid 重写模板",
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "gbt32960"
                }
              ],
              "hash" : "V-gateway-S-gateway-gbt32960",
              "text" : "gbt32960",
              "type" : "Struct(gbt32960)"
            },
            {
              "refs" : [
                {
                  "doc" : "The JT/T 808 protocol gateway provides EMQX with the ability to access JT/T 808 protocol devices.",
                  "hash" : "T-gateway-S-gateway-jt808-S-jt808",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "doc" : "Limits for the JT/T 808 frames.",
                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-frame-S-jt808_frame",
                          "fields" : [
                            {
                              "doc" : "JT/T 808 帧的最大长度。",
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-frame-S-jt808_frame-max_length",
                              "text" : "max_length",
                              "type" : "Integer(0..+inf)",
                              "default" : "8192"
                            }
                          ],
                          "text" : "jt808_frame"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-frame",
                      "text" : "frame",
                      "type" : "Struct(jt808_frame)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "The JT/T 808 protocol options.",
                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto",
                          "fields" : [
                            {
                              "doc" : "JT/T 808 网关的认证设置。",
                              "refs" : [
                                {
                                  "doc" : "允许匿名访问 JT/T 808 网关。registry_url.descJT/T 808 设备注册中心 URL。authentication_url.descJT/T 808 设备身份验证中心 URL。jt808_up_topic.descJT/T 808 协议上行消息的主题。jt808_dn_topic.descJT/T 808 协议下行消息的主题。",
                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_true",
                                  "fields" : [
                                    {
                                      "doc" : "允许匿名访问 JT/T 808 网关。registry_url.descJT/T 808 设备注册中心 URL。authentication_url.descJT/T 808 设备身份验证中心 URL。jt808_up_topic.descJT/T 808 协议上行消息的主题。jt808_dn_topic.descJT/T 808 协议下行消息的主题。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_true-allow_anonymous",
                                      "text" : "allow_anonymous",
                                      "type" : "OneOf(String(\"true\"))"
                                    },
                                    {
                                      "doc" : "JT/T 808 设备注册中心的 URL。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_true-registry",
                                      "text" : "registry",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "JT/T 808 设备认证中心的 URL。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_true-authentication",
                                      "text" : "authentication",
                                      "type" : "String"
                                    }
                                  ],
                                  "text" : "anonymous_true"
                                },
                                {
                                  "doc" : "允许匿名访问 JT/T 808 网关。registry_url.descJT/T 808 设备注册中心 URL。authentication_url.descJT/T 808 设备身份验证中心 URL。jt808_up_topic.descJT/T 808 协议上行消息的主题。jt808_dn_topic.descJT/T 808 协议下行消息的主题。",
                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_false",
                                  "fields" : [
                                    {
                                      "doc" : "允许匿名访问 JT/T 808 网关。registry_url.descJT/T 808 设备注册中心 URL。authentication_url.descJT/T 808 设备身份验证中心 URL。jt808_up_topic.descJT/T 808 协议上行消息的主题。jt808_dn_topic.descJT/T 808 协议下行消息的主题。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_false-allow_anonymous",
                                      "text" : "allow_anonymous",
                                      "type" : "OneOf(String(\"false\"))"
                                    },
                                    {
                                      "doc" : "JT/T 808 设备注册中心的 URL。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_false-registry",
                                      "text" : "registry",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "JT/T 808 设备认证中心的 URL。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_false-authentication",
                                      "text" : "authentication",
                                      "type" : "String"
                                    }
                                  ],
                                  "text" : "anonymous_false"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth",
                              "text" : "auth",
                              "type" : "OneOf(Struct(anonymous_true),Struct(anonymous_false))"
                            },
                            {
                              "doc" : "JT/T 808 协议上行消息的主题。",
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-up_topic",
                              "text" : "up_topic",
                              "type" : "String",
                              "default" : "\"jt808/${clientid}/${phone}/up\""
                            },
                            {
                              "doc" : "JT/T 808 协议下行消息的主题。",
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-dn_topic",
                              "text" : "dn_topic",
                              "type" : "String",
                              "default" : "\"jt808/${clientid}/${phone}/dn\""
                            }
                          ],
                          "text" : "jt808_proto"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto",
                      "text" : "proto",
                      "type" : "Struct(jt808_proto)"
                    },
                    {
                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"jt808/${clientid}/\""
                    },
                    {
                      "doc" : "重发时间间隔<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-retry_interval",
                      "text" : "retry_interval",
                      "type" : "Duration",
                      "default" : "\"8s\""
                    },
                    {
                      "doc" : "最大重发次数",
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-max_retry_times",
                      "text" : "max_retry_times",
                      "type" : "Integer(0..+inf)",
                      "default" : "3"
                    },
                    {
                      "doc" : "最大消息队列长度",
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-message_queue_len",
                      "text" : "message_queue_len",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the TCP listeners.",
                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners",
                          "fields" : [
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for TCP listener.",
                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for SSL listener.",
                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "Socket options for SSL connections.",
                                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "是否为该监听器启用 CRL 检查。",
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "text" : "tcp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_listeners)"
                    },
                    {
                      "doc" : "是否启用该网关",
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端统计",
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo 重写。",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "username 重写模板",
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "password 重写模板",
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "clientid 重写模板",
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "jt808"
                }
              ],
              "hash" : "V-gateway-S-gateway-jt808",
              "text" : "jt808",
              "type" : "Struct(jt808)"
            },
            {
              "refs" : [
                {
                  "doc" : "The LwM2M protocol gateway.",
                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m",
                  "fields" : [
                    {
                      "doc" : "LwM2M Resource 定义的 XML 文件目录路径。",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-xml_dir",
                      "text" : "xml_dir",
                      "type" : "String"
                    },
                    {
                      "doc" : "允许 LwM2M 客户端允许设置的心跳最小值。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-lifetime_min",
                      "text" : "lifetime_min",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "允许 LwM2M 客户端允许设置的心跳最大值。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-lifetime_max",
                      "text" : "lifetime_max",
                      "type" : "Duration",
                      "default" : "\"86400s\""
                    },
                    {
                      "doc" : "在 QMode 模式下，LwM2M 网关认为网络链接有效的时间窗口的值。\n例如，在收到客户端的更新信息后，在这个时间窗口内的任何信息都会直接发送到 LwM2M 客户端，而超过这个时间窗口的所有信息都会暂时储存在内存中。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-qmode_time_window",
                      "text" : "qmode_time_window",
                      "type" : "Duration(s)",
                      "default" : "\"22s\""
                    },
                    {
                      "doc" : "自动 Observe REGISTER 数据包的 Object 列表。",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-auto_observe",
                      "text" : "auto_observe",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "发布 UPDATE 事件消息的策略。<br/>\n  - always: 只要收到 UPDATE 请求，就发送更新事件。<br/>\n  - contains_object_list: 仅当 UPDATE 请求携带 Object 列表时才发送更新事件。",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-update_msg_publish_condition",
                      "text" : "update_msg_publish_condition",
                      "type" : "Enum(always,contains_object_list)",
                      "default" : "contains_object_list"
                    },
                    {
                      "doc" : "LwM2M 网关订阅/发布消息的主题映射配置。",
                      "refs" : [
                        {
                          "doc" : "MQTT topics that correspond to LwM2M events.",
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators",
                          "fields" : [
                            {
                              "doc" : "下行命令主题。\n对于每个成功上线的新 LwM2M 客户端，网关会创建一个订阅关系来接收下行消息并将其发送给客户端",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "主题名称",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS 等级",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command",
                              "text" : "command",
                              "type" : "Struct(translator)"
                            },
                            {
                              "doc" : "用于网关发布来自 LwM2M 客户端的确认事件的主题。",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "主题名称",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS 等级",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response",
                              "text" : "response",
                              "type" : "Struct(translator)"
                            },
                            {
                              "doc" : "用于发布来自 LwM2M 客户端的通知事件的主题。\n在成功 Observe 到 LwM2M 客户端的资源后，如果客户端报告任何资源状态的变化，网关将通过该主题发送通知事件",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "主题名称",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS 等级",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify",
                              "text" : "notify",
                              "type" : "Struct(translator)"
                            },
                            {
                              "doc" : "用于发布来自 LwM2M 客户端的注册事件的主题。",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "主题名称",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS 等级",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register",
                              "text" : "register",
                              "type" : "Struct(translator)"
                            },
                            {
                              "doc" : "用于发布来自 LwM2M 客户端的更新事件的主题。",
                              "refs" : [
                                {
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator",
                                  "fields" : [
                                    {
                                      "doc" : "主题名称",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator-topic",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "QoS 等级",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator-qos",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update",
                              "text" : "update",
                              "type" : "Struct(translator)"
                            }
                          ],
                          "text" : "lwm2m_translators"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators",
                      "text" : "translators",
                      "type" : "Struct(lwm2m_translators)"
                    },
                    {
                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"lwm2m/${endpoint_name}/\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the UDP listeners.",
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for UDP listener.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间接收缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间发送缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在用户空间的缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for DTLS listener.",
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间接收缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间发送缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在用户空间的缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "DTLS Socket 配置",
                                      "refs" : [
                                        {
                                          "doc" : "Settings for DTLS protocol.",
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "是否为该监听器启用 CRL 检查。",
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "doc" : "是否启用该网关",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端统计",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo 重写。",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "username 重写模板",
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "password 重写模板",
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "clientid 重写模板",
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "lwm2m"
                }
              ],
              "hash" : "V-gateway-S-gateway-lwm2m",
              "text" : "lwm2m",
              "type" : "Struct(lwm2m)"
            },
            {
              "refs" : [
                {
                  "doc" : "The MQTT-SN (MQTT for Sensor Networks) protocol gateway.",
                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn",
                  "fields" : [
                    {
                      "doc" : "MQTT-SN 网关 ID。\n当 <code>broadcast</code> 打开时，MQTT-SN 网关会使用该 ID 来广播 ADVERTISE 消息",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-gateway_id",
                      "text" : "gateway_id",
                      "type" : "Integer",
                      "default" : "1"
                    },
                    {
                      "doc" : "是否周期性广播 ADVERTISE 消息",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-broadcast",
                      "text" : "broadcast",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "是否允许无连接的客户端发送 QoS 等于 -1 的消息。\n该功能主要用于支持轻量的 MQTT-SN 客户端实现，它不会向网关建立连接，注册主题，也不会发起订阅；它只使用 QoS 为 -1 来发布消息",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-enable_qos3",
                      "text" : "enable_qos3",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "在会话被重用后，网关是否主动向客户端注册对已订阅主题名称",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-subs_resume",
                      "text" : "subs_resume",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "预定义主题列表。\n预定义的主题列表，是一组 主题 ID 和 主题名称 的映射关系。使用预先定义的主题列表，可以减少 MQTT-SN 客户端和网关对于固定主题的注册请求",
                      "refs" : [
                        {
                          "doc" : "The pre-defined topic name corresponding to the pre-defined topic\nID of N.\n\nNote: the pre-defined topic ID of 0 is reserved.",
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined",
                          "fields" : [
                            {
                              "doc" : "主题 ID。范围：1-65535",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined-id",
                              "text" : "id",
                              "type" : "Integer(1..1024)"
                            },
                            {
                              "doc" : "主题名称。注：不支持通配符",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined-topic",
                              "text" : "topic",
                              "type" : "String"
                            }
                          ],
                          "text" : "mqttsn_predefined"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined",
                      "text" : "predefined",
                      "type" : "Array(Struct(mqttsn_predefined))",
                      "default" : "[]"
                    },
                    {
                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the UDP listeners.",
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for UDP listener.",
                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间接收缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间发送缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在用户空间的缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for DTLS listener.",
                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Settings for UDP sockets.",
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间接收缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在内核空间发送缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "Socket 在用户空间的缓冲区大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "DTLS Socket 配置",
                                      "refs" : [
                                        {
                                          "doc" : "Settings for DTLS protocol.",
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "是否为该监听器启用 CRL 检查。",
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "doc" : "是否启用该网关",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端统计",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo 重写。",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "username 重写模板",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "password 重写模板",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "clientid 重写模板",
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "mqttsn"
                }
              ],
              "hash" : "V-gateway-S-gateway-mqttsn",
              "text" : "mqttsn",
              "type" : "Struct(mqttsn)"
            },
            {
              "refs" : [
                {
                  "doc" : "The OCPP gateway",
                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp",
                  "fields" : [
                    {
                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"ocpp/\""
                    },
                    {
                      "doc" : "默认的心跳时间间隔<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-default_heartbeat_interval",
                      "text" : "default_heartbeat_interval",
                      "type" : "Duration(s)",
                      "default" : "\"60s\""
                    },
                    {
                      "doc" : "用于心跳检查次数的退避时间",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-heartbeat_checking_times_backoff",
                      "text" : "heartbeat_checking_times_backoff",
                      "type" : "Integer",
                      "default" : "1"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Upload stream topic to notify third-party system what's messages/events reported by Charge Point. Available placeholders:\n- <code>cid</code>: Charge Point ID\n- <code>clientid</code>: Equal to Charge Point ID\n- <code>action</code>: Message Name in OCPP",
                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream",
                          "fields" : [
                            {
                              "doc" : "上传流呼叫请求消息主题。",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream-topic",
                              "text" : "topic",
                              "type" : "String",
                              "default" : "\"cp/${cid}\""
                            },
                            {
                              "doc" : "通过消息名称进行的上传流主题覆盖映射。",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream-topic_override_mapping",
                              "text" : "topic_override_mapping",
                              "type" : "Map($name->String)",
                              "default" : "{}"
                            },
                            {
                              "doc" : "上传流回复消息主题。",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream-reply_topic",
                              "text" : "reply_topic",
                              "type" : "String",
                              "default" : "\"cp/${cid}/Reply\""
                            },
                            {
                              "doc" : "上传流错误主题。",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream-error_topic",
                              "text" : "error_topic",
                              "type" : "String",
                              "default" : "\"cp/${cid}/Reply\""
                            }
                          ],
                          "text" : "upstream"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream",
                      "text" : "upstream",
                      "type" : "Struct(upstream)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Download stream topic to forward the system message to device. Available placeholders:\n- <code>cid</code>: Charge Point ID\n- <code>clientid</code>: Equal to Charge Point ID\n- <code>action</code>: Message Name in OCPP",
                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-dnstream-S-dnstream",
                          "fields" : [
                            {
                              "doc" : "用于接收来自第三方系统的请求/控制消息的下载流主题。\n此值是每个连接的充电桩都订阅的通配符主题名称。",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-dnstream-S-dnstream-topic",
                              "text" : "topic",
                              "type" : "String",
                              "default" : "\"cs/${cid}\""
                            },
                            {
                              "doc" : "下载流消息传递的最大消息队列长度。",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-dnstream-S-dnstream-max_mqueue_len",
                              "text" : "max_mqueue_len",
                              "type" : "Integer",
                              "default" : "100"
                            }
                          ],
                          "text" : "dnstream"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-dnstream",
                      "text" : "dnstream",
                      "type" : "Struct(dnstream)"
                    },
                    {
                      "doc" : "是否启用消息格式合法性检查。\nEMQX 会根据 json-schema 中定义的格式检查上传流和下载流的消息格式。\n当检查失败时，EMQX 将回复相应的答复消息。\n\n检查策略可以是以下值之一：\n- <code>all</code>：检查所有消息\n- <code>upstream_only</code>：仅检查上传流消息\n- <code>dnstream_only</code>：仅检查下载流消息\n- <code>disable</code>：不检查任何消息",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-message_format_checking",
                      "text" : "message_format_checking",
                      "type" : "OneOf(String(\"all\"),String(\"upstream_only\"),String(\"dnstream_only\"),String(\"disable\"))",
                      "default" : "disable"
                    },
                    {
                      "doc" : "OCPP 消息定义的 JSON 模式目录。\n默认值：${application}/priv/schemas",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-json_schema_dir",
                      "text" : "json_schema_dir",
                      "type" : "String",
                      "default" : "\"${application_priv}/schemas\""
                    },
                    {
                      "doc" : "OCPP 消息模式的 ID 前缀。",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-json_schema_id_prefix",
                      "text" : "json_schema_id_prefix",
                      "type" : "String",
                      "default" : "\"urn:OCPP:1.6:2019:12:\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Websocket listeners",
                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners",
                          "fields" : [
                            {
                              "doc" : "WebSocket 监听器。",
                              "refs" : [
                                {
                                  "doc" : "Websocket listener",
                                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Websocket options",
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket",
                                          "fields" : [
                                            {
                                              "doc" : "WebSocket 的M QTT 协议路径。因此，EMQX Broker 的 WebSocket 地址是：<code>ws://{ip}:{port}/mqtt</code>",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-path",
                                              "text" : "path",
                                              "type" : "String",
                                              "default" : "\"/ocpp\""
                                            },
                                            {
                                              "doc" : "WebSocket 消息是否允许包含多个 MQTT 数据包。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-piggyback",
                                              "text" : "piggyback",
                                              "type" : "Enum(single,multiple)",
                                              "default" : "single"
                                            },
                                            {
                                              "doc" : "如果设置为<code>true</code>，将使用<code>zlib</code>压缩 WebSocket 消息。<br/>\n<code>deflate_opts</code>下的配置项属于与压缩相关的参数配置。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-compress",
                                              "text" : "compress",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "关闭未在此间隔内发送 MQTT CONNECT 消息的客户端的传输层连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-idle_timeout",
                                              "text" : "idle_timeout",
                                              "type" : "Duration",
                                              "default" : "\"7200s\""
                                            },
                                            {
                                              "doc" : "单个 MQTT 数据包的最大长度。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-max_frame_size",
                                              "text" : "max_frame_size",
                                              "type" : "OneOf(String(\"infinity\"),Integer)",
                                              "default" : "infinity"
                                            },
                                            {
                                              "doc" : "如果设置为<code>true</code>，当客户端不携带<code>Sec-WebSocket-Protocol</code>字段时，服务器将返回错误。\n<br/>注意：小程序需要禁用此验证。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-fail_if_no_subprotocol",
                                              "text" : "fail_if_no_subprotocol",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "逗号分隔的支持的子协议列表。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-supported_subprotocols",
                                              "text" : "supported_subprotocols",
                                              "type" : "String",
                                              "default" : "\"ocpp1.6, ocpp2.0\""
                                            },
                                            {
                                              "doc" : "如果设置为<code>true</code>，将验证<code>origin</code> HTTP 请求头是否在<code>check_origins</code>参数中配置的允许来源列表中。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-check_origin_enable",
                                              "text" : "check_origin_enable",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "如果设置为<code>false</code>，且<code>check_origin_enable</code>为<code>true</code>，服务器将拒绝没有<code>origin</code> HTTP 请求头的请求。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-allow_origin_absence",
                                              "text" : "allow_origin_absence",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "允许来源的列表。<br/>参见<code>check_origin_enable</code>。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-check_origins",
                                              "text" : "check_origins",
                                              "type" : "String",
                                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                                            },
                                            {
                                              "doc" : "用于传递客户端 IP 地址信息的 HTTP 请求头。\n当 EMQX 集群部署在负载均衡器后面时相关。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-proxy_address_header",
                                              "text" : "proxy_address_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-for\""
                                            },
                                            {
                                              "doc" : "用于传递客户端端口信息的 HTTP 请求头。\n当 EMQX 集群部署在负载均衡器后面时相关。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-proxy_port_header",
                                              "text" : "proxy_port_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-port\""
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Compression options.",
                                                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts",
                                                  "fields" : [
                                                    {
                                                      "doc" : "压缩级别",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-level",
                                                      "text" : "level",
                                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                                    },
                                                    {
                                                      "doc" : "指定压缩状态的大小<br/>\n较低的值会减少每个连接的内存使用。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-mem_level",
                                                      "text" : "mem_level",
                                                      "type" : "Integer(1..9)",
                                                      "default" : "8"
                                                    },
                                                    {
                                                      "doc" : "指定压缩策略。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-strategy",
                                                      "text" : "strategy",
                                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                                      "default" : "default"
                                                    },
                                                    {
                                                      "doc" : "接管意味着在服务器消息之间保留压缩状态。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_context_takeover",
                                                      "text" : "server_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "doc" : "接管意味着在客户端消息之间保留压缩状态。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_context_takeover",
                                                      "text" : "client_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "doc" : "指定服务器压缩上下文的大小。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_max_window_bits",
                                                      "text" : "server_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    },
                                                    {
                                                      "doc" : "指定客户端压缩上下文的大小。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_max_window_bits",
                                                      "text" : "client_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    }
                                                  ],
                                                  "text" : "deflate_opts"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts",
                                              "text" : "deflate_opts",
                                              "type" : "Struct(deflate_opts)"
                                            }
                                          ],
                                          "text" : "websocket"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket",
                                      "text" : "websocket",
                                      "type" : "Struct(websocket)"
                                    }
                                  ],
                                  "text" : "ws_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws",
                              "text" : "ws",
                              "type" : "Map($name->Struct(ws_listener))"
                            },
                            {
                              "doc" : "WebSocket over TLS 监听器。",
                              "refs" : [
                                {
                                  "doc" : "Websocket over TLS listener",
                                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "Socket options for WebSocket/SSL connections.",
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            }
                                          ],
                                          "text" : "listener_wss_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_wss_opts)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "doc" : "Websocket options",
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket",
                                          "fields" : [
                                            {
                                              "doc" : "WebSocket 的M QTT 协议路径。因此，EMQX Broker 的 WebSocket 地址是：<code>ws://{ip}:{port}/mqtt</code>",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-path",
                                              "text" : "path",
                                              "type" : "String",
                                              "default" : "\"/ocpp\""
                                            },
                                            {
                                              "doc" : "WebSocket 消息是否允许包含多个 MQTT 数据包。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-piggyback",
                                              "text" : "piggyback",
                                              "type" : "Enum(single,multiple)",
                                              "default" : "single"
                                            },
                                            {
                                              "doc" : "如果设置为<code>true</code>，将使用<code>zlib</code>压缩 WebSocket 消息。<br/>\n<code>deflate_opts</code>下的配置项属于与压缩相关的参数配置。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-compress",
                                              "text" : "compress",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "关闭未在此间隔内发送 MQTT CONNECT 消息的客户端的传输层连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-idle_timeout",
                                              "text" : "idle_timeout",
                                              "type" : "Duration",
                                              "default" : "\"7200s\""
                                            },
                                            {
                                              "doc" : "单个 MQTT 数据包的最大长度。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-max_frame_size",
                                              "text" : "max_frame_size",
                                              "type" : "OneOf(String(\"infinity\"),Integer)",
                                              "default" : "infinity"
                                            },
                                            {
                                              "doc" : "如果设置为<code>true</code>，当客户端不携带<code>Sec-WebSocket-Protocol</code>字段时，服务器将返回错误。\n<br/>注意：小程序需要禁用此验证。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-fail_if_no_subprotocol",
                                              "text" : "fail_if_no_subprotocol",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "逗号分隔的支持的子协议列表。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-supported_subprotocols",
                                              "text" : "supported_subprotocols",
                                              "type" : "String",
                                              "default" : "\"ocpp1.6, ocpp2.0\""
                                            },
                                            {
                                              "doc" : "如果设置为<code>true</code>，将验证<code>origin</code> HTTP 请求头是否在<code>check_origins</code>参数中配置的允许来源列表中。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-check_origin_enable",
                                              "text" : "check_origin_enable",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "如果设置为<code>false</code>，且<code>check_origin_enable</code>为<code>true</code>，服务器将拒绝没有<code>origin</code> HTTP 请求头的请求。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-allow_origin_absence",
                                              "text" : "allow_origin_absence",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "允许来源的列表。<br/>参见<code>check_origin_enable</code>。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-check_origins",
                                              "text" : "check_origins",
                                              "type" : "String",
                                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                                            },
                                            {
                                              "doc" : "用于传递客户端 IP 地址信息的 HTTP 请求头。\n当 EMQX 集群部署在负载均衡器后面时相关。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-proxy_address_header",
                                              "text" : "proxy_address_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-for\""
                                            },
                                            {
                                              "doc" : "用于传递客户端端口信息的 HTTP 请求头。\n当 EMQX 集群部署在负载均衡器后面时相关。",
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-proxy_port_header",
                                              "text" : "proxy_port_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-port\""
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Compression options.",
                                                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts",
                                                  "fields" : [
                                                    {
                                                      "doc" : "压缩级别",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-level",
                                                      "text" : "level",
                                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                                    },
                                                    {
                                                      "doc" : "指定压缩状态的大小<br/>\n较低的值会减少每个连接的内存使用。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-mem_level",
                                                      "text" : "mem_level",
                                                      "type" : "Integer(1..9)",
                                                      "default" : "8"
                                                    },
                                                    {
                                                      "doc" : "指定压缩策略。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-strategy",
                                                      "text" : "strategy",
                                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                                      "default" : "default"
                                                    },
                                                    {
                                                      "doc" : "接管意味着在服务器消息之间保留压缩状态。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_context_takeover",
                                                      "text" : "server_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "doc" : "接管意味着在客户端消息之间保留压缩状态。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_context_takeover",
                                                      "text" : "client_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "doc" : "指定服务器压缩上下文的大小。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_max_window_bits",
                                                      "text" : "server_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    },
                                                    {
                                                      "doc" : "指定客户端压缩上下文的大小。",
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_max_window_bits",
                                                      "text" : "client_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    }
                                                  ],
                                                  "text" : "deflate_opts"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts",
                                              "text" : "deflate_opts",
                                              "type" : "Struct(deflate_opts)"
                                            }
                                          ],
                                          "text" : "websocket"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket",
                                      "text" : "websocket",
                                      "type" : "Struct(websocket)"
                                    }
                                  ],
                                  "text" : "wss_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss",
                              "text" : "wss",
                              "type" : "Map($name->Struct(wss_listener))"
                            }
                          ],
                          "text" : "ws_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners",
                      "text" : "listeners",
                      "type" : "Struct(ws_listeners)"
                    },
                    {
                      "doc" : "是否启用该网关",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端统计",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo 重写。",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "username 重写模板",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "password 重写模板",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "clientid 重写模板",
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "ocpp"
                }
              ],
              "hash" : "V-gateway-S-gateway-ocpp",
              "text" : "ocpp",
              "type" : "Struct(ocpp)"
            },
            {
              "refs" : [
                {
                  "doc" : "The STOMP protocol gateway provides EMQX with the ability to access STOMP\n(Simple (or Streaming) Text Orientated Messaging Protocol) protocol.",
                  "hash" : "T-gateway-S-gateway-stomp-S-stomp",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "doc" : "Size limits for the STOMP frames.",
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame",
                          "fields" : [
                            {
                              "doc" : "头部的最大数量",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_headers",
                              "text" : "max_headers",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "允许的 Header 字符串的最大长度",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_headers_length",
                              "text" : "max_headers_length",
                              "type" : "Integer(0..+inf)",
                              "default" : "1024"
                            },
                            {
                              "doc" : "每个 Stomp 数据包允许的 Body 的最大字节数",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_body_length",
                              "text" : "max_body_length",
                              "type" : "Integer",
                              "default" : "65536"
                            }
                          ],
                          "text" : "stomp_frame"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame",
                      "text" : "frame",
                      "type" : "Struct(stomp_frame)"
                    },
                    {
                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-mountpoint",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "Settings for the TCP listeners.",
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners",
                          "fields" : [
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for TCP listener.",
                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "doc" : "从监听器名称到配置参数的映射。",
                              "refs" : [
                                {
                                  "doc" : "Settings for SSL listener.",
                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "doc" : "Acceptor 进程池大小。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-acceptors",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "doc" : "TCP Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "TCP listener options.",
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "doc" : "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "doc" : "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "如果发送超时，则关闭连接。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 TCP 接收缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "连接的 TCP 发送缓冲区（OS 内核）。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "doc" : "驱动程序使用的用户空间缓冲区的大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "doc" : "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "doc" : "连接的 TCP_NODELAY 标识",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "连接的 SO_REUSEADDR 标识。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为 7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux 默认值为 75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "doc" : "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "doc" : "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "doc" : "是否启用该监听器。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "监听器绑定的 IP 地址或端口。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-bind",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接数。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_connections",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "doc" : "监听器支持的最大连接速率。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "doc" : "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "doc" : "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-access_rules",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "doc" : "SSL Socket 配置。",
                                      "refs" : [
                                        {
                                          "doc" : "Socket options for SSL connections.",
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "doc" : "Deprecated since 5.1.4.",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "doc" : "PEM 格式的私钥文件。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "doc" : "启用或禁用对等验证。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "doc" : "启用 TLS 会话重用。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "text" : "password",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "doc" : "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含 PEM 编码的 Diffie-Hellman 参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3 不支持<code>dhfile</code>选项。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为 true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为 false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "doc" : "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "doc" : "握手完成所允许的最长时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "doc" : "内存使用调优。如果启用，将在 TLS/SSL 握手完成后立即执行垃圾回收。TLS/SSL 握手建立后立即进行 GC。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "doc" : "为服务器刷新 OCSP 响应的周期。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "doc" : "检查 OCSP 响应时，HTTP 请求的超时。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "doc" : "是否为该监听器启用 CRL 检查。",
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "text" : "tcp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_listeners)"
                    },
                    {
                      "doc" : "是否启用该网关",
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "是否开启客户端统计",
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-enable_stats",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-idle_timeout",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "doc" : "ClientInfo 重写。",
                      "refs" : [
                        {
                          "doc" : "ClientInfo override.",
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "doc" : "username 重写模板",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-username",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "doc" : "password 重写模板",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "clientid 重写模板",
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-clientid",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "text" : "stomp"
                }
              ],
              "hash" : "V-gateway-S-gateway-stomp",
              "text" : "stomp",
              "type" : "Struct(stomp)"
            }
          ],
          "text" : "gateway"
        }
      ],
      "hash" : "V-gateway",
      "text" : "gateway",
      "type" : "Struct(gateway)"
    },
    {
      "refs" : [
        {
          "doc" : "推荐的设置",
          "hash" : "T-prometheus-S-recommend_setting",
          "fields" : [
            {
              "doc" : "启用或禁用 Prometheus 抓取 API 的基本认证，不适用于 Push Gateway。",
              "hash" : "V-prometheus-S-recommend_setting-enable_basic_auth",
              "text" : "enable_basic_auth",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "Push Gateway 是可选的，如果 Prometheus 要抓取 EMQX，则不应配置。",
              "refs" : [
                {
                  "doc" : "Push Gateway 是可选的，如果 Prometheus 要抓取 EMQX，则不应配置。",
                  "hash" : "T-prometheus-S-recommend_setting-push_gateway-S-push_gateway",
                  "fields" : [
                    {
                      "doc" : "启用或禁用 Pushgateway。",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "Pushgateway 服务器的 URL。Push Gateway 是可选的，如果 Prometheus 要抓取 EMQX，则不应配置。",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-url",
                      "text" : "url",
                      "type" : "String",
                      "default" : "\"http://127.0.0.1:9091\""
                    },
                    {
                      "doc" : "数据推送间隔<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-interval",
                      "text" : "interval",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "doc" : "推送到 Push Gateway 的 HTTP Headers 列表。<br/>\n例如，<code> { Authorization = \"some-authz-tokens\"}</code>",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-headers",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "doc" : "推送到 Push Gateway 的 Job 名称。可用变量为：<br/>\n- ${name}: EMQX 节点的名称。\n- ${host}: EMQX 节点主机名。\n例如，当 EMQX 节点名为 <code>emqx@127.0.0.1</code> 则 name 变量的值为 <code>emqx</code>，host 变量的值为 <code>127.0.0.1</code>。<br/>\n默认值为: <code>${name}/instance/${name}~${host}</code>",
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-job_name",
                      "text" : "job_name",
                      "type" : "String",
                      "default" : "\"${name}/instance/${name}~${host}\""
                    }
                  ],
                  "text" : "push_gateway"
                }
              ],
              "hash" : "V-prometheus-S-recommend_setting-push_gateway",
              "text" : "push_gateway",
              "type" : "Struct(push_gateway)"
            },
            {
              "doc" : "虚拟机的内部高级指标最初是禁用的\n通常只在性能测试期间启用。\n启用它们将增加 CPU 负载。",
              "refs" : [
                {
                  "doc" : "虚拟机的内部高级指标最初是禁用的\n通常只在性能测试期间启用。\n启用它们将增加 CPU 负载。",
                  "hash" : "T-prometheus-S-recommend_setting-collectors-S-collectors",
                  "fields" : [
                    {
                      "doc" : "开启或关闭 VM 分布采集器，收集 Erlang 分布机制中涉及的套接字和进程的信息。",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_dist",
                      "text" : "vm_dist",
                      "type" : "Enum(disabled,enabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "开启或关闭 Mnesia 采集器, 使用 mnesia:system_info/1 收集 Mnesia 相关指标",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-mnesia",
                      "text" : "mnesia",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "开启或关闭 VM 统计采集器, 使用 erlang:statistics/1 收集 Erlang VM 相关指标",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_statistics",
                      "text" : "vm_statistics",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "开启或关闭 VM 系统信息采集器, 使用 erlang:system_info/1 收集 Erlang VM 相关指标",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_system_info",
                      "text" : "vm_system_info",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "开启或关闭 VM 内存采集器, 使用 erlang:memory/0 收集 Erlang 虚拟机动态分配的内存信息，同时提供基本的 (D)ETS 统计信息",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_memory",
                      "text" : "vm_memory",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "doc" : "开启或关闭 VM msacc 采集器, 使用 erlang:statistics(microstate_accounting) 收集微状态计数指标",
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_msacc",
                      "text" : "vm_msacc",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    }
                  ],
                  "text" : "collectors"
                }
              ],
              "hash" : "V-prometheus-S-recommend_setting-collectors",
              "text" : "collectors",
              "type" : "Struct(collectors)"
            }
          ],
          "text" : "recommend_setting"
        },
        {
          "doc" : "自5.4.0版本起弃用。",
          "hash" : "T-prometheus-S-legacy_deprecated_setting",
          "fields" : [
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.push_gateway.url`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-push_gateway_server",
              "text" : "push_gateway_server",
              "type" : "String",
              "default" : "\"http://127.0.0.1:9091\""
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.push_gateway.interval`。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-interval",
              "text" : "interval",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.push_gateway.headers`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-headers",
              "text" : "headers",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.push_gateway.job_name`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-job_name",
              "text" : "job_name",
              "type" : "String",
              "default" : "\"${name}/instance/${name}~${host}\""
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.push_gateway.url`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.collectors.vm_dist`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_dist_collector",
              "text" : "vm_dist_collector",
              "type" : "Enum(disabled,enabled)",
              "default" : "disabled"
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.collectors.mnesia`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-mnesia_collector",
              "text" : "mnesia_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.collectors.vm_statistics`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_statistics_collector",
              "text" : "vm_statistics_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.collectors.vm_system_info`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_system_info_collector",
              "text" : "vm_system_info_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.collectors.vm_memory`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_memory_collector",
              "text" : "vm_memory_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "doc" : "自5.4.0版本起弃用，改用 `prometheus.collectors.vm_msacc`。",
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_msacc_collector",
              "text" : "vm_msacc_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            }
          ],
          "text" : "legacy_deprecated_setting"
        }
      ],
      "hash" : "V-prometheus",
      "text" : "prometheus",
      "type" : "OneOf(Struct(recommend_setting),Struct(legacy_deprecated_setting))",
      "default" : "{}"
    },
    {
      "refs" : [
        {
          "doc" : "External hook (exhook) configuration.",
          "hash" : "T-exhook-S-exhook",
          "fields" : [
            {
              "doc" : "ExHook 服务器列表",
              "refs" : [
                {
                  "doc" : "gRPC server configuration.",
                  "hash" : "T-exhook-S-exhook-servers-S-server",
                  "fields" : [
                    {
                      "doc" : "ExHook 服务器名称",
                      "hash" : "V-exhook-S-exhook-servers-S-server-name",
                      "text" : "name",
                      "type" : "String"
                    },
                    {
                      "doc" : "开启这个 Exhook 服务器",
                      "hash" : "V-exhook-S-exhook-servers-S-server-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "doc" : "gRPC 服务器地址",
                      "hash" : "V-exhook-S-exhook-servers-S-server-url",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "doc" : "gRPC 服务器请求超时<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-exhook-S-exhook-servers-S-server-request_timeout",
                      "text" : "request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "当 gRPC 请求失败后的操作",
                      "hash" : "V-exhook-S-exhook-servers-S-server-failed_action",
                      "text" : "failed_action",
                      "type" : "Enum(deny,ignore)",
                      "default" : "deny"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "SSL client configuration.",
                          "hash" : "T-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_conf"
                        }
                      ],
                      "hash" : "V-exhook-S-exhook-servers-S-server-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_conf)"
                    },
                    {
                      "refs" : [
                        {
                          "doc" : "连接套接字设置",
                          "hash" : "T-exhook-S-exhook-servers-S-server-socket_options-S-socket_options",
                          "fields" : [
                            {
                              "doc" : "当没有其他数据交换时，是否向连接的对端套接字定期的发送探测包。如果另一端没有响应，则认为连接断开，并向控制进程发送错误消息。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-keepalive",
                              "text" : "keepalive",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "如果为 true，则为套接字设置 TCP_NODELAY 选项，这意味着会立即发送数据包",
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-nodelay",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "套接字的最小接收缓冲区大小<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-recbuf",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "doc" : "套接字的最小发送缓冲区大小<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-sndbuf",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            }
                          ],
                          "text" : "socket_options"
                        }
                      ],
                      "hash" : "V-exhook-S-exhook-servers-S-server-socket_options",
                      "text" : "socket_options",
                      "type" : "Struct(socket_options)",
                      "default" : "{keepalive = true, nodelay = true}"
                    },
                    {
                      "doc" : "自动重连到 gRPC 服务器的设置。\n当 gRPC 服务器不可用时，Exhook 将会按照这里设置的间隔时间进行重连，并重新初始化注册的钩子",
                      "hash" : "V-exhook-S-exhook-servers-S-server-auto_reconnect",
                      "text" : "auto_reconnect",
                      "type" : "OneOf(String(\"false\"),Duration)",
                      "default" : "\"60s\""
                    },
                    {
                      "doc" : "gRPC 客户端进程池大小",
                      "hash" : "V-exhook-S-exhook-servers-S-server-pool_size",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    }
                  ],
                  "text" : "server"
                }
              ],
              "hash" : "V-exhook-S-exhook-servers",
              "text" : "servers",
              "type" : "Array(Struct(server))",
              "default" : "[]"
            }
          ],
          "text" : "exhook"
        }
      ],
      "hash" : "V-exhook",
      "text" : "exhook",
      "type" : "Struct(exhook)"
    },
    {
      "refs" : [
        {
          "doc" : "此配置用于启用 TLS-PSK 身份验证。\n\nPSK 是 “Pre-Shared-Keys” 的缩写。\n\n注意: 确保 SSL 监听器仅启用了 'tlsv1.2'，并且配置了 PSK 密码套件，例如 'RSA-PSK-AES256-GCM-SHA384'。\n\n可以通过查看监听器中的 SSL 选项，了解更多详细信息。\n\n可以通过配置 'init_file' 来设置初始化的 ID 和 密钥",
          "hash" : "T-psk_authentication-S-psk_authentication",
          "fields" : [
            {
              "doc" : "是否开启 TLS PSK 支持",
              "hash" : "V-psk_authentication-S-psk_authentication-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "如果设置了初始化文件，EMQX 将在启动时从初始化文件中导入 PSK 信息到内建数据库中。\n这个文件需要按行进行组织，每一行必须遵守如下格式: <code>PSKIdentity:SharedSecret</code>\n例如: <code>mydevice1:c2VjcmV0</code>",
              "hash" : "V-psk_authentication-S-psk_authentication-init_file",
              "text" : "init_file",
              "type" : "String"
            },
            {
              "doc" : "PSK 文件中 <code>PSKIdentity</code> 和 <code>SharedSecret</code> 之间的分隔符",
              "hash" : "V-psk_authentication-S-psk_authentication-separator",
              "text" : "separator",
              "type" : "String",
              "default" : "\":\""
            },
            {
              "doc" : "将 PSK 文件导入到内建数据时每个块的大小",
              "hash" : "V-psk_authentication-S-psk_authentication-chunk_size",
              "text" : "chunk_size",
              "type" : "Integer",
              "default" : "50"
            }
          ],
          "text" : "psk_authentication"
        }
      ],
      "hash" : "V-psk_authentication",
      "text" : "psk_authentication",
      "type" : "Struct(psk_authentication)"
    },
    {
      "refs" : [
        {
          "doc" : "Configuration for `slow_subs` feature.",
          "hash" : "T-slow_subs-S-slow_subs",
          "fields" : [
            {
              "doc" : "开启慢订阅",
              "hash" : "V-slow_subs-S-slow_subs-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "慢订阅统计的阈值<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-slow_subs-S-slow_subs-threshold",
              "text" : "threshold",
              "type" : "Duration",
              "default" : "\"500ms\""
            },
            {
              "doc" : "慢订阅记录的有效时间<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-slow_subs-S-slow_subs-expire_interval",
              "text" : "expire_interval",
              "type" : "Duration",
              "default" : "\"300s\""
            },
            {
              "doc" : "慢订阅统计表的记录数量上限",
              "hash" : "V-slow_subs-S-slow_subs-top_k_num",
              "text" : "top_k_num",
              "type" : "Integer(1..+inf)",
              "default" : "10"
            },
            {
              "doc" : "慢订阅的统计类型",
              "hash" : "V-slow_subs-S-slow_subs-stats_type",
              "text" : "stats_type",
              "type" : "Enum(whole,internal,response)",
              "default" : "whole"
            }
          ],
          "text" : "slow_subs"
        }
      ],
      "hash" : "V-slow_subs",
      "text" : "slow_subs",
      "type" : "Struct(slow_subs)"
    },
    {
      "refs" : [
        {
          "doc" : "Open Telemetry 工具包配置",
          "hash" : "T-opentelemetry-S-opentelemetry",
          "fields" : [
            {
              "doc" : "Open Telemetry 指标配置。",
              "refs" : [
                {
                  "doc" : "Open Telemetry 指标配置。",
                  "hash" : "T-opentelemetry-S-opentelemetry-metrics-S-otel_metrics",
                  "fields" : [
                    {
                      "doc" : "启用或禁用 open telemetry 指标",
                      "hash" : "V-opentelemetry-S-opentelemetry-metrics-S-otel_metrics-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "两次连续导出 Open Telemetry 信号之间的延迟间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-opentelemetry-S-opentelemetry-metrics-S-otel_metrics-interval",
                      "aliases" : [
                        "scheduled_delay"
                      ],
                      "text" : "interval",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    }
                  ],
                  "text" : "otel_metrics"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-metrics",
              "text" : "metrics",
              "type" : "Struct(otel_metrics)"
            },
            {
              "doc" : "Open Telemetry 日志配置。如果启用，EMQX 将安装一个日志处理器，根据 Open Telemetry 日志数据模型格式化事件，并将它们导出到配置的 Open Telemetry 收集器或后端。",
              "refs" : [
                {
                  "doc" : "Open Telemetry 日志配置。如果启用，EMQX 将安装一个日志处理器，根据 Open Telemetry 日志数据模型格式化事件，并将它们导出到配置的 Open Telemetry 收集器或后端。",
                  "hash" : "T-opentelemetry-S-opentelemetry-logs-S-otel_logs",
                  "fields" : [
                    {
                      "doc" : "Open Telemetry 日志处理器的日志级别。",
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-level",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "doc" : "启用或禁用 open telemetry 指标",
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "两次连续导出 Open Telemetry 信号之间的延迟间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-scheduled_delay",
                      "text" : "scheduled_delay",
                      "type" : "Duration",
                      "default" : "\"1s\""
                    }
                  ],
                  "text" : "otel_logs"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-logs",
              "text" : "logs",
              "type" : "Struct(otel_logs)"
            },
            {
              "doc" : "Open Telemetry 追踪配置。",
              "refs" : [
                {
                  "doc" : "Open Telemetry 追踪配置。",
                  "hash" : "T-opentelemetry-S-opentelemetry-traces-S-otel_traces",
                  "fields" : [
                    {
                      "doc" : "启用或禁用 open telemetry 指标",
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-enable",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "doc" : "两次连续导出 Open Telemetry 信号之间的延迟间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-scheduled_delay",
                      "text" : "scheduled_delay",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "doc" : "Open Telemetry 追踪过滤器配置",
                      "refs" : [
                        {
                          "doc" : "Open Telemetry 追踪过滤器配置",
                          "hash" : "T-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter",
                          "fields" : [
                            {
                              "doc" : "如果启用，将追踪所有发布的消息，如果无法从消息中提取追踪 ID，则生成新的追踪 ID。\n否则，只追踪带有追踪上下文的消息。默认禁用。",
                              "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-trace_all",
                              "text" : "trace_all",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "text" : "trace_filter"
                        }
                      ],
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter",
                      "text" : "filter",
                      "type" : "Struct(trace_filter)"
                    }
                  ],
                  "text" : "otel_traces"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-traces",
              "text" : "traces",
              "type" : "Struct(otel_traces)"
            },
            {
              "doc" : "Open Telemetry 导出器",
              "refs" : [
                {
                  "doc" : "Open Telemetry 导出器",
                  "hash" : "T-opentelemetry-S-opentelemetry-exporter-S-otel_exporter",
                  "fields" : [
                    {
                      "doc" : "导出器将要发送 Open Telemetry 信号数据的目标 URL。",
                      "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-endpoint",
                      "text" : "endpoint",
                      "type" : "String",
                      "default" : "\"http://localhost:4317\""
                    },
                    {
                      "doc" : "Open Telemetry 导出器的 SSL 配置",
                      "refs" : [
                        {
                          "doc" : "Socket options for SSL clients.",
                          "hash" : "T-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts",
                          "fields" : [
                            {
                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-cacertfile",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "Deprecated since 5.1.4.",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-cacerts",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-certfile",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "PEM 格式的私钥文件。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-keyfile",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "doc" : "启用或禁用对等验证。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-verify",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "doc" : "启用 TLS 会话重用。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-reuse_sessions",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-depth",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-password",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-versions",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-ciphers",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-secure_renegotiate",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-log_level",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-hibernate_after",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "doc" : "启用 TLS。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-server_name_indication",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "text" : "otel_exporter"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-exporter",
              "text" : "exporter",
              "type" : "Struct(otel_exporter)"
            }
          ],
          "text" : "opentelemetry"
        }
      ],
      "hash" : "V-opentelemetry",
      "text" : "opentelemetry",
      "type" : "Struct(opentelemetry)"
    },
    {
      "refs" : [
        {
          "doc" : "API 密钥， 可用于请求除管理 API 密钥及 Dashboard 用户管理 API 的其它接口",
          "hash" : "T-api_key-S-api_key",
          "fields" : [
            {
              "doc" : "用于在启动 EMQX 时，添加 API 密钥，其格式为 {appid}:{secret}，多个密钥用换行分隔。：\n      ```\n      7e729ae70d23144b:2QILI9AcQ9BYlVqLDHQNWN2saIjBV4egr1CZneTNKr9CpK\n      ec3907f865805db0:Ee3taYltUKtoBVD9C3XjQl9C6NXheip8Z9B69BpUv5JxVHL\n      ```",
              "hash" : "V-api_key-S-api_key-bootstrap_file",
              "text" : "bootstrap_file",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "text" : "api_key"
        }
      ],
      "hash" : "V-api_key",
      "text" : "api_key",
      "type" : "Struct(api_key)"
    },
    {
      "doc" : "EMQX 企业版 License 。\nEMQX 自带一个默认的试用 License，允许最多接入 100 个连接，签发时间是 2023 年 1 月 9 日，有效期是 5 年（1825 天）。若需要在生产环境部署，\n请购买 License 或访问 https://www.emqx.com/apply-licenses/emqx 申请。",
      "refs" : [
        {
          "doc" : "License provisioned as a string.",
          "hash" : "T-license-S-key_license",
          "fields" : [
            {
              "doc" : "申请或购买 License 时获得的密钥字符串",
              "hash" : "V-license-S-key_license-key",
              "text" : "key",
              "type" : "OneOf(String(\"default\"),String)",
              "default" : "default"
            },
            {
              "doc" : "连接数低于此值是，系统会清除连接配额使用告警",
              "hash" : "V-license-S-key_license-connection_low_watermark",
              "text" : "connection_low_watermark",
              "type" : "String",
              "default" : "\"75%\""
            },
            {
              "doc" : "连接数超过该值时，系统会触发 License 连接配额使用告警",
              "hash" : "V-license-S-key_license-connection_high_watermark",
              "text" : "connection_high_watermark",
              "type" : "String",
              "default" : "\"80%\""
            }
          ],
          "text" : "key_license"
        }
      ],
      "hash" : "V-license",
      "text" : "license",
      "type" : "Struct(key_license)"
    },
    {
      "refs" : [
        {
          "doc" : "Schema registry 的配置。",
          "hash" : "T-schema_registry-S-schema_registry",
          "fields" : [
            {
              "doc" : "已注册的 schema。",
              "refs" : [
                {
                  "doc" : "[Apache Avro](https://avro.apache.org/) 序列化格式。",
                  "hash" : "T-schema_registry-S-schema_registry-schemas-S-avro",
                  "fields" : [
                    {
                      "doc" : "对于 Avro schema，必须是 avro。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-avro-type",
                      "text" : "type",
                      "type" : "String(\"avro\")"
                    },
                    {
                      "doc" : "Schema 的源文本。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-avro-source",
                      "text" : "source",
                      "type" : "String"
                    },
                    {
                      "doc" : "改 schema 的描述。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-avro-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "text" : "avro"
                },
                {
                  "doc" : "[Protocol Buffers](https://protobuf.dev/) 序列化格式。",
                  "hash" : "T-schema_registry-S-schema_registry-schemas-S-protobuf",
                  "fields" : [
                    {
                      "doc" : "对于 protobuf schema，必须是 protobuf。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-protobuf-type",
                      "text" : "type",
                      "type" : "String(\"protobuf\")"
                    },
                    {
                      "doc" : "Schema 的源文本。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-protobuf-source",
                      "text" : "source",
                      "type" : "String"
                    },
                    {
                      "doc" : "改 schema 的描述。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-protobuf-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "text" : "protobuf"
                },
                {
                  "doc" : "支持 JSON Schema\n[Draft 03](http://tools.ietf.org/html/draft-zyp-json-schema-03)\n[Draft 04](http://tools.ietf.org/html/draft-zyp-json-schema-04) 以及\n[Draft 06](https://datatracker.ietf.org/doc/html/draft-wright-json-schema-00).",
                  "hash" : "T-schema_registry-S-schema_registry-schemas-S-json",
                  "fields" : [
                    {
                      "doc" : "对于 JSON schema，必须是 json。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-json-type",
                      "text" : "type",
                      "type" : "String(\"json\")"
                    },
                    {
                      "doc" : "Schema 的源文本。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-json-source",
                      "text" : "source",
                      "type" : "String"
                    },
                    {
                      "doc" : "改 schema 的描述。",
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-json-description",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "text" : "json"
                }
              ],
              "hash" : "V-schema_registry-S-schema_registry-schemas",
              "text" : "schemas",
              "type" : "Map($name->OneOf(Struct(avro),Struct(protobuf),Struct(json)))",
              "default" : "{}"
            }
          ],
          "text" : "schema_registry"
        }
      ],
      "hash" : "V-schema_registry",
      "text" : "schema_registry",
      "type" : "Struct(schema_registry)"
    },
    {
      "refs" : [
        {
          "doc" : "File transfer settings",
          "hash" : "T-file_transfer-S-file_transfer",
          "fields" : [
            {
              "doc" : "启用文件传输（File Transfer）服务。<br/>\n文件传输服务允许客户端使用 `$file` 主题将分片上传到 EMQX。\n启用文件传输服务表示 `$file` 主题前缀已被预留，用于提供文件传输服务。<br/>\n这个开关也会影响文件传输 REST API 的可用性，以及依赖存储的后台任务（例如垃圾回收）。",
              "hash" : "V-file_transfer-S-file_transfer-enable",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "doc" : "指定文件传输初始化的时间限制。在<br/>\nEMQX 服务器过载时可能发生初始化超时。超时后给 `init` 的 PUBACK 中包含一个错误码 （0x80）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-file_transfer-S-file_transfer-init_timeout",
              "text" : "init_timeout",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "doc" : "文件片段保存超时。<br/>\nEMQX 收到文件分片后，会对它进行保存，如果发生超时（例如系统过载），则会给这个发布消息的 PUBACK 中包含一个错误码（0x80）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-file_transfer-S-file_transfer-store_segment_timeout",
              "text" : "store_segment_timeout",
              "type" : "Duration",
              "default" : "\"5m\""
            },
            {
              "doc" : "文件拼接超时。<br/>\n在收到 'fin' 消息后 EMQX 会对文件进行拼接，如果发生超时（例如系统过载），则会给 'fin' 的 PUBACK 中包含一个错误码（0x80）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
              "hash" : "V-file_transfer-S-file_transfer-assemble_timeout",
              "text" : "assemble_timeout",
              "type" : "Duration",
              "default" : "\"5m\""
            },
            {
              "doc" : "文件后端存储配置",
              "refs" : [
                {
                  "doc" : "Storage backend settings for file transfer",
                  "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend",
                  "fields" : [
                    {
                      "doc" : "EMQX 节点本地用文件系统于存储文件分片的相关配置。",
                      "refs" : [
                        {
                          "doc" : "File transfer local storage settings",
                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage",
                          "fields" : [
                            {
                              "doc" : "本地文件系统存储配置，包括已上传的文件分片和临时数据。",
                              "refs" : [
                                {
                                  "doc" : "File transfer local segments storage settings",
                                  "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments",
                                  "fields" : [
                                    {
                                      "doc" : "文件分片存储的根目录。",
                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-root",
                                      "text" : "root",
                                      "type" : "String"
                                    },
                                    {
                                      "doc" : "文件系统中临时文件的垃圾回收配置。",
                                      "refs" : [
                                        {
                                          "doc" : "Garbage collection settings for the File transfer local segments storage",
                                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc",
                                          "fields" : [
                                            {
                                              "doc" : "运行垃圾回收的时间间隔。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-interval",
                                              "text" : "interval",
                                              "type" : "Duration",
                                              "default" : "\"1h\""
                                            },
                                            {
                                              "doc" : "分片的临时存储的最大 TTL。<br/>\n该配置为系统全局上限，所有的分片都不会超过这个 TTL，即使某些文件传输指定了一个更大的 TTL。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-maximum_segments_ttl",
                                              "text" : "maximum_segments_ttl",
                                              "type" : "Duration(s)",
                                              "default" : "\"24h\""
                                            },
                                            {
                                              "doc" : "分片的临时存储的最小 TTL。<br/>\n分片在超过这个 TTL 之前不被垃圾回收。\n该配置为系统全局下限，所有的分片都不会低于这个 TTL，即使某些文件传输指定了一个更小的 TTL。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-minimum_segments_ttl",
                                              "text" : "minimum_segments_ttl",
                                              "type" : "Duration(s)",
                                              "default" : "\"5m\""
                                            }
                                          ],
                                          "text" : "local_storage_segments_gc"
                                        }
                                      ],
                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc",
                                      "text" : "gc",
                                      "type" : "Struct(local_storage_segments_gc)"
                                    }
                                  ],
                                  "text" : "local_storage_segments"
                                }
                              ],
                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments",
                              "text" : "segments",
                              "type" : "Struct(local_storage_segments)",
                              "default" : "{gc {}}"
                            },
                            {
                              "doc" : "将文件导出到本地存储<br/>\n该配置项指定所有分片都传输完成了的文件进行导出到本地存储的相关行为。",
                              "refs" : [
                                {
                                  "doc" : "Exporter for the local file system storage backend",
                                  "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend",
                                  "fields" : [
                                    {
                                      "doc" : "将文件导出到本地存储。",
                                      "refs" : [
                                        {
                                          "doc" : "Local Exporter settings for the File transfer local storage backend",
                                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local-S-local_storage_exporter",
                                          "fields" : [
                                            {
                                              "doc" : "导出到本地文件时使用的根目录。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local-S-local_storage_exporter-root",
                                              "text" : "root",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "是否启用该后端",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local-S-local_storage_exporter-enable",
                                              "text" : "enable",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "local_storage_exporter"
                                        }
                                      ],
                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local",
                                      "text" : "local",
                                      "type" : "Struct(local_storage_exporter)"
                                    },
                                    {
                                      "doc" : "将文件导出到 AWS s3 API 兼容的对象存储服务。",
                                      "refs" : [
                                        {
                                          "doc" : "S3 Exporter settings for the File transfer local storage backend",
                                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter",
                                          "fields" : [
                                            {
                                              "doc" : "S3 桶的访问密钥 ID。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-access_key_id",
                                              "text" : "access_key_id",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "S3 桶的密钥访问密钥。<br/>包含一些敏感信息的字符串，例如密码。当密钥以 <code>file://</code> 开头时，字符串的其余部分将被解释为包含密钥本身的文件路径：文件的整个内容（除了任何尾随的空白字符）都被视为密钥值。注意：在集群中，所有 EMQX 节点在使用 <code>file://</code> 密钥之前应该具有相同的文件。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-secret_access_key",
                                              "text" : "secret_access_key",
                                              "type" : "Secret"
                                            },
                                            {
                                              "doc" : "S3 端点的主机。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-host",
                                              "text" : "host",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "S3 端点的端口。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-port",
                                              "text" : "port",
                                              "type" : "Integer(1..+inf)"
                                            },
                                            {
                                              "doc" : "S3 客户端使用的 HTTP 传输层选项。",
                                              "refs" : [
                                                {
                                                  "doc" : "Options for the HTTP transport layer used by the S3 client",
                                                  "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options",
                                                  "fields" : [
                                                    {
                                                      "doc" : "是否探测 IPv6 支持。",
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ipv6_probe",
                                                      "text" : "ipv6_probe",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "doc" : "连接到 HTTP 服务器的超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-connect_timeout",
                                                      "text" : "connect_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    },
                                                    {
                                                      "doc" : "连接池类型。可以是random、hash之一。",
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-pool_type",
                                                      "text" : "pool_type",
                                                      "type" : "Enum(random,hash)",
                                                      "default" : "random"
                                                    },
                                                    {
                                                      "doc" : "连接池大小。",
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-pool_size",
                                                      "text" : "pool_size",
                                                      "type" : "Integer(1..+inf)",
                                                      "default" : "8"
                                                    },
                                                    {
                                                      "doc" : "一个正整数。是否连续发送 HTTP 请求，当设置为1时，意味着在发送每个 HTTP 请求后，需要等待服务器返回，然后继续发送下一个请求。",
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-enable_pipelining",
                                                      "text" : "enable_pipelining",
                                                      "type" : "Integer(1..+inf)",
                                                      "default" : "100"
                                                    },
                                                    {
                                                      "doc" : "启用 SSL 连接。",
                                                      "refs" : [
                                                        {
                                                          "doc" : "Socket options for SSL clients.",
                                                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts",
                                                          "fields" : [
                                                            {
                                                              "doc" : "受信任的 PEM 格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证 TLS 对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启 EMQX 即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacertfile",
                                                              "text" : "cacertfile",
                                                              "type" : "String"
                                                            },
                                                            {
                                                              "doc" : "Deprecated since 5.1.4.",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacerts",
                                                              "text" : "cacerts",
                                                              "type" : "Boolean"
                                                            },
                                                            {
                                                              "doc" : "PEM 格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-certfile",
                                                              "text" : "certfile",
                                                              "type" : "String"
                                                            },
                                                            {
                                                              "doc" : "PEM 格式的私钥文件。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-keyfile",
                                                              "text" : "keyfile",
                                                              "type" : "String"
                                                            },
                                                            {
                                                              "doc" : "启用或禁用对等验证。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify",
                                                              "text" : "verify",
                                                              "type" : "Enum(verify_peer,verify_none)",
                                                              "default" : "verify_none"
                                                            },
                                                            {
                                                              "doc" : "启用 TLS 会话重用。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-reuse_sessions",
                                                              "text" : "reuse_sessions",
                                                              "type" : "Boolean",
                                                              "default" : "true"
                                                            },
                                                            {
                                                              "doc" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为 0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是 1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是 2，则路径可以是 PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-depth",
                                                              "text" : "depth",
                                                              "type" : "Integer(0..+inf)",
                                                              "default" : "10"
                                                            },
                                                            {
                                                              "doc" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-password",
                                                              "text" : "password",
                                                              "type" : "String"
                                                            },
                                                            {
                                                              "doc" : "支持所有 TLS/DTLS 版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-versions",
                                                              "text" : "versions",
                                                              "type" : "Array(String)",
                                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                                            },
                                                            {
                                                              "doc" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用 PSK 密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-ciphers",
                                                              "text" : "ciphers",
                                                              "type" : "Array(String)",
                                                              "default" : "[]"
                                                            },
                                                            {
                                                              "doc" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-secure_renegotiate",
                                                              "text" : "secure_renegotiate",
                                                              "type" : "Boolean",
                                                              "default" : "true"
                                                            },
                                                            {
                                                              "doc" : "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-log_level",
                                                              "text" : "log_level",
                                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                                              "default" : "notice"
                                                            },
                                                            {
                                                              "doc" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-hibernate_after",
                                                              "text" : "hibernate_after",
                                                              "type" : "Duration",
                                                              "default" : "\"5s\""
                                                            },
                                                            {
                                                              "doc" : "启用 TLS。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-enable",
                                                              "text" : "enable",
                                                              "type" : "Boolean",
                                                              "default" : "false"
                                                            },
                                                            {
                                                              "doc" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-server_name_indication",
                                                              "text" : "server_name_indication",
                                                              "type" : "OneOf(String(\"disable\"),String)"
                                                            }
                                                          ],
                                                          "text" : "ssl_client_opts"
                                                        }
                                                      ],
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl",
                                                      "text" : "ssl",
                                                      "type" : "Struct(ssl_client_opts)",
                                                      "default" : "{enable = false}"
                                                    },
                                                    {
                                                      "doc" : "HTTP 请求头列表。",
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-headers",
                                                      "text" : "headers",
                                                      "type" : "Map"
                                                    },
                                                    {
                                                      "doc" : "如果发送请求时出错，最大重试次数。",
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-max_retries",
                                                      "text" : "max_retries",
                                                      "type" : "Integer(0..+inf)"
                                                    },
                                                    {
                                                      "doc" : "HTTP 请求超时时间。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-request_timeout",
                                                      "text" : "request_timeout",
                                                      "type" : "Duration"
                                                    }
                                                  ],
                                                  "text" : "transport_options"
                                                }
                                              ],
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options",
                                              "text" : "transport_options",
                                              "type" : "Struct(transport_options)"
                                            },
                                            {
                                              "doc" : "多部分上传的最小部分大小。<br/>\n上传的数据将在内存中累积，直到达到此大小。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-min_part_size",
                                              "text" : "min_part_size",
                                              "type" : "Bytesize",
                                              "default" : "\"5mb\""
                                            },
                                            {
                                              "doc" : "多部分上传的最大部分大小。<br/>\nS3 上传器不会尝试上传超过此大小的部分。<br/>表示字节数量的字符串，例如：<code>10B</code>、<code>640kb</code>、<code>4MB</code>、<code>1GB</code>。单位以 1024 的幂次来解释，并且单位部分不区分大小写。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-max_part_size",
                                              "text" : "max_part_size",
                                              "type" : "Bytesize",
                                              "default" : "\"5gb\""
                                            },
                                            {
                                              "doc" : "S3 对象的签名 URL 有效时间（秒）。<br/>表示时间持续的字符串，例如：<code>10s</code>、<code>2.5m</code>、<code>1h30m</code>、<code>1W2D</code> 或 <code>2345ms</code>，其中 <code>ms</code> 是最小单位。当指定精度时，可能会忽略更精细的时间部分：例如将 <code>1200ms</code> 用于 <code>Duration(s)</code> 相当于写 <code>1s</code>。单位部分不区分大小写。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-url_expire_time",
                                              "text" : "url_expire_time",
                                              "type" : "Duration(s)",
                                              "default" : "\"1h\""
                                            },
                                            {
                                              "doc" : "S3 桶的名称。<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-bucket",
                                              "text" : "bucket",
                                              "type" : "String"
                                            },
                                            {
                                              "doc" : "上传对象使用的 ACL。",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-acl",
                                              "text" : "acl",
                                              "type" : "Enum(private,public_read,public_read_write,authenticated_read,bucket_owner_read,bucket_owner_full_control)"
                                            },
                                            {
                                              "doc" : "是否启用该后端",
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-enable",
                                              "text" : "enable",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "text" : "s3_exporter"
                                        }
                                      ],
                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3",
                                      "text" : "s3",
                                      "type" : "Struct(s3_exporter)"
                                    }
                                  ],
                                  "text" : "local_storage_exporter_backend"
                                }
                              ],
                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter",
                              "text" : "exporter",
                              "type" : "Struct(local_storage_exporter_backend)",
                              "default" : "{local {}}"
                            },
                            {
                              "doc" : "是否启用该后端",
                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-enable",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "text" : "local_storage"
                        }
                      ],
                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local",
                      "text" : "local",
                      "type" : "Struct(local_storage)"
                    }
                  ],
                  "text" : "storage_backend"
                }
              ],
              "hash" : "V-file_transfer-S-file_transfer-storage",
              "text" : "storage",
              "type" : "Struct(storage_backend)",
              "default" : "{local {}}"
            }
          ],
          "text" : "file_transfer"
        }
      ],
      "hash" : "V-file_transfer",
      "text" : "file_transfer",
      "type" : "Struct(file_transfer)"
    }
  ],
  "text" : "root"
}