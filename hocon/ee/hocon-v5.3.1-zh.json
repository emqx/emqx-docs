{
  "doc": "",
  "fields": [
    {
      "hash": "V-listeners",
      "refs": [
        {
          "doc": "MQTT listeners identified by their protocol type and assigned names",
          "fields": [
            {
              "doc": "TCP 监听器。",
              "hash": "V-listeners-S-listeners-tcp",
              "refs": [
                {
                  "doc": "Settings for the MQTT over TCP listener.",
                  "fields": [
                    {
                      "aliases": [
                        "enabled"
                      ],
                      "default": "true",
                      "doc": "启停监听器。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "1883",
                      "doc": "监听套接字的 IP 地址和端口。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bind",
                      "text": "bind",
                      "type": "String"
                    },
                    {
                      "default": "16",
                      "doc": "监听器接收池的大小。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-acceptors",
                      "text": "acceptors",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "infinity",
                      "doc": "监听器允许的最大并发连接数。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_connections",
                      "text": "max_connections",
                      "type": "OneOf(String(\"infinity\"),Integer(1..+inf))"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端B（与客户端A连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "default": "true",
                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-enable_authn",
                      "text": "enable_authn",
                      "type": "Enum(true,false,quick_deny_anonymous)"
                    },
                    {
                      "doc": "最大连接率。<br/> 用于限制该监听器的连接速率，一旦达到限制值，新的连接将被推迟或拒绝。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_conn_rate",
                      "text": "max_conn_rate",
                      "type": "String"
                    },
                    {
                      "doc": "消息发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站消息数，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-messages_rate",
                      "text": "messages_rate",
                      "type": "String"
                    },
                    {
                      "doc": "数据发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站字节速率，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bytes_rate",
                      "text": "bytes_rate",
                      "type": "String"
                    },
                    {
                      "default": "[\"allow all\"]",
                      "doc": "此监听器的访问控制规则。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-access_rules",
                      "text": "access_rules",
                      "type": "Array(String)"
                    },
                    {
                      "default": "false",
                      "doc": "如果EMQX集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-proxy_protocol",
                      "text": "proxy_protocol",
                      "type": "Boolean"
                    },
                    {
                      "default": "3s",
                      "doc": "代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX将关闭TCP连接。",
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-proxy_protocol_timeout",
                      "text": "proxy_protocol_timeout",
                      "type": "String"
                    },
                    {
                      "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options",
                      "refs": [
                        {
                          "doc": "TCP listener options.",
                          "fields": [
                            {
                              "default": "100",
                              "doc": "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-active_n",
                              "text": "active_n",
                              "type": "Integer"
                            },
                            {
                              "default": "1024",
                              "doc": "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-backlog",
                              "text": "backlog",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "15s",
                              "doc": "连接的 TCP 发送超时。",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text": "send_timeout",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "如果发送超时，则关闭连接。",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text": "send_timeout_close",
                              "type": "Boolean"
                            },
                            {
                              "doc": "连接的 TCP 接收缓冲区（OS 内核）。",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "doc": "连接的 TCP 发送缓冲区（OS 内核）。",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "4KB",
                              "doc": "驱动程序使用的用户空间缓冲区的大小。",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-buffer",
                              "text": "buffer",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text": "high_watermark",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "连接的 TCP_NODELAY 标识",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "连接的 SO_REUSEADDR 标识。",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text": "reuseaddr",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux默认值为75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                              "hash": "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-keepalive",
                              "text": "keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts",
                          "text": "tcp_opts"
                        }
                      ],
                      "text": "tcp_options",
                      "type": "Struct(tcp_opts)"
                    }
                  ],
                  "hash": "T-listeners-S-listeners-tcp-S-mqtt_tcp_listener",
                  "text": "mqtt_tcp_listener"
                }
              ],
              "text": "tcp",
              "type": "Map($name->OneOf(Struct(mqtt_tcp_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc": "SSL 监听器。",
              "hash": "V-listeners-S-listeners-ssl",
              "refs": [
                {
                  "doc": "Settings for the MQTT over SSL listener.",
                  "fields": [
                    {
                      "aliases": [
                        "enabled"
                      ],
                      "default": "true",
                      "doc": "启停监听器。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "8883",
                      "doc": "监听套接字的 IP 地址和端口。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bind",
                      "text": "bind",
                      "type": "String"
                    },
                    {
                      "default": "16",
                      "doc": "监听器接收池的大小。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-acceptors",
                      "text": "acceptors",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "infinity",
                      "doc": "监听器允许的最大并发连接数。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_connections",
                      "text": "max_connections",
                      "type": "OneOf(String(\"infinity\"),Integer(1..+inf))"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端B（与客户端A连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "default": "true",
                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-enable_authn",
                      "text": "enable_authn",
                      "type": "Enum(true,false,quick_deny_anonymous)"
                    },
                    {
                      "doc": "最大连接率。<br/> 用于限制该监听器的连接速率，一旦达到限制值，新的连接将被推迟或拒绝。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_conn_rate",
                      "text": "max_conn_rate",
                      "type": "String"
                    },
                    {
                      "doc": "消息发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站消息数，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-messages_rate",
                      "text": "messages_rate",
                      "type": "String"
                    },
                    {
                      "doc": "数据发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站字节速率，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bytes_rate",
                      "text": "bytes_rate",
                      "type": "String"
                    },
                    {
                      "default": "[\"allow all\"]",
                      "doc": "此监听器的访问控制规则。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-access_rules",
                      "text": "access_rules",
                      "type": "Array(String)"
                    },
                    {
                      "default": "false",
                      "doc": "如果EMQX集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-proxy_protocol",
                      "text": "proxy_protocol",
                      "type": "Boolean"
                    },
                    {
                      "default": "3s",
                      "doc": "代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX将关闭TCP连接。",
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-proxy_protocol_timeout",
                      "text": "proxy_protocol_timeout",
                      "type": "String"
                    },
                    {
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options",
                      "refs": [
                        {
                          "doc": "TCP listener options.",
                          "fields": [
                            {
                              "default": "100",
                              "doc": "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-active_n",
                              "text": "active_n",
                              "type": "Integer"
                            },
                            {
                              "default": "1024",
                              "doc": "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-backlog",
                              "text": "backlog",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "15s",
                              "doc": "连接的 TCP 发送超时。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text": "send_timeout",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "如果发送超时，则关闭连接。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text": "send_timeout_close",
                              "type": "Boolean"
                            },
                            {
                              "doc": "连接的 TCP 接收缓冲区（OS 内核）。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "doc": "连接的 TCP 发送缓冲区（OS 内核）。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "4KB",
                              "doc": "驱动程序使用的用户空间缓冲区的大小。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-buffer",
                              "text": "buffer",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text": "high_watermark",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "连接的 TCP_NODELAY 标识",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "连接的 SO_REUSEADDR 标识。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text": "reuseaddr",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux默认值为75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-keepalive",
                              "text": "keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts",
                          "text": "tcp_opts"
                        }
                      ],
                      "text": "tcp_options",
                      "type": "Struct(tcp_opts)"
                    },
                    {
                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options",
                      "refs": [
                        {
                          "doc": "Socket options for SSL connections.",
                          "fields": [
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                              "text": "dhfile",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                              "text": "fail_if_no_peer_cert",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                              "text": "honor_cipher_order",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                              "text": "client_renegotiation",
                              "type": "Boolean"
                            },
                            {
                              "default": "15s",
                              "doc": "握手完成所允许的最长时间",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                              "text": "handshake_timeout",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "内存使用调优。如果启用，将在TLS/SSL握手完成后立即执行垃圾回收。TLS/SSL握手建立后立即进行GC。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                              "text": "gc_after_handshake",
                              "type": "Boolean"
                            },
                            {
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                              "refs": [
                                {
                                  "doc": "Per listener OCSP Stapling configuration.",
                                  "fields": [
                                    {
                                      "default": "false",
                                      "doc": "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                      "text": "enable_ocsp_stapling",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "用于检查服务器证书的 OCSP Responder 的 URL。",
                                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                      "text": "responder_url",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                      "text": "issuer_pem",
                                      "type": "String"
                                    },
                                    {
                                      "default": "5m",
                                      "doc": "为服务器刷新OCSP响应的周期。",
                                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                      "text": "refresh_interval",
                                      "type": "String"
                                    },
                                    {
                                      "default": "15s",
                                      "doc": "检查 OCSP 响应时，HTTP 请求的超时。",
                                      "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                      "text": "refresh_http_timeout",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                  "text": "ocsp"
                                }
                              ],
                              "text": "ocsp",
                              "type": "Struct(ocsp)"
                            },
                            {
                              "default": "false",
                              "doc": "是否为该监听器启用 CRL 检查。",
                              "hash": "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                              "text": "enable_crl_check",
                              "type": "Boolean"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts",
                          "text": "listener_ssl_opts"
                        }
                      ],
                      "text": "ssl_options",
                      "type": "Struct(listener_ssl_opts)"
                    }
                  ],
                  "hash": "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener",
                  "text": "mqtt_ssl_listener"
                }
              ],
              "text": "ssl",
              "type": "Map($name->OneOf(Struct(mqtt_ssl_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc": "HTTP websocket 监听器。",
              "hash": "V-listeners-S-listeners-ws",
              "refs": [
                {
                  "doc": "Settings for the MQTT over WebSocket listener.",
                  "fields": [
                    {
                      "aliases": [
                        "enabled"
                      ],
                      "default": "true",
                      "doc": "启停监听器。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "8083",
                      "doc": "监听套接字的 IP 地址和端口。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bind",
                      "text": "bind",
                      "type": "String"
                    },
                    {
                      "default": "16",
                      "doc": "监听器接收池的大小。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-acceptors",
                      "text": "acceptors",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "infinity",
                      "doc": "监听器允许的最大并发连接数。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_connections",
                      "text": "max_connections",
                      "type": "OneOf(String(\"infinity\"),Integer(1..+inf))"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端B（与客户端A连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "default": "true",
                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-enable_authn",
                      "text": "enable_authn",
                      "type": "Enum(true,false,quick_deny_anonymous)"
                    },
                    {
                      "doc": "最大连接率。<br/> 用于限制该监听器的连接速率，一旦达到限制值，新的连接将被推迟或拒绝。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_conn_rate",
                      "text": "max_conn_rate",
                      "type": "String"
                    },
                    {
                      "doc": "消息发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站消息数，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-messages_rate",
                      "text": "messages_rate",
                      "type": "String"
                    },
                    {
                      "doc": "数据发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站字节速率，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bytes_rate",
                      "text": "bytes_rate",
                      "type": "String"
                    },
                    {
                      "default": "[\"allow all\"]",
                      "doc": "此监听器的访问控制规则。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-access_rules",
                      "text": "access_rules",
                      "type": "Array(String)"
                    },
                    {
                      "default": "false",
                      "doc": "如果EMQX集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-proxy_protocol",
                      "text": "proxy_protocol",
                      "type": "Boolean"
                    },
                    {
                      "default": "3s",
                      "doc": "代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX将关闭TCP连接。",
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-proxy_protocol_timeout",
                      "text": "proxy_protocol_timeout",
                      "type": "String"
                    },
                    {
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options",
                      "refs": [
                        {
                          "doc": "TCP listener options.",
                          "fields": [
                            {
                              "default": "100",
                              "doc": "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-active_n",
                              "text": "active_n",
                              "type": "Integer"
                            },
                            {
                              "default": "1024",
                              "doc": "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-backlog",
                              "text": "backlog",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "15s",
                              "doc": "连接的 TCP 发送超时。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text": "send_timeout",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "如果发送超时，则关闭连接。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text": "send_timeout_close",
                              "type": "Boolean"
                            },
                            {
                              "doc": "连接的 TCP 接收缓冲区（OS 内核）。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "doc": "连接的 TCP 发送缓冲区（OS 内核）。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "4KB",
                              "doc": "驱动程序使用的用户空间缓冲区的大小。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-buffer",
                              "text": "buffer",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text": "high_watermark",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "连接的 TCP_NODELAY 标识",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "连接的 SO_REUSEADDR 标识。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text": "reuseaddr",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux默认值为75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-keepalive",
                              "text": "keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts",
                          "text": "tcp_opts"
                        }
                      ],
                      "text": "tcp_options",
                      "type": "Struct(tcp_opts)"
                    },
                    {
                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket",
                      "refs": [
                        {
                          "doc": "WebSocket listener options.",
                          "fields": [
                            {
                              "default": "\"/mqtt\"",
                              "doc": "WebSocket 的 MQTT 协议路径。因此，EMQX Broker的WebSocket地址为：\n<code>ws://{ip}:{port}/mqtt</code>",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-mqtt_path",
                              "text": "mqtt_path",
                              "type": "String"
                            },
                            {
                              "default": "multiple",
                              "doc": "WebSocket消息是否允许包含多个 MQTT 数据包。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-mqtt_piggyback",
                              "text": "mqtt_piggyback",
                              "type": "Enum(single,multiple)"
                            },
                            {
                              "default": "false",
                              "doc": "如果 <code>true</code>，则使用 <code>zlib</code> 压缩 WebSocket 消息<br/>\n<code>deflate_opts</code> 下的配置项属于压缩相关参数配置。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-compress",
                              "text": "compress",
                              "type": "Boolean"
                            },
                            {
                              "default": "7200s",
                              "doc": "关闭在此间隔内未发送 MQTT CONNECT 消息的客户端的传输层连接。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-idle_timeout",
                              "text": "idle_timeout",
                              "type": "String"
                            },
                            {
                              "default": "infinity",
                              "doc": "单个 MQTT 数据包的最大长度。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-max_frame_size",
                              "text": "max_frame_size",
                              "type": "OneOf(String(\"infinity\"),Integer)"
                            },
                            {
                              "default": "true",
                              "doc": "如果<code>true</code>，当客户端未携带<code>Sec WebSocket Protocol</code>字段时，服务器将返回一个错误。\n<br/>注意：微信小程序需要禁用此验证。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-fail_if_no_subprotocol",
                              "text": "fail_if_no_subprotocol",
                              "type": "Boolean"
                            },
                            {
                              "default": "\"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5\"",
                              "doc": "逗号分隔的 subprotocols 支持列表。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-supported_subprotocols",
                              "text": "supported_subprotocols",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "如果<code>true</code>，<code>origin</code>HTTP 头将根据<code>check_origins</code>参数中配置的允许来源列表进行验证。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-check_origin_enable",
                              "text": "check_origin_enable",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "如果设置为 <code>false</code> 并且 <code>check_origin_enable</code> 为 <code>true</code>，服务器将拒绝没有 <code>origin</code> HTTP头的请求。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-allow_origin_absence",
                              "text": "allow_origin_absence",
                              "type": "Boolean"
                            },
                            {
                              "default": "\"http://localhost:18083, http://127.0.0.1:18083\"",
                              "doc": "允许的 origins 列表",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-check_origins",
                              "text": "check_origins",
                              "type": "String"
                            },
                            {
                              "default": "x-forwarded-for",
                              "doc": "HTTP 头，用于传递有关客户端 IP 地址的信息。\n当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-proxy_address_header",
                              "text": "proxy_address_header",
                              "type": "String"
                            },
                            {
                              "default": "x-forwarded-port",
                              "doc": "HTTP 头，用于传递有关客户端端口的信息。当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。",
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-proxy_port_header",
                              "text": "proxy_port_header",
                              "type": "String"
                            },
                            {
                              "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts",
                              "refs": [
                                {
                                  "doc": "Compression options.",
                                  "fields": [
                                    {
                                      "doc": "压缩级别",
                                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-level",
                                      "text": "level",
                                      "type": "Enum(none,default,best_compression,best_speed)"
                                    },
                                    {
                                      "default": "8",
                                      "doc": "指定压缩状态的大小<br/>\n较低的值会减少每个连接的内存使用。",
                                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-mem_level",
                                      "text": "mem_level",
                                      "type": "Integer(1..9)"
                                    },
                                    {
                                      "default": "default",
                                      "doc": "指定压缩策略。",
                                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-strategy",
                                      "text": "strategy",
                                      "type": "Enum(default,filtered,huffman_only,rle)"
                                    },
                                    {
                                      "default": "takeover",
                                      "doc": "接管意味着在服务器消息之间保留压缩状态。",
                                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_context_takeover",
                                      "text": "server_context_takeover",
                                      "type": "Enum(takeover,no_takeover)"
                                    },
                                    {
                                      "default": "takeover",
                                      "doc": "接管意味着在客户端消息之间保留压缩状态。",
                                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_context_takeover",
                                      "text": "client_context_takeover",
                                      "type": "Enum(takeover,no_takeover)"
                                    },
                                    {
                                      "default": "15",
                                      "doc": "指定服务器压缩上下文的大小。",
                                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_max_window_bits",
                                      "text": "server_max_window_bits",
                                      "type": "Integer(8..15)"
                                    },
                                    {
                                      "default": "15",
                                      "doc": "指定客户端压缩上下文的大小。",
                                      "hash": "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_max_window_bits",
                                      "text": "client_max_window_bits",
                                      "type": "Integer(8..15)"
                                    }
                                  ],
                                  "hash": "T-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts",
                                  "text": "deflate_opts"
                                }
                              ],
                              "text": "deflate_opts",
                              "type": "Struct(deflate_opts)"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts",
                          "text": "ws_opts"
                        }
                      ],
                      "text": "websocket",
                      "type": "Struct(ws_opts)"
                    }
                  ],
                  "hash": "T-listeners-S-listeners-ws-S-mqtt_ws_listener",
                  "text": "mqtt_ws_listener"
                }
              ],
              "text": "ws",
              "type": "Map($name->OneOf(Struct(mqtt_ws_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc": "HTTPS websocket 监听器。",
              "hash": "V-listeners-S-listeners-wss",
              "refs": [
                {
                  "doc": "Settings for the MQTT over WebSocket/SSL listener.",
                  "fields": [
                    {
                      "aliases": [
                        "enabled"
                      ],
                      "default": "true",
                      "doc": "启停监听器。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "8084",
                      "doc": "监听套接字的 IP 地址和端口。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bind",
                      "text": "bind",
                      "type": "String"
                    },
                    {
                      "default": "16",
                      "doc": "监听器接收池的大小。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-acceptors",
                      "text": "acceptors",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "infinity",
                      "doc": "监听器允许的最大并发连接数。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_connections",
                      "text": "max_connections",
                      "type": "OneOf(String(\"infinity\"),Integer(1..+inf))"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端B（与客户端A连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "default": "true",
                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-enable_authn",
                      "text": "enable_authn",
                      "type": "Enum(true,false,quick_deny_anonymous)"
                    },
                    {
                      "doc": "最大连接率。<br/> 用于限制该监听器的连接速率，一旦达到限制值，新的连接将被推迟或拒绝。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_conn_rate",
                      "text": "max_conn_rate",
                      "type": "String"
                    },
                    {
                      "doc": "消息发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站消息数，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-messages_rate",
                      "text": "messages_rate",
                      "type": "String"
                    },
                    {
                      "doc": "数据发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站字节速率，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bytes_rate",
                      "text": "bytes_rate",
                      "type": "String"
                    },
                    {
                      "default": "[\"allow all\"]",
                      "doc": "此监听器的访问控制规则。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-access_rules",
                      "text": "access_rules",
                      "type": "Array(String)"
                    },
                    {
                      "default": "false",
                      "doc": "如果EMQX集群部署在 HAProxy 或 Nginx 之后，请启用代理协议 V1/2 <br/>\n详情见: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-proxy_protocol",
                      "text": "proxy_protocol",
                      "type": "Boolean"
                    },
                    {
                      "default": "3s",
                      "doc": "代理协议超时。如果在超时时间内未收到代理协议数据包，EMQX将关闭TCP连接。",
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-proxy_protocol_timeout",
                      "text": "proxy_protocol_timeout",
                      "type": "String"
                    },
                    {
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options",
                      "refs": [
                        {
                          "doc": "TCP listener options.",
                          "fields": [
                            {
                              "default": "100",
                              "doc": "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-active_n",
                              "text": "active_n",
                              "type": "Integer"
                            },
                            {
                              "default": "1024",
                              "doc": "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-backlog",
                              "text": "backlog",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "15s",
                              "doc": "连接的 TCP 发送超时。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-send_timeout",
                              "text": "send_timeout",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "如果发送超时，则关闭连接。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "text": "send_timeout_close",
                              "type": "Boolean"
                            },
                            {
                              "doc": "连接的 TCP 接收缓冲区（OS 内核）。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "doc": "连接的 TCP 发送缓冲区（OS 内核）。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "4KB",
                              "doc": "驱动程序使用的用户空间缓冲区的大小。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-buffer",
                              "text": "buffer",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-high_watermark",
                              "text": "high_watermark",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "连接的 TCP_NODELAY 标识",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "连接的 SO_REUSEADDR 标识。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "text": "reuseaddr",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux默认值为75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-keepalive",
                              "text": "keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts",
                          "text": "tcp_opts"
                        }
                      ],
                      "text": "tcp_options",
                      "type": "Struct(tcp_opts)"
                    },
                    {
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options",
                      "refs": [
                        {
                          "doc": "Socket options for WebSocket/SSL connections.",
                          "fields": [
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-dhfile",
                              "text": "dhfile",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-fail_if_no_peer_cert",
                              "text": "fail_if_no_peer_cert",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-honor_cipher_order",
                              "text": "honor_cipher_order",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-client_renegotiation",
                              "text": "client_renegotiation",
                              "type": "Boolean"
                            },
                            {
                              "default": "15s",
                              "doc": "握手完成所允许的最长时间",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-handshake_timeout",
                              "text": "handshake_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts",
                          "text": "listener_wss_opts"
                        }
                      ],
                      "text": "ssl_options",
                      "type": "Struct(listener_wss_opts)"
                    },
                    {
                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket",
                      "refs": [
                        {
                          "doc": "WebSocket listener options.",
                          "fields": [
                            {
                              "default": "\"/mqtt\"",
                              "doc": "WebSocket 的 MQTT 协议路径。因此，EMQX Broker的WebSocket地址为：\n<code>ws://{ip}:{port}/mqtt</code>",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-mqtt_path",
                              "text": "mqtt_path",
                              "type": "String"
                            },
                            {
                              "default": "multiple",
                              "doc": "WebSocket消息是否允许包含多个 MQTT 数据包。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-mqtt_piggyback",
                              "text": "mqtt_piggyback",
                              "type": "Enum(single,multiple)"
                            },
                            {
                              "default": "false",
                              "doc": "如果 <code>true</code>，则使用 <code>zlib</code> 压缩 WebSocket 消息<br/>\n<code>deflate_opts</code> 下的配置项属于压缩相关参数配置。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-compress",
                              "text": "compress",
                              "type": "Boolean"
                            },
                            {
                              "default": "7200s",
                              "doc": "关闭在此间隔内未发送 MQTT CONNECT 消息的客户端的传输层连接。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-idle_timeout",
                              "text": "idle_timeout",
                              "type": "String"
                            },
                            {
                              "default": "infinity",
                              "doc": "单个 MQTT 数据包的最大长度。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-max_frame_size",
                              "text": "max_frame_size",
                              "type": "OneOf(String(\"infinity\"),Integer)"
                            },
                            {
                              "default": "true",
                              "doc": "如果<code>true</code>，当客户端未携带<code>Sec WebSocket Protocol</code>字段时，服务器将返回一个错误。\n<br/>注意：微信小程序需要禁用此验证。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-fail_if_no_subprotocol",
                              "text": "fail_if_no_subprotocol",
                              "type": "Boolean"
                            },
                            {
                              "default": "\"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5\"",
                              "doc": "逗号分隔的 subprotocols 支持列表。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-supported_subprotocols",
                              "text": "supported_subprotocols",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "如果<code>true</code>，<code>origin</code>HTTP 头将根据<code>check_origins</code>参数中配置的允许来源列表进行验证。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-check_origin_enable",
                              "text": "check_origin_enable",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "如果设置为 <code>false</code> 并且 <code>check_origin_enable</code> 为 <code>true</code>，服务器将拒绝没有 <code>origin</code> HTTP头的请求。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-allow_origin_absence",
                              "text": "allow_origin_absence",
                              "type": "Boolean"
                            },
                            {
                              "default": "\"http://localhost:18083, http://127.0.0.1:18083\"",
                              "doc": "允许的 origins 列表",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-check_origins",
                              "text": "check_origins",
                              "type": "String"
                            },
                            {
                              "default": "x-forwarded-for",
                              "doc": "HTTP 头，用于传递有关客户端 IP 地址的信息。\n当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-proxy_address_header",
                              "text": "proxy_address_header",
                              "type": "String"
                            },
                            {
                              "default": "x-forwarded-port",
                              "doc": "HTTP 头，用于传递有关客户端端口的信息。当 EMQX 集群部署在负载平衡器后面时，这一点非常重要。",
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-proxy_port_header",
                              "text": "proxy_port_header",
                              "type": "String"
                            },
                            {
                              "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts",
                              "refs": [
                                {
                                  "doc": "Compression options.",
                                  "fields": [
                                    {
                                      "doc": "压缩级别",
                                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-level",
                                      "text": "level",
                                      "type": "Enum(none,default,best_compression,best_speed)"
                                    },
                                    {
                                      "default": "8",
                                      "doc": "指定压缩状态的大小<br/>\n较低的值会减少每个连接的内存使用。",
                                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-mem_level",
                                      "text": "mem_level",
                                      "type": "Integer(1..9)"
                                    },
                                    {
                                      "default": "default",
                                      "doc": "指定压缩策略。",
                                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-strategy",
                                      "text": "strategy",
                                      "type": "Enum(default,filtered,huffman_only,rle)"
                                    },
                                    {
                                      "default": "takeover",
                                      "doc": "接管意味着在服务器消息之间保留压缩状态。",
                                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_context_takeover",
                                      "text": "server_context_takeover",
                                      "type": "Enum(takeover,no_takeover)"
                                    },
                                    {
                                      "default": "takeover",
                                      "doc": "接管意味着在客户端消息之间保留压缩状态。",
                                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_context_takeover",
                                      "text": "client_context_takeover",
                                      "type": "Enum(takeover,no_takeover)"
                                    },
                                    {
                                      "default": "15",
                                      "doc": "指定服务器压缩上下文的大小。",
                                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_max_window_bits",
                                      "text": "server_max_window_bits",
                                      "type": "Integer(8..15)"
                                    },
                                    {
                                      "default": "15",
                                      "doc": "指定客户端压缩上下文的大小。",
                                      "hash": "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_max_window_bits",
                                      "text": "client_max_window_bits",
                                      "type": "Integer(8..15)"
                                    }
                                  ],
                                  "hash": "T-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts",
                                  "text": "deflate_opts"
                                }
                              ],
                              "text": "deflate_opts",
                              "type": "Struct(deflate_opts)"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts",
                          "text": "ws_opts"
                        }
                      ],
                      "text": "websocket",
                      "type": "Struct(ws_opts)"
                    }
                  ],
                  "hash": "T-listeners-S-listeners-wss-S-mqtt_wss_listener",
                  "text": "mqtt_wss_listener"
                }
              ],
              "text": "wss",
              "type": "Map($name->OneOf(Struct(mqtt_wss_listener),String(\"marked_for_deletion\")))"
            },
            {
              "doc": "QUIC 监听器。",
              "hash": "V-listeners-S-listeners-quic",
              "refs": [
                {
                  "doc": "Settings for the MQTT over QUIC listener.",
                  "fields": [
                    {
                      "default": "[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式。<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3。<br/>\n如果打算使用 PSK 密码套件，<code>tlsv1.3</code> 应在 <code>ssl.versions</code> 中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br/>\n\n注：QUIC 监听器只支持 tlsv1.3 的 ciphers。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "doc": "QUIC 传输层的 TLS 选项",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options",
                      "refs": [
                        {
                          "doc": "TLS options for QUIC transport.",
                          "fields": [
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-password",
                              "text": "password",
                              "type": "String"
                            }
                          ],
                          "hash": "T-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts",
                          "text": "listener_quic_ssl_opts"
                        }
                      ],
                      "text": "ssl_options",
                      "type": "Struct(listener_quic_ssl_opts)"
                    },
                    {
                      "aliases": [
                        "enabled"
                      ],
                      "default": "true",
                      "doc": "启停监听器。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "14567",
                      "doc": "监听套接字的 IP 地址和端口。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bind",
                      "text": "bind",
                      "type": "String"
                    },
                    {
                      "default": "16",
                      "doc": "监听器接收池的大小。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-acceptors",
                      "text": "acceptors",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "infinity",
                      "doc": "监听器允许的最大并发连接数。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_connections",
                      "text": "max_connections",
                      "type": "OneOf(String(\"infinity\"),Integer(1..+inf))"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，请在所有主题前面加上 mountpoint 字符串。\n\n将消息传递给订阅者时，将从主题名称中删除带前缀的字符串。挂载点是一种用户可以用来实现不同侦听器之间消息路由隔离的方法。\n\n例如，如果客户机 A 使用 <code>listeners.tcp.\\<name>.mountpoint</code> 设置为'some_tenant'，那么客户端实际上订阅了主题'some_tenant/t'。<br/>\n类似地，如果另一个客户端B（与客户端A连接到同一个侦听器）向主题 't' 发送消息，该消息将路由到所有订阅了'some_租户/t'的客户端，因此客户端 A 将接收主题名为't'的消息<br/>\n\n设置为<code>\"\"</code> 以禁用该功能<br/>\n\nmountpoint 字符串中的变量：\n- <code>${clientid}</code>: clientid\n- <code>${username}</code>: username",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "default": "true",
                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证，通过检查认配置的认认证器链来决定是否允许接入。\n配置 <code>false</code> 时，将不对客户端做任何认证，任何客户端，不论是不是携带用户名等认证信息，都可以接入。\n配置 <code>quick_deny_anonymous</code> 时，行为跟 <code>true</code> 类似，但是会对匿名\n客户直接拒绝，不做使用任何认证器对客户端进行身份检查。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-enable_authn",
                      "text": "enable_authn",
                      "type": "Enum(true,false,quick_deny_anonymous)"
                    },
                    {
                      "doc": "最大连接率。<br/> 用于限制该监听器的连接速率，一旦达到限制值，新的连接将被推迟或拒绝。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_conn_rate",
                      "text": "max_conn_rate",
                      "type": "String"
                    },
                    {
                      "doc": "消息发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站消息数，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-messages_rate",
                      "text": "messages_rate",
                      "type": "String"
                    },
                    {
                      "doc": "数据发布速率。<br/> 用于限制连接到该监听器的每个客户端的入站字节速率，一旦达到限制值，受限制的客户端将会减速甚至暂时被挂起。",
                      "hash": "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bytes_rate",
                      "text": "bytes_rate",
                      "type": "String"
                    }
                  ],
                  "hash": "T-listeners-S-listeners-quic-S-mqtt_quic_listener",
                  "text": "mqtt_quic_listener"
                }
              ],
              "text": "quic",
              "type": "Map($name->OneOf(Struct(mqtt_quic_listener),String(\"marked_for_deletion\")))"
            }
          ],
          "hash": "T-listeners-S-listeners",
          "text": "listeners"
        }
      ],
      "text": "listeners",
      "type": "Struct(listeners)"
    },
    {
      "doc": "全局的 MQTT 配置项。\nmqtt 下所有的配置作为全局的默认值存在，它可以被 <code>zone</code> 中的配置覆盖。",
      "hash": "V-mqtt",
      "refs": [
        {
          "doc": "Global MQTT configuration.",
          "fields": [
            {
              "default": "15s",
              "doc": "设置连接被断开或进入休眠状态前的等待时间，空闲超时后，\n  - 如暂未收到客户端的 CONNECT 报文，连接将断开；\n  - 如已收到客户端的 CONNECT 报文，连接将进入休眠模式以节省系统资源。\n\n注意：请合理设置该参数值，如等待时间设置过长，可能造成系统资源的浪费。",
              "hash": "V-mqtt-S-mqtt-idle_timeout",
              "text": "idle_timeout",
              "type": "OneOf(String(\"infinity\"),String)"
            },
            {
              "default": "1MB",
              "doc": "允许的最大 MQTT 报文大小。",
              "hash": "V-mqtt-S-mqtt-max_packet_size",
              "text": "max_packet_size",
              "type": "String"
            },
            {
              "default": "65535",
              "doc": "允许的最大 MQTT Client ID 长度。",
              "hash": "V-mqtt-S-mqtt-max_clientid_len",
              "text": "max_clientid_len",
              "type": "Integer(23..65535)"
            },
            {
              "default": "128",
              "doc": "允许的最大主题层级。",
              "hash": "V-mqtt-S-mqtt-max_topic_levels",
              "text": "max_topic_levels",
              "type": "Integer(1..65535)"
            },
            {
              "default": "65535",
              "doc": "允许的最大主题别名数，0 表示不支持主题别名。",
              "hash": "V-mqtt-S-mqtt-max_topic_alias",
              "text": "max_topic_alias",
              "type": "Integer(0..65535)"
            },
            {
              "default": "true",
              "doc": "是否启用对 MQTT 保留消息的支持。",
              "hash": "V-mqtt-S-mqtt-retain_available",
              "text": "retain_available",
              "type": "Boolean"
            },
            {
              "default": "true",
              "doc": "是否启用对 MQTT 通配符订阅的支持。",
              "hash": "V-mqtt-S-mqtt-wildcard_subscription",
              "text": "wildcard_subscription",
              "type": "Boolean"
            },
            {
              "default": "true",
              "doc": "是否启用对 MQTT 共享订阅的支持。",
              "hash": "V-mqtt-S-mqtt-shared_subscription",
              "text": "shared_subscription",
              "type": "Boolean"
            },
            {
              "default": "round_robin",
              "doc": "共享订阅消息派发策略。\n  - `random`：随机挑选一个共享订阅者派发；\n  - `round_robin`：使用 round-robin 策略派发；\n  - `round_robin_per_group`：在共享组内循环选择下一个成员；\n  - `local`：选择随机的本地成员，否则选择随机的集群范围内成员;\n  - `sticky`：总是使用上次选中的订阅者派发，直到它断开连接；\n  - `hash_clientid`：通过对发送者的客户端 ID 进行 Hash 处理来选择订阅者;\n  - `hash_topic`：通过对源主题进行 Hash 处理来选择订阅者。",
              "hash": "V-mqtt-S-mqtt-shared_subscription_strategy",
              "text": "shared_subscription_strategy",
              "type": "Enum(random,round_robin,round_robin_per_group,sticky,local,hash_topic,hash_clientid)"
            },
            {
              "default": "false",
              "doc": "是否启用对 MQTT 排它订阅的支持。",
              "hash": "V-mqtt-S-mqtt-exclusive_subscription",
              "text": "exclusive_subscription",
              "type": "Boolean"
            },
            {
              "default": "false",
              "doc": "设置由 MQTT v3.1.1/v3.1.0 客户端发布的消息是否将转发给其本身；类似 MQTT 5.0 协议中的 <code>No Local</code> 选项。",
              "hash": "V-mqtt-S-mqtt-ignore_loop_deliver",
              "text": "ignore_loop_deliver",
              "type": "Boolean"
            },
            {
              "default": "false",
              "doc": "是否以严格模式解析 MQTT 消息。\n严格模式下，如客户端 ID、主题名称等中包含无效 utf8 字符串，连接将被断开。",
              "hash": "V-mqtt-S-mqtt-strict_mode",
              "text": "strict_mode",
              "type": "Boolean"
            },
            {
              "default": "\"\"",
              "doc": "UTF-8 字符串，用于指定返回给客户端的响应主题，如 <code>reqrsp/</code>，此时请求和应答客户端都需要使用 <code>reqrsp/</code> 前缀的主题来完成通讯。\n如希望禁用此功能，请在下方的文字框中输入<code>\"\"</code>；仅适用于 MQTT 5.0 客户端。",
              "hash": "V-mqtt-S-mqtt-response_information",
              "text": "response_information",
              "type": "String"
            },
            {
              "default": "disabled",
              "doc": "EMQX 要求的保活时间，如设为 disabled，则将使用客户端指定的保持连接时间；仅适用于 MQTT 5.0 客户端。",
              "hash": "V-mqtt-S-mqtt-server_keepalive",
              "text": "server_keepalive",
              "type": "OneOf(Integer(1..+inf),String(\"disabled\"))"
            },
            {
              "default": "1.5",
              "doc": "EMQX 判定客户端 Keep Alive 超时使用的 Keep Alive 倍数。计算公式为：Keep Alive 超时 = Keep Alive 间隔 × Keep Alive 倍数。 默认值 1.5 遵循 MQTT 5.0 规范。此倍数可调整，为系统管理员提供根据特定需求进行定制的灵活性。例如，如果客户端的 10 秒保持连接间隔的 PINGREQ 因为额外的10 秒延迟，将倍数更改为 2 可以让 EMQX 容忍此延迟。",
              "hash": "V-mqtt-S-mqtt-keepalive_multiplier",
              "text": "keepalive_multiplier",
              "type": "Number"
            },
            {
              "default": "30s",
              "doc": "QoS 1/2 消息的重新投递间隔。",
              "hash": "V-mqtt-S-mqtt-retry_interval",
              "text": "retry_interval",
              "type": "String"
            },
            {
              "default": "false",
              "doc": "是否使用用户名作为客户端 ID。\n此设置的作用时间晚于 <code>对端证书作为用户名</code> 和 <code>对端证书作为客户端 ID</code>。",
              "hash": "V-mqtt-S-mqtt-use_username_as_clientid",
              "text": "use_username_as_clientid",
              "type": "Boolean"
            },
            {
              "default": "disabled",
              "doc": "使用对端证书中的 CN、DN 字段或整个证书内容来作为用户名；仅适用于 TLS 连接。\n目前支持：\n- <code>cn</code>: 取证书的 CN 字段\n- <code>dn</code>: 取证书的 DN 字段\n- <code>crt</code>: 取 <code>DER</code> 或 <code>PEM</code> 的证书内容\n- <code>pem</code>: 将 <code>DER</code> 证书转换为 <code>PEM</code> 格式作为用户名\n- <code>md5</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书内容的 MD5 值",
              "hash": "V-mqtt-S-mqtt-peer_cert_as_username",
              "text": "peer_cert_as_username",
              "type": "Enum(disabled,cn,dn,crt,pem,md5)"
            },
            {
              "default": "disabled",
              "doc": "使用对端证书中的 CN、DN 字段或整个证书内容来作为客户端 ID。仅适用于 TLS 连接；\n目前支持：\n- <code>cn</code>: 取证书的 CN 字段\n- <code>dn</code>: 取证书的 DN 字段\n- <code>crt</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书的内容\n- <code>pem</code>: 将 <code>DER</code> 证书内容转换为 <code>PEM</code> 格式作为客户端 ID\n- <code>md5</code>: 取 <code>DER</code> 或 <code>PEM</code> 证书内容的 MD5 值",
              "hash": "V-mqtt-S-mqtt-peer_cert_as_clientid",
              "text": "peer_cert_as_clientid",
              "type": "Enum(disabled,cn,dn,crt,pem,md5)"
            },
            {
              "default": "2h",
              "doc": "指定会话将在连接断开后多久过期，仅适用于非 MQTT 5.0 的连接。",
              "hash": "V-mqtt-S-mqtt-session_expiry_interval",
              "text": "session_expiry_interval",
              "type": "String"
            },
            {
              "default": "100",
              "doc": "每个发布者的会话中，都存在一个队列来处理客户端发送的 QoS 2 消息。该队列会存储 QoS 2 消息的报文 ID 直到收到客户端的 PUBREL 或超时，达到队列长度的限制后，新的 QoS 2 消息发布会被拒绝，并返回 `147(0x93)` 错误。",
              "hash": "V-mqtt-S-mqtt-max_awaiting_rel",
              "text": "max_awaiting_rel",
              "type": "OneOf(Integer(0..+inf),String(\"infinity\"))"
            },
            {
              "default": "2",
              "doc": "允许的最大 QoS 等级。",
              "hash": "V-mqtt-S-mqtt-max_qos_allowed",
              "text": "max_qos_allowed",
              "type": "Integer(0..2)"
            },
            {
              "default": "disabled",
              "doc": "主题优先级。取值范围 [1-255]\n默认优先级表为空，即所有的主题优先级相同。\n\n注：优先主题名称中不支持使用逗号和等号。\n注：不在此列表中的主题，被视为最高/最低优先级，这取决于<code>mqtt.mqueue_default_priority</code> 的配置。\n\n示例：\n配置 <code>\"topic/1\" > \"topic/2\"</code>:\n<code>mqueue_priorities: {\"topic/1\": 10, \"topic/2\": 8}</code>",
              "hash": "V-mqtt-S-mqtt-mqueue_priorities",
              "text": "mqueue_priorities",
              "type": "OneOf(String(\"disabled\"),Map)"
            },
            {
              "default": "lowest",
              "doc": "默认的主题优先级，不在 <code>主题优先级</code>（<code>mqueue_priorities</code>） 中的主题将会使用该优先级。",
              "hash": "V-mqtt-S-mqtt-mqueue_default_priority",
              "text": "mqueue_default_priority",
              "type": "Enum(highest,lowest)"
            },
            {
              "default": "true",
              "doc": "指定在连接断开但会话保持期间，是否需要在消息队列中存储 QoS 0 消息。",
              "hash": "V-mqtt-S-mqtt-mqueue_store_qos0",
              "text": "mqueue_store_qos0",
              "type": "Boolean"
            },
            {
              "default": "1000",
              "doc": "消息队列最大长度。持久客户端断开连接或飞行窗口已满时排队的消息长度。",
              "hash": "V-mqtt-S-mqtt-max_mqueue_len",
              "text": "max_mqueue_len",
              "type": "OneOf(Integer(0..+inf),String(\"infinity\"))"
            },
            {
              "default": "32",
              "doc": "允许在完成应答前同时投递的 QoS 1 和 QoS 2 消息的最大数量。",
              "hash": "V-mqtt-S-mqtt-max_inflight",
              "text": "max_inflight",
              "type": "Integer(1..65535)"
            },
            {
              "default": "infinity",
              "doc": "允许每个客户端建立的最大订阅数量。",
              "hash": "V-mqtt-S-mqtt-max_subscriptions",
              "text": "max_subscriptions",
              "type": "OneOf(Integer(1..inf),String(\"infinity\"))"
            },
            {
              "default": "false",
              "doc": "投递消息时，是否根据订阅主题时的 QoS 等级来强制提升派发的消息的 QoS 等级。",
              "hash": "V-mqtt-S-mqtt-upgrade_qos",
              "text": "upgrade_qos",
              "type": "Boolean"
            },
            {
              "default": "300s",
              "doc": "客户端发布 QoS 2 消息时，服务器等待 `PUBREL` 的最长时延。超过该时长后服务器会放弃等待，该PACKET ID 会被释放，从而允许后续新的 PUBLISH 消息使用。如果超时后收到 PUBREL，服务器将会产生一条告警日志。注意，向订阅客户端转发消息的动作发生在进入等待之前。",
              "hash": "V-mqtt-S-mqtt-await_rel_timeout",
              "text": "await_rel_timeout",
              "type": "String"
            }
          ],
          "hash": "T-mqtt-S-mqtt",
          "text": "mqtt"
        }
      ],
      "text": "mqtt",
      "type": "Struct(mqtt)"
    },
    {
      "default": "[]",
      "doc": "默认的 MQTT 监听器的全局认证配置。\n\n有关每个监听器的单独配置，请参阅监听器配置中的<code>authentication</code>。\n\n此选项可配置为：\n<ul>\n  <li><code>[]</code>: 默认值，允许 *所有* 登录</li>\n  <li>one: 例如 <code>{enable:true,backend:\"built_in_database\",mechanism=\"password_based\"}</code></li>\n  <li>chain: 结构体数组。</li>\n</ul>\n\n当配置了一个认证链时，登录凭据将按照配置的顺序检查后端，直到可以做出'允许'或'拒绝'的决定。\n\n如果在完全遍历认证链之后没有决定，登录将被拒绝。",
      "hash": "V-authentication",
      "refs": [
        {
          "doc": "Configuration of authenticator using built-in database as data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-builtin_db-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-builtin_db-backend",
              "text": "backend",
              "type": "String(\"built_in_database\")"
            },
            {
              "default": "username",
              "doc": "Specify whether to use `clientid` or `username` for authentication.",
              "hash": "V-authentication-S-builtin_db-user_id_type",
              "text": "user_id_type",
              "type": "Enum(clientid,username)"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash creation and verification.",
              "hash": "V-authentication-S-builtin_db-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm (for DB backends with write capability).",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    },
                    {
                      "default": "10",
                      "doc": "Work factor for BCRYPT password generation.",
                      "hash": "V-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw-salt_rounds",
                      "text": "salt_rounds",
                      "type": "Integer(5..10)"
                    }
                  ],
                  "hash": "T-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw",
                  "text": "bcrypt_rw"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-builtin_db-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-builtin_db-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-builtin_db-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt_rw),Struct(pbkdf2),Struct(simple))"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-builtin_db-enable",
              "text": "enable",
              "type": "Boolean"
            }
          ],
          "hash": "T-authentication-S-builtin_db",
          "text": "builtin_db"
        },
        {
          "doc": "Configuration of authenticator using MySQL as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-mysql-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-mysql-backend",
              "text": "backend",
              "type": "String(\"mysql\")"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash verification.",
              "hash": "V-authentication-S-mysql-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-mysql-password_hash_algorithm-S-bcrypt-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    }
                  ],
                  "hash": "T-authentication-S-mysql-password_hash_algorithm-S-bcrypt",
                  "text": "bcrypt"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-mysql-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-mysql-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-mysql-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-mysql-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))"
            },
            {
              "doc": "SQL used to query data for authentication, such as password hash.",
              "hash": "V-authentication-S-mysql-query",
              "text": "query",
              "type": "String"
            },
            {
              "default": "5s",
              "doc": "Timeout for the SQL query.",
              "hash": "V-authentication-S-mysql-query_timeout",
              "text": "query_timeout",
              "type": "String"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-mysql-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MySQL default port 3306 is used if `[:Port]` is not specified.",
              "hash": "V-authentication-S-mysql-server",
              "text": "server",
              "type": "String"
            },
            {
              "doc": "数据库名字。",
              "hash": "V-authentication-S-mysql-database",
              "text": "database",
              "type": "String"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-mysql-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "default": "root",
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-mysql-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-mysql-password",
              "text": "password",
              "type": "String"
            },
            {
              "doc": "Deprecated since v5.0.15.",
              "hash": "V-authentication-S-mysql-auto_reconnect",
              "text": "auto_reconnect",
              "type": "Boolean"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-mysql-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-mysql-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-mysql-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-mysql",
          "text": "mysql"
        },
        {
          "doc": "Configuration of authenticator using PostgreSQL as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-postgresql-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-postgresql-backend",
              "text": "backend",
              "type": "String(\"postgresql\")"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash verification.",
              "hash": "V-authentication-S-postgresql-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-postgresql-password_hash_algorithm-S-bcrypt-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    }
                  ],
                  "hash": "T-authentication-S-postgresql-password_hash_algorithm-S-bcrypt",
                  "text": "bcrypt"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-postgresql-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-postgresql-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-postgresql-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))"
            },
            {
              "doc": "SQL used to query data for authentication, such as password hash.",
              "hash": "V-authentication-S-postgresql-query",
              "text": "query",
              "type": "String"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-postgresql-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。",
              "hash": "V-authentication-S-postgresql-server",
              "text": "server",
              "type": "String"
            },
            {
              "doc": "数据库名字。",
              "hash": "V-authentication-S-postgresql-database",
              "text": "database",
              "type": "String"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-postgresql-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-postgresql-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-postgresql-password",
              "text": "password",
              "type": "String"
            },
            {
              "doc": "Deprecated since v5.0.15.",
              "hash": "V-authentication-S-postgresql-auto_reconnect",
              "text": "auto_reconnect",
              "type": "Boolean"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-postgresql-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-postgresql-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-postgresql-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-postgresql",
          "text": "postgresql"
        },
        {
          "doc": "Configuration of authenticator using MongoDB (Standalone) as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-mongo_single-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-mongo_single-backend",
              "text": "backend",
              "type": "String(\"mongodb\")"
            },
            {
              "doc": "Collection used to store authentication data.",
              "hash": "V-authentication-S-mongo_single-collection",
              "text": "collection",
              "type": "String"
            },
            {
              "default": "{}",
              "doc": "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "hash": "V-authentication-S-mongo_single-filter",
              "text": "filter",
              "type": "Map"
            },
            {
              "default": "password_hash",
              "doc": "Document field that contains password hash.",
              "hash": "V-authentication-S-mongo_single-password_hash_field",
              "text": "password_hash_field",
              "type": "String"
            },
            {
              "default": "salt",
              "doc": "Document field that contains the password salt.",
              "hash": "V-authentication-S-mongo_single-salt_field",
              "text": "salt_field",
              "type": "String"
            },
            {
              "default": "is_superuser",
              "doc": "Document field that defines if the user has superuser privileges.",
              "hash": "V-authentication-S-mongo_single-is_superuser_field",
              "text": "is_superuser_field",
              "type": "String"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash verification.",
              "hash": "V-authentication-S-mongo_single-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-mongo_single-password_hash_algorithm-S-bcrypt-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_single-password_hash_algorithm-S-bcrypt",
                  "text": "bcrypt"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-mongo_single-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-mongo_single-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_single-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-mongo_single-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "single",
              "doc": "Standalone instance. Must be set to 'single' when MongoDB server is running in standalone mode.",
              "hash": "V-authentication-S-mongo_single-mongo_type",
              "text": "mongo_type",
              "type": "String(\"single\")"
            },
            {
              "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "hash": "V-authentication-S-mongo_single-server",
              "text": "server",
              "type": "String"
            },
            {
              "default": "unsafe",
              "doc": "Write mode.",
              "hash": "V-authentication-S-mongo_single-w_mode",
              "text": "w_mode",
              "type": "Enum(unsafe,safe)"
            },
            {
              "default": "false",
              "doc": "Use DNS SRV record.",
              "hash": "V-authentication-S-mongo_single-srv_record",
              "text": "srv_record",
              "type": "Boolean"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-mongo_single-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-mongo_single-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-mongo_single-password",
              "text": "password",
              "type": "String"
            },
            {
              "default": "auto",
              "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
              "hash": "V-authentication-S-mongo_single-use_legacy_protocol",
              "text": "use_legacy_protocol",
              "type": "Enum(auto,true,false)"
            },
            {
              "doc": "Database name associated with the user's credentials.",
              "hash": "V-authentication-S-mongo_single-auth_source",
              "text": "auth_source",
              "type": "String"
            },
            {
              "doc": "数据库名字。",
              "hash": "V-authentication-S-mongo_single-database",
              "text": "database",
              "type": "String"
            },
            {
              "hash": "V-authentication-S-mongo_single-topology",
              "refs": [
                {
                  "doc": "Topology of MongoDB.",
                  "fields": [
                    {
                      "default": "0",
                      "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-max_overflow",
                      "text": "max_overflow",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-overflow_ttl",
                      "text": "overflow_ttl",
                      "type": "String"
                    },
                    {
                      "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-overflow_check_period",
                      "text": "overflow_check_period",
                      "type": "String"
                    },
                    {
                      "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-local_threshold_ms",
                      "text": "local_threshold_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The duration to attempt a connection before timing out.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-connect_timeout_ms",
                      "text": "connect_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-socket_timeout_ms",
                      "text": "socket_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "Specifies how long to block for server selection before throwing an exception.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-server_selection_timeout_ms",
                      "text": "server_selection_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The maximum duration that a worker can wait for a connection to become available.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-wait_queue_timeout_ms",
                      "text": "wait_queue_timeout_ms",
                      "type": "String"
                    },
                    {
                      "default": "200s",
                      "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-heartbeat_frequency_ms",
                      "text": "heartbeat_frequency_ms",
                      "type": "String"
                    },
                    {
                      "doc": "Controls the minimum amount of time to wait between heartbeats.",
                      "hash": "V-authentication-S-mongo_single-topology-S-topology-min_heartbeat_frequency_ms",
                      "text": "min_heartbeat_frequency_ms",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_single-topology-S-topology",
                  "text": "topology"
                }
              ],
              "text": "topology",
              "type": "Struct(topology)"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-mongo_single-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_single-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-mongo_single",
          "text": "mongo_single"
        },
        {
          "doc": "Configuration of authenticator using MongoDB (Replica Set) as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-mongo_rs-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-mongo_rs-backend",
              "text": "backend",
              "type": "String(\"mongodb\")"
            },
            {
              "doc": "Collection used to store authentication data.",
              "hash": "V-authentication-S-mongo_rs-collection",
              "text": "collection",
              "type": "String"
            },
            {
              "default": "{}",
              "doc": "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "hash": "V-authentication-S-mongo_rs-filter",
              "text": "filter",
              "type": "Map"
            },
            {
              "default": "password_hash",
              "doc": "Document field that contains password hash.",
              "hash": "V-authentication-S-mongo_rs-password_hash_field",
              "text": "password_hash_field",
              "type": "String"
            },
            {
              "default": "salt",
              "doc": "Document field that contains the password salt.",
              "hash": "V-authentication-S-mongo_rs-salt_field",
              "text": "salt_field",
              "type": "String"
            },
            {
              "default": "is_superuser",
              "doc": "Document field that defines if the user has superuser privileges.",
              "hash": "V-authentication-S-mongo_rs-is_superuser_field",
              "text": "is_superuser_field",
              "type": "String"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash verification.",
              "hash": "V-authentication-S-mongo_rs-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-mongo_rs-password_hash_algorithm-S-bcrypt-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_rs-password_hash_algorithm-S-bcrypt",
                  "text": "bcrypt"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-mongo_rs-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-mongo_rs-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_rs-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-mongo_rs-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "rs",
              "doc": "Replica set. Must be set to 'rs' when MongoDB server is running in 'replica set' mode.",
              "hash": "V-authentication-S-mongo_rs-mongo_type",
              "text": "mongo_type",
              "type": "String(\"rs\")"
            },
            {
              "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "hash": "V-authentication-S-mongo_rs-servers",
              "text": "servers",
              "type": "String"
            },
            {
              "default": "unsafe",
              "doc": "Write mode.",
              "hash": "V-authentication-S-mongo_rs-w_mode",
              "text": "w_mode",
              "type": "Enum(unsafe,safe)"
            },
            {
              "default": "master",
              "doc": "Read mode.",
              "hash": "V-authentication-S-mongo_rs-r_mode",
              "text": "r_mode",
              "type": "Enum(master,slave_ok)"
            },
            {
              "doc": "Name of the replica set.",
              "hash": "V-authentication-S-mongo_rs-replica_set_name",
              "text": "replica_set_name",
              "type": "String"
            },
            {
              "default": "false",
              "doc": "Use DNS SRV record.",
              "hash": "V-authentication-S-mongo_rs-srv_record",
              "text": "srv_record",
              "type": "Boolean"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-mongo_rs-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-mongo_rs-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-mongo_rs-password",
              "text": "password",
              "type": "String"
            },
            {
              "default": "auto",
              "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
              "hash": "V-authentication-S-mongo_rs-use_legacy_protocol",
              "text": "use_legacy_protocol",
              "type": "Enum(auto,true,false)"
            },
            {
              "doc": "Database name associated with the user's credentials.",
              "hash": "V-authentication-S-mongo_rs-auth_source",
              "text": "auth_source",
              "type": "String"
            },
            {
              "doc": "数据库名字。",
              "hash": "V-authentication-S-mongo_rs-database",
              "text": "database",
              "type": "String"
            },
            {
              "hash": "V-authentication-S-mongo_rs-topology",
              "refs": [
                {
                  "doc": "Topology of MongoDB.",
                  "fields": [
                    {
                      "default": "0",
                      "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-max_overflow",
                      "text": "max_overflow",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-overflow_ttl",
                      "text": "overflow_ttl",
                      "type": "String"
                    },
                    {
                      "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-overflow_check_period",
                      "text": "overflow_check_period",
                      "type": "String"
                    },
                    {
                      "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-local_threshold_ms",
                      "text": "local_threshold_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The duration to attempt a connection before timing out.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-connect_timeout_ms",
                      "text": "connect_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-socket_timeout_ms",
                      "text": "socket_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "Specifies how long to block for server selection before throwing an exception.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-server_selection_timeout_ms",
                      "text": "server_selection_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The maximum duration that a worker can wait for a connection to become available.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-wait_queue_timeout_ms",
                      "text": "wait_queue_timeout_ms",
                      "type": "String"
                    },
                    {
                      "default": "200s",
                      "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-heartbeat_frequency_ms",
                      "text": "heartbeat_frequency_ms",
                      "type": "String"
                    },
                    {
                      "doc": "Controls the minimum amount of time to wait between heartbeats.",
                      "hash": "V-authentication-S-mongo_rs-topology-S-topology-min_heartbeat_frequency_ms",
                      "text": "min_heartbeat_frequency_ms",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_rs-topology-S-topology",
                  "text": "topology"
                }
              ],
              "text": "topology",
              "type": "Struct(topology)"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-mongo_rs-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_rs-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-mongo_rs",
          "text": "mongo_rs"
        },
        {
          "doc": "Configuration of authenticator using MongoDB (Sharded Cluster) as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-mongo_sharded-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-mongo_sharded-backend",
              "text": "backend",
              "type": "String(\"mongodb\")"
            },
            {
              "doc": "Collection used to store authentication data.",
              "hash": "V-authentication-S-mongo_sharded-collection",
              "text": "collection",
              "type": "String"
            },
            {
              "default": "{}",
              "doc": "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "hash": "V-authentication-S-mongo_sharded-filter",
              "text": "filter",
              "type": "Map"
            },
            {
              "default": "password_hash",
              "doc": "Document field that contains password hash.",
              "hash": "V-authentication-S-mongo_sharded-password_hash_field",
              "text": "password_hash_field",
              "type": "String"
            },
            {
              "default": "salt",
              "doc": "Document field that contains the password salt.",
              "hash": "V-authentication-S-mongo_sharded-salt_field",
              "text": "salt_field",
              "type": "String"
            },
            {
              "default": "is_superuser",
              "doc": "Document field that defines if the user has superuser privileges.",
              "hash": "V-authentication-S-mongo_sharded-is_superuser_field",
              "text": "is_superuser_field",
              "type": "String"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash verification.",
              "hash": "V-authentication-S-mongo_sharded-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-mongo_sharded-password_hash_algorithm-S-bcrypt-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_sharded-password_hash_algorithm-S-bcrypt",
                  "text": "bcrypt"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-mongo_sharded-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-mongo_sharded-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_sharded-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-mongo_sharded-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "sharded",
              "doc": "Sharded cluster. Must be set to 'sharded' when MongoDB server is running in 'sharded' mode.",
              "hash": "V-authentication-S-mongo_sharded-mongo_type",
              "text": "mongo_type",
              "type": "String(\"sharded\")"
            },
            {
              "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "hash": "V-authentication-S-mongo_sharded-servers",
              "text": "servers",
              "type": "String"
            },
            {
              "default": "unsafe",
              "doc": "Write mode.",
              "hash": "V-authentication-S-mongo_sharded-w_mode",
              "text": "w_mode",
              "type": "Enum(unsafe,safe)"
            },
            {
              "default": "false",
              "doc": "Use DNS SRV record.",
              "hash": "V-authentication-S-mongo_sharded-srv_record",
              "text": "srv_record",
              "type": "Boolean"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-mongo_sharded-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-mongo_sharded-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-mongo_sharded-password",
              "text": "password",
              "type": "String"
            },
            {
              "default": "auto",
              "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
              "hash": "V-authentication-S-mongo_sharded-use_legacy_protocol",
              "text": "use_legacy_protocol",
              "type": "Enum(auto,true,false)"
            },
            {
              "doc": "Database name associated with the user's credentials.",
              "hash": "V-authentication-S-mongo_sharded-auth_source",
              "text": "auth_source",
              "type": "String"
            },
            {
              "doc": "数据库名字。",
              "hash": "V-authentication-S-mongo_sharded-database",
              "text": "database",
              "type": "String"
            },
            {
              "hash": "V-authentication-S-mongo_sharded-topology",
              "refs": [
                {
                  "doc": "Topology of MongoDB.",
                  "fields": [
                    {
                      "default": "0",
                      "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-max_overflow",
                      "text": "max_overflow",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-overflow_ttl",
                      "text": "overflow_ttl",
                      "type": "String"
                    },
                    {
                      "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-overflow_check_period",
                      "text": "overflow_check_period",
                      "type": "String"
                    },
                    {
                      "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-local_threshold_ms",
                      "text": "local_threshold_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The duration to attempt a connection before timing out.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-connect_timeout_ms",
                      "text": "connect_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-socket_timeout_ms",
                      "text": "socket_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "Specifies how long to block for server selection before throwing an exception.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-server_selection_timeout_ms",
                      "text": "server_selection_timeout_ms",
                      "type": "String"
                    },
                    {
                      "doc": "The maximum duration that a worker can wait for a connection to become available.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-wait_queue_timeout_ms",
                      "text": "wait_queue_timeout_ms",
                      "type": "String"
                    },
                    {
                      "default": "200s",
                      "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-heartbeat_frequency_ms",
                      "text": "heartbeat_frequency_ms",
                      "type": "String"
                    },
                    {
                      "doc": "Controls the minimum amount of time to wait between heartbeats.",
                      "hash": "V-authentication-S-mongo_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                      "text": "min_heartbeat_frequency_ms",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_sharded-topology-S-topology",
                  "text": "topology"
                }
              ],
              "text": "topology",
              "type": "Struct(topology)"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-mongo_sharded-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-mongo_sharded-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-mongo_sharded",
          "text": "mongo_sharded"
        },
        {
          "doc": "Configuration of authenticator using Redis (Standalone) as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-redis_single-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-redis_single-backend",
              "text": "backend",
              "type": "String(\"redis\")"
            },
            {
              "doc": "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "hash": "V-authentication-S-redis_single-cmd",
              "text": "cmd",
              "type": "String"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash verification.",
              "hash": "V-authentication-S-redis_single-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-redis_single-password_hash_algorithm-S-bcrypt-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    }
                  ],
                  "hash": "T-authentication-S-redis_single-password_hash_algorithm-S-bcrypt",
                  "text": "bcrypt"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-redis_single-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-redis_single-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-redis_single-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-redis_single-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "hash": "V-authentication-S-redis_single-server",
              "text": "server",
              "type": "String"
            },
            {
              "default": "single",
              "doc": "Single mode. Must be set to 'single' when Redis server is running in single mode.",
              "hash": "V-authentication-S-redis_single-redis_type",
              "text": "redis_type",
              "type": "String(\"single\")"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-redis_single-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-redis_single-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-redis_single-password",
              "text": "password",
              "type": "String"
            },
            {
              "default": "0",
              "doc": "Redis database ID.",
              "hash": "V-authentication-S-redis_single-database",
              "text": "database",
              "type": "Integer(0..+inf)"
            },
            {
              "doc": "Deprecated since v5.0.15.",
              "hash": "V-authentication-S-redis_single-auto_reconnect",
              "text": "auto_reconnect",
              "type": "Boolean"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-redis_single-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-redis_single-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-redis_single",
          "text": "redis_single"
        },
        {
          "doc": "Configuration of authenticator using Redis (Cluster) as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-redis_cluster-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-redis_cluster-backend",
              "text": "backend",
              "type": "String(\"redis\")"
            },
            {
              "doc": "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "hash": "V-authentication-S-redis_cluster-cmd",
              "text": "cmd",
              "type": "String"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash verification.",
              "hash": "V-authentication-S-redis_cluster-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-redis_cluster-password_hash_algorithm-S-bcrypt-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    }
                  ],
                  "hash": "T-authentication-S-redis_cluster-password_hash_algorithm-S-bcrypt",
                  "text": "bcrypt"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-redis_cluster-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-redis_cluster-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-redis_cluster-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-redis_cluster-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "hash": "V-authentication-S-redis_cluster-servers",
              "text": "servers",
              "type": "String"
            },
            {
              "default": "cluster",
              "doc": "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
              "hash": "V-authentication-S-redis_cluster-redis_type",
              "text": "redis_type",
              "type": "String(\"cluster\")"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-redis_cluster-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-redis_cluster-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-redis_cluster-password",
              "text": "password",
              "type": "String"
            },
            {
              "doc": "Deprecated since v5.0.15.",
              "hash": "V-authentication-S-redis_cluster-auto_reconnect",
              "text": "auto_reconnect",
              "type": "Boolean"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-redis_cluster-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-redis_cluster-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-redis_cluster",
          "text": "redis_cluster"
        },
        {
          "doc": "Configuration of authenticator using Redis (Sentinel) as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-redis_sentinel-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-redis_sentinel-backend",
              "text": "backend",
              "type": "String(\"redis\")"
            },
            {
              "doc": "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "hash": "V-authentication-S-redis_sentinel-cmd",
              "text": "cmd",
              "type": "String"
            },
            {
              "default": "{name = sha256, salt_position = prefix}",
              "doc": "Options for password hash verification.",
              "hash": "V-authentication-S-redis_sentinel-password_hash_algorithm",
              "refs": [
                {
                  "doc": "Settings for bcrypt password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "BCRYPT password hashing.",
                      "hash": "V-authentication-S-redis_sentinel-password_hash_algorithm-S-bcrypt-name",
                      "text": "name",
                      "type": "String(\"bcrypt\")"
                    }
                  ],
                  "hash": "T-authentication-S-redis_sentinel-password_hash_algorithm-S-bcrypt",
                  "text": "bcrypt"
                },
                {
                  "doc": "Settings for PBKDF2 password hashing algorithm.",
                  "fields": [
                    {
                      "doc": "PBKDF2 password hashing.",
                      "hash": "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-name",
                      "text": "name",
                      "type": "String(\"pbkdf2\")"
                    },
                    {
                      "doc": "Specifies mac_fun for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "text": "mac_fun",
                      "type": "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "doc": "Iteration count for PBKDF2 hashing algorithm.",
                      "hash": "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-iterations",
                      "text": "iterations",
                      "type": "Integer"
                    },
                    {
                      "doc": "Derived length for PBKDF2 hashing algorithm. If not specified, calculated automatically based on `mac_fun`.",
                      "hash": "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-dk_length",
                      "text": "dk_length",
                      "type": "Integer"
                    }
                  ],
                  "hash": "T-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2",
                  "text": "pbkdf2"
                },
                {
                  "doc": "Settings for simple algorithms.",
                  "fields": [
                    {
                      "doc": "Simple password hashing algorithm.",
                      "hash": "V-authentication-S-redis_sentinel-password_hash_algorithm-S-simple-name",
                      "text": "name",
                      "type": "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "default": "prefix",
                      "doc": "Salt position for PLAIN, MD5, SHA, SHA256 and SHA512 algorithms.",
                      "hash": "V-authentication-S-redis_sentinel-password_hash_algorithm-S-simple-salt_position",
                      "text": "salt_position",
                      "type": "Enum(disable,prefix,suffix)"
                    }
                  ],
                  "hash": "T-authentication-S-redis_sentinel-password_hash_algorithm-S-simple",
                  "text": "simple"
                }
              ],
              "text": "password_hash_algorithm",
              "type": "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-redis_sentinel-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "hash": "V-authentication-S-redis_sentinel-servers",
              "text": "servers",
              "type": "String"
            },
            {
              "default": "sentinel",
              "doc": "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
              "hash": "V-authentication-S-redis_sentinel-redis_type",
              "text": "redis_type",
              "type": "String(\"sentinel\")"
            },
            {
              "doc": "The cluster name in Redis sentinel mode.",
              "hash": "V-authentication-S-redis_sentinel-sentinel",
              "text": "sentinel",
              "type": "String"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-redis_sentinel-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-redis_sentinel-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-redis_sentinel-password",
              "text": "password",
              "type": "String"
            },
            {
              "default": "0",
              "doc": "Redis database ID.",
              "hash": "V-authentication-S-redis_sentinel-database",
              "text": "database",
              "type": "Integer(0..+inf)"
            },
            {
              "doc": "Deprecated since v5.0.15.",
              "hash": "V-authentication-S-redis_sentinel-auto_reconnect",
              "text": "auto_reconnect",
              "type": "Boolean"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-redis_sentinel-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-redis_sentinel-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-redis_sentinel",
          "text": "redis_sentinel"
        },
        {
          "doc": "Configuration of authenticator using HTTP Server as authentication service (Using GET request).",
          "fields": [
            {
              "doc": "HTTP request method.",
              "hash": "V-authentication-S-http_get-method",
              "text": "method",
              "type": "String(\"get\")"
            },
            {
              "default": "{\n  accept = \"application/json\"\n  cache-control = no-cache\n  connection = keep-alive\n  keep-alive = \"timeout=30, max=1000\"\n}\n",
              "doc": "List of HTTP headers (without <code>content-type</code>).",
              "hash": "V-authentication-S-http_get-headers",
              "text": "headers",
              "type": "Map"
            },
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-http_get-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-http_get-backend",
              "text": "backend",
              "type": "String(\"http\")"
            },
            {
              "doc": "URL of the HTTP server.",
              "hash": "V-authentication-S-http_get-url",
              "text": "url",
              "type": "String"
            },
            {
              "doc": "HTTP request body.",
              "hash": "V-authentication-S-http_get-body",
              "text": "body",
              "type": "Map"
            },
            {
              "default": "5s",
              "doc": "HTTP request timeout.",
              "hash": "V-authentication-S-http_get-request_timeout",
              "text": "request_timeout",
              "type": "String"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-http_get-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "15s",
              "doc": "The timeout when connecting to the HTTP server.",
              "hash": "V-authentication-S-http_get-connect_timeout",
              "text": "connect_timeout",
              "type": "String"
            },
            {
              "default": "100",
              "doc": "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
              "hash": "V-authentication-S-http_get-enable_pipelining",
              "text": "enable_pipelining",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "Deprecated since 5.0.4.",
              "hash": "V-authentication-S-http_get-max_retries",
              "text": "max_retries",
              "type": "Integer(0..+inf)"
            },
            {
              "default": "8",
              "doc": "The pool size.",
              "hash": "V-authentication-S-http_get-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "Configure HTTP request parameters.",
              "hash": "V-authentication-S-http_get-request",
              "refs": [
                {
                  "doc": "",
                  "fields": [
                    {
                      "doc": "HTTP method.",
                      "hash": "V-authentication-S-http_get-request-S-request-method",
                      "text": "method",
                      "type": "String"
                    },
                    {
                      "doc": "URL path.",
                      "hash": "V-authentication-S-http_get-request-S-request-path",
                      "text": "path",
                      "type": "String"
                    },
                    {
                      "doc": "HTTP request body.",
                      "hash": "V-authentication-S-http_get-request-S-request-body",
                      "text": "body",
                      "type": "String"
                    },
                    {
                      "doc": "List of HTTP headers.",
                      "hash": "V-authentication-S-http_get-request-S-request-headers",
                      "text": "headers",
                      "type": "Map"
                    },
                    {
                      "doc": "Max retry times if error on sending request.",
                      "hash": "V-authentication-S-http_get-request-S-request-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "HTTP request timeout.",
                      "hash": "V-authentication-S-http_get-request-S-request-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authentication-S-http_get-request-S-request",
                  "text": "request"
                }
              ],
              "text": "request",
              "type": "Struct(request)"
            },
            {
              "doc": "Deprecated since 5.0.4.",
              "hash": "V-authentication-S-http_get-retry_interval",
              "text": "retry_interval",
              "type": "String"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-http_get-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-http_get-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-http_get-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-http_get",
          "text": "http_get"
        },
        {
          "doc": "Configuration of authenticator using HTTP Server as authentication service (Using POST request).",
          "fields": [
            {
              "doc": "HTTP request method.",
              "hash": "V-authentication-S-http_post-method",
              "text": "method",
              "type": "String(\"post\")"
            },
            {
              "default": "{\n  accept = \"application/json\"\n  cache-control = no-cache\n  connection = keep-alive\n  content-type = \"application/json\"\n  keep-alive = \"timeout=30, max=1000\"\n}\n",
              "doc": "List of HTTP Headers.",
              "hash": "V-authentication-S-http_post-headers",
              "text": "headers",
              "type": "Map"
            },
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-http_post-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-http_post-backend",
              "text": "backend",
              "type": "String(\"http\")"
            },
            {
              "doc": "URL of the HTTP server.",
              "hash": "V-authentication-S-http_post-url",
              "text": "url",
              "type": "String"
            },
            {
              "doc": "HTTP request body.",
              "hash": "V-authentication-S-http_post-body",
              "text": "body",
              "type": "Map"
            },
            {
              "default": "5s",
              "doc": "HTTP request timeout.",
              "hash": "V-authentication-S-http_post-request_timeout",
              "text": "request_timeout",
              "type": "String"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-http_post-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "15s",
              "doc": "The timeout when connecting to the HTTP server.",
              "hash": "V-authentication-S-http_post-connect_timeout",
              "text": "connect_timeout",
              "type": "String"
            },
            {
              "default": "100",
              "doc": "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
              "hash": "V-authentication-S-http_post-enable_pipelining",
              "text": "enable_pipelining",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "Deprecated since 5.0.4.",
              "hash": "V-authentication-S-http_post-max_retries",
              "text": "max_retries",
              "type": "Integer(0..+inf)"
            },
            {
              "default": "8",
              "doc": "The pool size.",
              "hash": "V-authentication-S-http_post-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "Configure HTTP request parameters.",
              "hash": "V-authentication-S-http_post-request",
              "refs": [
                {
                  "doc": "",
                  "fields": [
                    {
                      "doc": "HTTP method.",
                      "hash": "V-authentication-S-http_post-request-S-request-method",
                      "text": "method",
                      "type": "String"
                    },
                    {
                      "doc": "URL path.",
                      "hash": "V-authentication-S-http_post-request-S-request-path",
                      "text": "path",
                      "type": "String"
                    },
                    {
                      "doc": "HTTP request body.",
                      "hash": "V-authentication-S-http_post-request-S-request-body",
                      "text": "body",
                      "type": "String"
                    },
                    {
                      "doc": "List of HTTP headers.",
                      "hash": "V-authentication-S-http_post-request-S-request-headers",
                      "text": "headers",
                      "type": "Map"
                    },
                    {
                      "doc": "Max retry times if error on sending request.",
                      "hash": "V-authentication-S-http_post-request-S-request-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "HTTP request timeout.",
                      "hash": "V-authentication-S-http_post-request-S-request-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authentication-S-http_post-request-S-request",
                  "text": "request"
                }
              ],
              "text": "request",
              "type": "Struct(request)"
            },
            {
              "doc": "Deprecated since 5.0.4.",
              "hash": "V-authentication-S-http_post-retry_interval",
              "text": "retry_interval",
              "type": "String"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-http_post-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-http_post-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-http_post-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            }
          ],
          "hash": "T-authentication-S-http_post",
          "text": "http_post"
        },
        {
          "doc": "Configuration when the JWT for authentication is issued using the HMAC algorithm.",
          "fields": [
            {
              "doc": "JWT signing algorithm, Supports HMAC (configured as <code>hmac-based</code>) and RSA, ECDSA (configured as <code>public-key</code>).",
              "hash": "V-authentication-S-jwt_hmac-algorithm",
              "text": "algorithm",
              "type": "Enum(hmac-based)"
            },
            {
              "doc": "The key to verify the JWT using HMAC algorithm.",
              "hash": "V-authentication-S-jwt_hmac-secret",
              "text": "secret",
              "type": "String"
            },
            {
              "default": "false",
              "doc": "Whether secret is base64 encoded.",
              "hash": "V-authentication-S-jwt_hmac-secret_base64_encoded",
              "text": "secret_base64_encoded",
              "type": "Boolean"
            },
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-jwt_hmac-mechanism",
              "text": "mechanism",
              "type": "String(\"jwt\")"
            },
            {
              "default": "acl",
              "doc": "JWT claim name to use for getting ACL rules.",
              "hash": "V-authentication-S-jwt_hmac-acl_claim_name",
              "text": "acl_claim_name",
              "type": "String"
            },
            {
              "default": "[]",
              "doc": "A list of custom claims to validate, which is a list of name/value pairs.\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "hash": "V-authentication-S-jwt_hmac-verify_claims",
              "text": "verify_claims",
              "type": "Map"
            },
            {
              "default": "password",
              "doc": "Field to take JWT from.",
              "hash": "V-authentication-S-jwt_hmac-from",
              "text": "from",
              "type": "Enum(username,password)"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-jwt_hmac-enable",
              "text": "enable",
              "type": "Boolean"
            }
          ],
          "hash": "T-authentication-S-jwt_hmac",
          "text": "jwt_hmac"
        },
        {
          "doc": "Configuration when the JWT for authentication is issued using RSA or ECDSA algorithm.",
          "fields": [
            {
              "doc": "JWT signing algorithm, Supports HMAC (configured as <code>hmac-based</code>) and RSA, ECDSA (configured as <code>public-key</code>).",
              "hash": "V-authentication-S-jwt_public_key-algorithm",
              "text": "algorithm",
              "type": "Enum(public-key)"
            },
            {
              "doc": "The public key used to verify the JWT.",
              "hash": "V-authentication-S-jwt_public_key-public_key",
              "text": "public_key",
              "type": "String"
            },
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-jwt_public_key-mechanism",
              "text": "mechanism",
              "type": "String(\"jwt\")"
            },
            {
              "default": "acl",
              "doc": "JWT claim name to use for getting ACL rules.",
              "hash": "V-authentication-S-jwt_public_key-acl_claim_name",
              "text": "acl_claim_name",
              "type": "String"
            },
            {
              "default": "[]",
              "doc": "A list of custom claims to validate, which is a list of name/value pairs.\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "hash": "V-authentication-S-jwt_public_key-verify_claims",
              "text": "verify_claims",
              "type": "Map"
            },
            {
              "default": "password",
              "doc": "Field to take JWT from.",
              "hash": "V-authentication-S-jwt_public_key-from",
              "text": "from",
              "type": "Enum(username,password)"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-jwt_public_key-enable",
              "text": "enable",
              "type": "Boolean"
            }
          ],
          "hash": "T-authentication-S-jwt_public_key",
          "text": "jwt_public_key"
        },
        {
          "doc": "Configuration when JWTs used for authentication need to be fetched from the JWKS endpoint.",
          "fields": [
            {
              "doc": "Whether to use JWKS.",
              "hash": "V-authentication-S-jwt_jwks-use_jwks",
              "text": "use_jwks",
              "type": "Enum(true)"
            },
            {
              "doc": "JWKS endpoint, it's a read-only endpoint that returns the server's public key set in the JWKS format.",
              "hash": "V-authentication-S-jwt_jwks-endpoint",
              "text": "endpoint",
              "type": "String"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-jwt_jwks-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "default": "300",
              "doc": "JWKS refresh interval.",
              "hash": "V-authentication-S-jwt_jwks-refresh_interval",
              "text": "refresh_interval",
              "type": "Integer"
            },
            {
              "default": "{enable = false}",
              "doc": "SSL options.",
              "hash": "V-authentication-S-jwt_jwks-ssl",
              "refs": [
                {
                  "doc": "Socket options for SSL clients.",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-jwt_jwks-ssl-S-ssl_client_opts",
                  "text": "ssl_client_opts"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl_client_opts)"
            },
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-jwt_jwks-mechanism",
              "text": "mechanism",
              "type": "String(\"jwt\")"
            },
            {
              "default": "acl",
              "doc": "JWT claim name to use for getting ACL rules.",
              "hash": "V-authentication-S-jwt_jwks-acl_claim_name",
              "text": "acl_claim_name",
              "type": "String"
            },
            {
              "default": "[]",
              "doc": "A list of custom claims to validate, which is a list of name/value pairs.\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "hash": "V-authentication-S-jwt_jwks-verify_claims",
              "text": "verify_claims",
              "type": "Map"
            },
            {
              "default": "password",
              "doc": "Field to take JWT from.",
              "hash": "V-authentication-S-jwt_jwks-from",
              "text": "from",
              "type": "Enum(username,password)"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-jwt_jwks-enable",
              "text": "enable",
              "type": "Boolean"
            }
          ],
          "hash": "T-authentication-S-jwt_jwks",
          "text": "jwt_jwks"
        },
        {
          "doc": "Settings for Salted Challenge Response Authentication Mechanism\n(SCRAM) authentication.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-scram-mechanism",
              "text": "mechanism",
              "type": "String(\"scram\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-scram-backend",
              "text": "backend",
              "type": "String(\"built_in_database\")"
            },
            {
              "default": "sha256",
              "doc": "Hashing algorithm.",
              "hash": "V-authentication-S-scram-algorithm",
              "text": "algorithm",
              "type": "Enum(sha256,sha512)"
            },
            {
              "default": "4096",
              "doc": "Iteration count.",
              "hash": "V-authentication-S-scram-iteration_count",
              "text": "iteration_count",
              "type": "Integer(0..+inf)"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-scram-enable",
              "text": "enable",
              "type": "Boolean"
            }
          ],
          "hash": "T-authentication-S-scram",
          "text": "scram"
        },
        {
          "doc": "Configuration of authenticator using LDAP as authentication data source.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-ldap-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-ldap-backend",
              "text": "backend",
              "type": "String(\"ldap\")"
            },
            {
              "default": "userPassword",
              "doc": "Indicates which attribute is used to represent the user's password.",
              "hash": "V-authentication-S-ldap-password_attribute",
              "text": "password_attribute",
              "type": "String"
            },
            {
              "default": "isSuperuser",
              "doc": "Indicates which attribute is used to represent whether the user is a superuser.",
              "hash": "V-authentication-S-ldap-is_superuser_attribute",
              "text": "is_superuser_attribute",
              "type": "String"
            },
            {
              "default": "5s",
              "doc": "Timeout for the LDAP query.",
              "hash": "V-authentication-S-ldap-query_timeout",
              "text": "query_timeout",
              "type": "String"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-ldap-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "doc": "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机名条目的格式为：`主机[:端口]`。<br/>\n如果 `[:端口]` 未指定， 将使用 LDAP 默认端口 389。",
              "hash": "V-authentication-S-ldap-server",
              "text": "server",
              "type": "String"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-ldap-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-ldap-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-ldap-password",
              "text": "password",
              "type": "String"
            },
            {
              "doc": "与基本对象条目（或根）相关的名称。\n搜索用户的起点。",
              "hash": "V-authentication-S-ldap-base_dn",
              "text": "base_dn",
              "type": "String"
            },
            {
              "default": "\"(objectClass=mqttUser)\"",
              "doc": "定义哪些条件必须被依次满足的过滤器\n用于搜索匹配一条给定的条目.<br>\n筛选器的语法遵循RFC 4515，并且还支持占位符。",
              "hash": "V-authentication-S-ldap-filter",
              "text": "filter",
              "type": "String"
            },
            {
              "default": "10s",
              "doc": "设置每个单独请求所使用的最大时间（以毫秒为单位）。",
              "hash": "V-authentication-S-ldap-request_timeout",
              "text": "request_timeout",
              "type": "String"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-ldap-ssl",
              "refs": [
                {
                  "doc": "启用 SSL 连接。",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-ldap-ssl-S-ssl-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-ldap-ssl-S-ssl",
                  "text": "ssl"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl)"
            }
          ],
          "hash": "T-authentication-S-ldap",
          "text": "ldap"
        },
        {
          "doc": "Configuration of authenticator using the LDAP bind operation as the authentication method.",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-ldap_bind-mechanism",
              "text": "mechanism",
              "type": "String(\"password_based\")"
            },
            {
              "doc": "后端类型。",
              "hash": "V-authentication-S-ldap_bind-backend",
              "text": "backend",
              "type": "String(\"ldap_bind\")"
            },
            {
              "default": "5s",
              "doc": "Timeout for the LDAP query.",
              "hash": "V-authentication-S-ldap_bind-query_timeout",
              "text": "query_timeout",
              "type": "String"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-ldap_bind-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "doc": "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机名条目的格式为：`主机[:端口]`。<br/>\n如果 `[:端口]` 未指定， 将使用 LDAP 默认端口 389。",
              "hash": "V-authentication-S-ldap_bind-server",
              "text": "server",
              "type": "String"
            },
            {
              "default": "8",
              "doc": "桥接远端服务时使用的连接池大小。",
              "hash": "V-authentication-S-ldap_bind-pool_size",
              "text": "pool_size",
              "type": "Integer(1..+inf)"
            },
            {
              "doc": "内部数据库的用户名。",
              "hash": "V-authentication-S-ldap_bind-username",
              "text": "username",
              "type": "String"
            },
            {
              "doc": "内部数据库密码。",
              "hash": "V-authentication-S-ldap_bind-password",
              "text": "password",
              "type": "String"
            },
            {
              "doc": "与基本对象条目（或根）相关的名称。\n搜索用户的起点。",
              "hash": "V-authentication-S-ldap_bind-base_dn",
              "text": "base_dn",
              "type": "String"
            },
            {
              "default": "\"(objectClass=mqttUser)\"",
              "doc": "定义哪些条件必须被依次满足的过滤器\n用于搜索匹配一条给定的条目.<br>\n筛选器的语法遵循RFC 4515，并且还支持占位符。",
              "hash": "V-authentication-S-ldap_bind-filter",
              "text": "filter",
              "type": "String"
            },
            {
              "default": "10s",
              "doc": "设置每个单独请求所使用的最大时间（以毫秒为单位）。",
              "hash": "V-authentication-S-ldap_bind-request_timeout",
              "text": "request_timeout",
              "type": "String"
            },
            {
              "default": "{enable = false}",
              "doc": "启用 SSL 连接。",
              "hash": "V-authentication-S-ldap_bind-ssl",
              "refs": [
                {
                  "doc": "启用 SSL 连接。",
                  "fields": [
                    {
                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-cacertfile",
                      "text": "cacertfile",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.1.4.",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-cacerts",
                      "text": "cacerts",
                      "type": "Boolean"
                    },
                    {
                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-certfile",
                      "text": "certfile",
                      "type": "String"
                    },
                    {
                      "doc": "PEM格式的私钥文件。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-keyfile",
                      "text": "keyfile",
                      "type": "String"
                    },
                    {
                      "default": "verify_none",
                      "doc": "启用或禁用对等验证。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-verify",
                      "text": "verify",
                      "type": "Enum(verify_peer,verify_none)"
                    },
                    {
                      "default": "true",
                      "doc": "启用 TLS 会话重用。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-reuse_sessions",
                      "text": "reuse_sessions",
                      "type": "Boolean"
                    },
                    {
                      "default": "10",
                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-depth",
                      "text": "depth",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "[tlsv1.3, tlsv1.2]",
                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-versions",
                      "text": "versions",
                      "type": "Array(String)"
                    },
                    {
                      "default": "[]",
                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-ciphers",
                      "text": "ciphers",
                      "type": "Array(String)"
                    },
                    {
                      "default": "true",
                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-secure_renegotiate",
                      "text": "secure_renegotiate",
                      "type": "Boolean"
                    },
                    {
                      "default": "notice",
                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-log_level",
                      "text": "log_level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "5s",
                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-hibernate_after",
                      "text": "hibernate_after",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "启用 TLS。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                      "hash": "V-authentication-S-ldap_bind-ssl-S-ssl-server_name_indication",
                      "text": "server_name_indication",
                      "type": "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "hash": "T-authentication-S-ldap_bind-ssl-S-ssl",
                  "text": "ssl"
                }
              ],
              "text": "ssl",
              "type": "Struct(ssl)"
            },
            {
              "default": "\"${password}\"",
              "doc": "绑定密码的模版",
              "hash": "V-authentication-S-ldap_bind-bind_password",
              "text": "bind_password",
              "type": "String"
            }
          ],
          "hash": "T-authentication-S-ldap_bind",
          "text": "ldap_bind"
        },
        {
          "doc": "使用 GCP 设备作为认证数据源的认证器配置。",
          "fields": [
            {
              "doc": "认证方式，支持方式如下：\n- password_based: 密码认证\n- jwt: JWT 认证\n- scram: MQTT 5.0 增强认证\n",
              "hash": "V-authentication-S-gcp_device-mechanism",
              "text": "mechanism",
              "type": "String(\"gcp_device\")"
            },
            {
              "default": "true",
              "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此认证数据源。",
              "hash": "V-authentication-S-gcp_device-enable",
              "text": "enable",
              "type": "Boolean"
            }
          ],
          "hash": "T-authentication-S-gcp_device",
          "text": "gcp_device"
        }
      ],
      "text": "authentication",
      "type": "Array(OneOf(Struct(builtin_db),Struct(mysql),Struct(postgresql),Struct(mongo_single),Struct(mongo_rs),Struct(mongo_sharded),Struct(redis_single),Struct(redis_cluster),Struct(redis_sentinel),Struct(http_get),Struct(http_post),Struct(jwt_hmac),Struct(jwt_public_key),Struct(jwt_jwks),Struct(scram),Struct(ldap),Struct(ldap_bind),Struct(gcp_device)))"
    },
    {
      "doc": "授权（ACL）。EMQX 支持完整的客户端访问控制（ACL）。",
      "hash": "V-authorization",
      "refs": [
        {
          "doc": "授权相关",
          "fields": [
            {
              "default": "allow",
              "doc": "如果用户或客户端不匹配ACL规则，或者从可配置授权源(比如内置数据库、HTTP API 或 PostgreSQL 等。)内未找\n到此类用户或客户端时，模式的认访问控制操作。\n在“授权”中查找更多详细信息。",
              "hash": "V-authorization-S-authorization-no_match",
              "text": "no_match",
              "type": "Enum(allow,deny)"
            },
            {
              "default": "ignore",
              "doc": "授权检查拒绝操作时的操作。",
              "hash": "V-authorization-S-authorization-deny_action",
              "text": "deny_action",
              "type": "Enum(ignore,disconnect)"
            },
            {
              "hash": "V-authorization-S-authorization-cache",
              "refs": [
                {
                  "doc": "Settings for the authorization cache.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用或禁用授权缓存。",
                      "hash": "V-authorization-S-authorization-cache-S-authz_cache-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "32",
                      "doc": "缓存项的最大数量。",
                      "hash": "V-authorization-S-authorization-cache-S-authz_cache-max_size",
                      "text": "max_size",
                      "type": "Integer(1..1048576)"
                    },
                    {
                      "default": "1m",
                      "doc": "缓存数据的生存时间。",
                      "hash": "V-authorization-S-authorization-cache-S-authz_cache-ttl",
                      "text": "ttl",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-cache-S-authz_cache",
                  "text": "authz_cache"
                }
              ],
              "text": "cache",
              "type": "Struct(authz_cache)"
            },
            {
              "default": "[\n  {\n    enable = true\n    path = \"${EMQX_ETC_DIR}/acl.conf\"\n    type = file\n  }\n]\n",
              "doc": "授权器列表。\n\n配置多个授权器时，将按照顺序依次执行授权检查。\n如果在当前授权检查器中未检索到权限数据，将会切换至链上的下一个已启用的授权器继续权限检查，直至得到 'allow' 或 'deny' 的结果。\n\n如果在所有授权器中都未找到对应的客户端信息，则根据 `authorization.no_match` 配置的行为允许或拒绝当前操作。\n\n注意：\n- 数据源类型使用 'type' 进行标识；\n- 使用同一类型的数据源只能被使用一次。\n\n",
              "hash": "V-authorization-S-authorization-sources",
              "refs": [
                {
                  "doc": "Authorization using a static file.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-file-type",
                      "text": "type",
                      "type": "String(\"file\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-file-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "Path to the file which contains the ACL rules.\nIf the file provisioned before starting EMQX node,\nit can be placed anywhere as long as EMQX has read access to it.\nThat is, EMQX will treat it as read only.\n\nIn case the rule-set is created or updated from EMQX Dashboard or HTTP API,\na new file will be created and placed in `authz` subdirectory inside EMQX's `data_dir`,\nand the old file will not be used anymore.",
                      "hash": "V-authorization-S-authorization-sources-S-file-path",
                      "text": "path",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-file",
                  "text": "file"
                },
                {
                  "doc": "Authorization using a built-in database (mnesia).",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-builtin_db-type",
                      "text": "type",
                      "type": "String(\"built_in_database\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-builtin_db-enable",
                      "text": "enable",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-builtin_db",
                  "text": "builtin_db"
                },
                {
                  "doc": "Authorization using an external HTTP server (via GET requests).",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-type",
                      "text": "type",
                      "type": "String(\"http\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "URL of the auth server.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-url",
                      "text": "url",
                      "type": "String"
                    },
                    {
                      "default": "30s",
                      "doc": "HTTP request timeout.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "HTTP request body.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-body",
                      "text": "body",
                      "type": "Map"
                    },
                    {
                      "default": "15s",
                      "doc": "The timeout when connecting to the HTTP server.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.0.4.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since 5.0.4.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-retry_interval",
                      "text": "retry_interval",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "The pool size.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "100",
                      "doc": "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-enable_pipelining",
                      "text": "enable_pipelining",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "Configure HTTP request parameters.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-request",
                      "refs": [
                        {
                          "doc": "",
                          "fields": [
                            {
                              "doc": "HTTP method.",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-request-S-request-method",
                              "text": "method",
                              "type": "String"
                            },
                            {
                              "doc": "URL path.",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-request-S-request-path",
                              "text": "path",
                              "type": "String"
                            },
                            {
                              "doc": "HTTP request body.",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-request-S-request-body",
                              "text": "body",
                              "type": "String"
                            },
                            {
                              "doc": "List of HTTP headers.",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-request-S-request-headers",
                              "text": "headers",
                              "type": "Map"
                            },
                            {
                              "doc": "Max retry times if error on sending request.",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-request-S-request-max_retries",
                              "text": "max_retries",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "HTTP request timeout.",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-request-S-request-request_timeout",
                              "text": "request_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-http_get-request-S-request",
                          "text": "request"
                        }
                      ],
                      "text": "request",
                      "type": "Struct(request)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "HTTP method.",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-method",
                      "text": "method",
                      "type": "String(\"get\")"
                    },
                    {
                      "default": "{\n  accept = \"application/json\"\n  cache-control = no-cache\n  connection = keep-alive\n  keep-alive = \"timeout=30, max=1000\"\n}\n",
                      "doc": "List of HTTP headers (without <code>content-type</code>).",
                      "hash": "V-authorization-S-authorization-sources-S-http_get-headers",
                      "text": "headers",
                      "type": "Map"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-http_get",
                  "text": "http_get"
                },
                {
                  "doc": "Authorization using an external HTTP server (via POST requests).",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-type",
                      "text": "type",
                      "type": "String(\"http\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "URL of the auth server.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-url",
                      "text": "url",
                      "type": "String"
                    },
                    {
                      "default": "30s",
                      "doc": "HTTP request timeout.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "HTTP request body.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-body",
                      "text": "body",
                      "type": "Map"
                    },
                    {
                      "default": "15s",
                      "doc": "The timeout when connecting to the HTTP server.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.0.4.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since 5.0.4.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-retry_interval",
                      "text": "retry_interval",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "The pool size.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "100",
                      "doc": "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-enable_pipelining",
                      "text": "enable_pipelining",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "Configure HTTP request parameters.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-request",
                      "refs": [
                        {
                          "doc": "",
                          "fields": [
                            {
                              "doc": "HTTP method.",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-request-S-request-method",
                              "text": "method",
                              "type": "String"
                            },
                            {
                              "doc": "URL path.",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-request-S-request-path",
                              "text": "path",
                              "type": "String"
                            },
                            {
                              "doc": "HTTP request body.",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-request-S-request-body",
                              "text": "body",
                              "type": "String"
                            },
                            {
                              "doc": "List of HTTP headers.",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-request-S-request-headers",
                              "text": "headers",
                              "type": "Map"
                            },
                            {
                              "doc": "Max retry times if error on sending request.",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-request-S-request-max_retries",
                              "text": "max_retries",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "HTTP request timeout.",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-request-S-request-request_timeout",
                              "text": "request_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-http_post-request-S-request",
                          "text": "request"
                        }
                      ],
                      "text": "request",
                      "type": "Struct(request)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "HTTP method.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-method",
                      "text": "method",
                      "type": "String(\"post\")"
                    },
                    {
                      "default": "{\n  accept = \"application/json\"\n  cache-control = no-cache\n  connection = keep-alive\n  content-type = \"application/json\"\n  keep-alive = \"timeout=30, max=1000\"\n}\n",
                      "doc": "List of HTTP Headers.",
                      "hash": "V-authorization-S-authorization-sources-S-http_post-headers",
                      "text": "headers",
                      "type": "Map"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-http_post",
                  "text": "http_post"
                },
                {
                  "doc": "Authorization using a single Redis instance.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-type",
                      "text": "type",
                      "type": "String(\"redis\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "single",
                      "doc": "Single mode. Must be set to 'single' when Redis server is running in single mode.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-redis_type",
                      "text": "redis_type",
                      "type": "String(\"single\")"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "0",
                      "doc": "Redis database ID.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-database",
                      "text": "database",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "Database query used to retrieve authorization data.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_single-cmd",
                      "text": "cmd",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-redis_single",
                  "text": "redis_single"
                },
                {
                  "doc": "Authorization using a Redis Sentinel.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-type",
                      "text": "type",
                      "type": "String(\"redis\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "sentinel",
                      "doc": "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-redis_type",
                      "text": "redis_type",
                      "type": "String(\"sentinel\")"
                    },
                    {
                      "doc": "The cluster name in Redis sentinel mode.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-sentinel",
                      "text": "sentinel",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "0",
                      "doc": "Redis database ID.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-database",
                      "text": "database",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "Database query used to retrieve authorization data.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_sentinel-cmd",
                      "text": "cmd",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-redis_sentinel",
                  "text": "redis_sentinel"
                },
                {
                  "doc": "Authorization using a Redis cluster.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-type",
                      "text": "type",
                      "type": "String(\"redis\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "cluster",
                      "doc": "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-redis_type",
                      "text": "redis_type",
                      "type": "String(\"cluster\")"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "Database query used to retrieve authorization data.",
                      "hash": "V-authorization-S-authorization-sources-S-redis_cluster-cmd",
                      "text": "cmd",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-redis_cluster",
                  "text": "redis_cluster"
                },
                {
                  "doc": "Authorization using a MySQL database.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-type",
                      "text": "type",
                      "type": "String(\"mysql\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MySQL default port 3306 is used if `[:Port]` is not specified.",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "root",
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "SQL 预处理语句列表。",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-prepare_statement",
                      "text": "prepare_statement",
                      "type": "Map"
                    },
                    {
                      "doc": "Database query used to retrieve authorization data.",
                      "hash": "V-authorization-S-authorization-sources-S-mysql-query",
                      "text": "query",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-mysql",
                  "text": "mysql"
                },
                {
                  "doc": "Authorization using a PostgreSQL database.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-type",
                      "text": "type",
                      "type": "String(\"postgresql\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "SQL 预处理语句列表。",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-prepare_statement",
                      "text": "prepare_statement",
                      "type": "Map"
                    },
                    {
                      "doc": "Database query used to retrieve authorization data.",
                      "hash": "V-authorization-S-authorization-sources-S-postgresql-query",
                      "text": "query",
                      "type": "String"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-postgresql",
                  "text": "postgresql"
                },
                {
                  "doc": "Authorization using a single MongoDB instance.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-type",
                      "text": "type",
                      "type": "String(\"mongodb\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "`MongoDB` collection containing the authorization data.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-collection",
                      "text": "collection",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-filter",
                      "text": "filter",
                      "type": "Map"
                    },
                    {
                      "default": "single",
                      "doc": "Standalone instance. Must be set to 'single' when MongoDB server is running in standalone mode.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-mongo_type",
                      "text": "mongo_type",
                      "type": "String(\"single\")"
                    },
                    {
                      "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "unsafe",
                      "doc": "Write mode.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-w_mode",
                      "text": "w_mode",
                      "type": "Enum(unsafe,safe)"
                    },
                    {
                      "default": "false",
                      "doc": "Use DNS SRV record.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-srv_record",
                      "text": "srv_record",
                      "type": "Boolean"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "auto",
                      "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-use_legacy_protocol",
                      "text": "use_legacy_protocol",
                      "type": "Enum(auto,true,false)"
                    },
                    {
                      "doc": "Database name associated with the user's credentials.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-auth_source",
                      "text": "auth_source",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology",
                      "refs": [
                        {
                          "doc": "Topology of MongoDB.",
                          "fields": [
                            {
                              "default": "0",
                              "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-max_overflow",
                              "text": "max_overflow",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-overflow_ttl",
                              "text": "overflow_ttl",
                              "type": "String"
                            },
                            {
                              "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-overflow_check_period",
                              "text": "overflow_check_period",
                              "type": "String"
                            },
                            {
                              "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-local_threshold_ms",
                              "text": "local_threshold_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt a connection before timing out.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-connect_timeout_ms",
                              "text": "connect_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-socket_timeout_ms",
                              "text": "socket_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Specifies how long to block for server selection before throwing an exception.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-server_selection_timeout_ms",
                              "text": "server_selection_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The maximum duration that a worker can wait for a connection to become available.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-wait_queue_timeout_ms",
                              "text": "wait_queue_timeout_ms",
                              "type": "String"
                            },
                            {
                              "default": "200s",
                              "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-heartbeat_frequency_ms",
                              "text": "heartbeat_frequency_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Controls the minimum amount of time to wait between heartbeats.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-min_heartbeat_frequency_ms",
                              "text": "min_heartbeat_frequency_ms",
                              "type": "String"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-mongo_single-topology-S-topology",
                          "text": "topology"
                        }
                      ],
                      "text": "topology",
                      "type": "Struct(topology)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-mongo_single",
                  "text": "mongo_single"
                },
                {
                  "doc": "Authorization using a MongoDB replica set.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-type",
                      "text": "type",
                      "type": "String(\"mongodb\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "`MongoDB` collection containing the authorization data.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-collection",
                      "text": "collection",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-filter",
                      "text": "filter",
                      "type": "Map"
                    },
                    {
                      "default": "rs",
                      "doc": "Replica set. Must be set to 'rs' when MongoDB server is running in 'replica set' mode.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-mongo_type",
                      "text": "mongo_type",
                      "type": "String(\"rs\")"
                    },
                    {
                      "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "unsafe",
                      "doc": "Write mode.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-w_mode",
                      "text": "w_mode",
                      "type": "Enum(unsafe,safe)"
                    },
                    {
                      "default": "master",
                      "doc": "Read mode.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-r_mode",
                      "text": "r_mode",
                      "type": "Enum(master,slave_ok)"
                    },
                    {
                      "doc": "Name of the replica set.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-replica_set_name",
                      "text": "replica_set_name",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "Use DNS SRV record.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-srv_record",
                      "text": "srv_record",
                      "type": "Boolean"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "auto",
                      "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-use_legacy_protocol",
                      "text": "use_legacy_protocol",
                      "type": "Enum(auto,true,false)"
                    },
                    {
                      "doc": "Database name associated with the user's credentials.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-auth_source",
                      "text": "auth_source",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology",
                      "refs": [
                        {
                          "doc": "Topology of MongoDB.",
                          "fields": [
                            {
                              "default": "0",
                              "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-max_overflow",
                              "text": "max_overflow",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-overflow_ttl",
                              "text": "overflow_ttl",
                              "type": "String"
                            },
                            {
                              "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-overflow_check_period",
                              "text": "overflow_check_period",
                              "type": "String"
                            },
                            {
                              "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-local_threshold_ms",
                              "text": "local_threshold_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt a connection before timing out.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-connect_timeout_ms",
                              "text": "connect_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-socket_timeout_ms",
                              "text": "socket_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Specifies how long to block for server selection before throwing an exception.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-server_selection_timeout_ms",
                              "text": "server_selection_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The maximum duration that a worker can wait for a connection to become available.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-wait_queue_timeout_ms",
                              "text": "wait_queue_timeout_ms",
                              "type": "String"
                            },
                            {
                              "default": "200s",
                              "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-heartbeat_frequency_ms",
                              "text": "heartbeat_frequency_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Controls the minimum amount of time to wait between heartbeats.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-min_heartbeat_frequency_ms",
                              "text": "min_heartbeat_frequency_ms",
                              "type": "String"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology",
                          "text": "topology"
                        }
                      ],
                      "text": "topology",
                      "type": "Struct(topology)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-mongo_rs",
                  "text": "mongo_rs"
                },
                {
                  "doc": "Authorization using a sharded MongoDB cluster.",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-type",
                      "text": "type",
                      "type": "String(\"mongodb\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "`MongoDB` collection containing the authorization data.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-collection",
                      "text": "collection",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-filter",
                      "text": "filter",
                      "type": "Map"
                    },
                    {
                      "default": "sharded",
                      "doc": "Sharded cluster. Must be set to 'sharded' when MongoDB server is running in 'sharded' mode.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-mongo_type",
                      "text": "mongo_type",
                      "type": "String(\"sharded\")"
                    },
                    {
                      "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "unsafe",
                      "doc": "Write mode.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-w_mode",
                      "text": "w_mode",
                      "type": "Enum(unsafe,safe)"
                    },
                    {
                      "default": "false",
                      "doc": "Use DNS SRV record.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-srv_record",
                      "text": "srv_record",
                      "type": "Boolean"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "auto",
                      "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-use_legacy_protocol",
                      "text": "use_legacy_protocol",
                      "type": "Enum(auto,true,false)"
                    },
                    {
                      "doc": "Database name associated with the user's credentials.",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-auth_source",
                      "text": "auth_source",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology",
                      "refs": [
                        {
                          "doc": "Topology of MongoDB.",
                          "fields": [
                            {
                              "default": "0",
                              "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-max_overflow",
                              "text": "max_overflow",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-overflow_ttl",
                              "text": "overflow_ttl",
                              "type": "String"
                            },
                            {
                              "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-overflow_check_period",
                              "text": "overflow_check_period",
                              "type": "String"
                            },
                            {
                              "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-local_threshold_ms",
                              "text": "local_threshold_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt a connection before timing out.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-connect_timeout_ms",
                              "text": "connect_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-socket_timeout_ms",
                              "text": "socket_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Specifies how long to block for server selection before throwing an exception.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-server_selection_timeout_ms",
                              "text": "server_selection_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The maximum duration that a worker can wait for a connection to become available.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-wait_queue_timeout_ms",
                              "text": "wait_queue_timeout_ms",
                              "type": "String"
                            },
                            {
                              "default": "200s",
                              "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-heartbeat_frequency_ms",
                              "text": "heartbeat_frequency_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Controls the minimum amount of time to wait between heartbeats.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                              "text": "min_heartbeat_frequency_ms",
                              "type": "String"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology",
                          "text": "topology"
                        }
                      ],
                      "text": "topology",
                      "type": "Struct(topology)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-mongo_sharded",
                  "text": "mongo_sharded"
                },
                {
                  "doc": "AuthZ with LDAP",
                  "fields": [
                    {
                      "doc": "数据后端类型",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-type",
                      "text": "type",
                      "type": "String(\"ldap\")"
                    },
                    {
                      "default": "true",
                      "doc": "设为 <code>true</code> 或 <code>false</code> 以启用或禁用此访问控制数据源",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "mqttPublishTopic",
                      "doc": "Indicates which attribute is used to represent the allowed topics list of the `publish`.",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-publish_attribute",
                      "text": "publish_attribute",
                      "type": "String"
                    },
                    {
                      "default": "mqttSubscriptionTopic",
                      "doc": "Indicates which attribute is used to represent the allowed topics list of the `subscribe`.",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-subscribe_attribute",
                      "text": "subscribe_attribute",
                      "type": "String"
                    },
                    {
                      "default": "mqttPubSubTopic",
                      "doc": "Indicates which attribute is used to represent the both allowed topics list of  `publish` and `subscribe`.",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-all_attribute",
                      "text": "all_attribute",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "Timeout for the LDAP query.",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-query_timeout",
                      "text": "query_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机名条目的格式为：`主机[:端口]`。<br/>\n如果 `[:端口]` 未指定， 将使用 LDAP 默认端口 389。",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "与基本对象条目（或根）相关的名称。\n搜索用户的起点。",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-base_dn",
                      "text": "base_dn",
                      "type": "String"
                    },
                    {
                      "default": "\"(objectClass=mqttUser)\"",
                      "doc": "定义哪些条件必须被依次满足的过滤器\n用于搜索匹配一条给定的条目.<br>\n筛选器的语法遵循RFC 4515，并且还支持占位符。",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-filter",
                      "text": "filter",
                      "type": "String"
                    },
                    {
                      "default": "10s",
                      "doc": "设置每个单独请求所使用的最大时间（以毫秒为单位）。",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-authorization-S-authorization-sources-S-ldap-ssl",
                      "refs": [
                        {
                          "doc": "启用 SSL 连接。",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-authorization-S-authorization-sources-S-ldap-ssl-S-ssl",
                          "text": "ssl"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl)"
                    }
                  ],
                  "hash": "T-authorization-S-authorization-sources-S-ldap",
                  "text": "ldap"
                }
              ],
              "text": "sources",
              "type": "Array(OneOf(Struct(file),Struct(builtin_db),Struct(http_get),Struct(http_post),Struct(redis_single),Struct(redis_sentinel),Struct(redis_cluster),Struct(mysql),Struct(postgresql),Struct(mongo_single),Struct(mongo_rs),Struct(mongo_sharded),Struct(ldap)))"
            }
          ],
          "hash": "T-authorization-S-authorization",
          "text": "authorization"
        }
      ],
      "text": "authorization",
      "type": "Struct(authorization)"
    },
    {
      "hash": "V-node",
      "refs": [
        {
          "doc": "节点名称、Cookie、配置文件、数据目录和 Erlang 虚拟机（BEAM）启动参数。",
          "fields": [
            {
              "default": "\"emqx@127.0.0.1\"",
              "doc": "节点名。格式为 \\<name>@\\<host>。其中 <host> 可以是 IP 地址，也可以是 FQDN。\n详见 http://erlang.org/doc/reference_manual/distributed.html。",
              "hash": "V-node-S-node-name",
              "text": "name",
              "type": "String"
            },
            {
              "doc": "分布式 Erlang 集群使用的 cookie 值。集群间保持一致",
              "hash": "V-node-S-node-cookie",
              "text": "cookie",
              "type": "String"
            },
            {
              "default": "1048576",
              "doc": "Erlang系统同时存在的最大端口数。\n实际选择的最大值可能比设置的数字大得多。\n参考: https://www.erlang.org/doc/man/erl.html",
              "hash": "V-node-S-node-max_ports",
              "text": "max_ports",
              "type": "Integer(1024..134217727)"
            },
            {
              "default": "8192",
              "doc": "Erlang分布式缓冲区的繁忙阈值，单位是KB。",
              "hash": "V-node-S-node-dist_buffer_size",
              "text": "dist_buffer_size",
              "type": "Integer(1..2097151)"
            },
            {
              "doc": "节点数据存放目录，可能会自动创建的子目录如下：<br/>\n- `mnesia/<node_name>`。EMQX的内置数据库目录。例如，`mnesia/emqx@127.0.0.1`。<br/>\n如果节点要被重新命名（例如，`emqx@10.0.1.1`）。旧目录应该首先被删除。<br/>\n- `configs`。在启动时生成的配置，以及集群/本地覆盖的配置。<br/>\n- `patches`: 热补丁文件将被放在这里。<br/>\n- `trace`: 日志跟踪文件。<br/>\n\n**注意**: 一个数据dir不能被两个或更多的EMQX节点同时使用。",
              "hash": "V-node-S-node-data_dir",
              "text": "data_dir",
              "type": "String"
            },
            {
              "default": "15m",
              "doc": "系统调优参数，设置节点运行多久强制进行一次全局垃圾回收。禁用设置为 <code>disabled</code>。",
              "hash": "V-node-S-node-global_gc_interval",
              "text": "global_gc_interval",
              "type": "OneOf(String(\"disabled\"),String)"
            },
            {
              "aliases": [
                "db_role"
              ],
              "default": "core",
              "doc": "选择节点的角色。<br/>\n<code>core</code> 节点提供数据的持久性，并负责写入。建议将核心节点放置在不同的机架或不同的可用区。<br/>\n<code>repliant</code> 节点是临时工作节点。 从集群中删除它们，不影响数据库冗余<br/>\n建议复制节点多于核心节点。<br/>\n注意：该参数仅在设置<code>backend</code>时生效到 <code>rlog</code>。",
              "hash": "V-node-S-node-role",
              "text": "role",
              "type": "Enum(core,replicant)"
            }
          ],
          "hash": "T-node-S-node",
          "text": "node"
        }
      ],
      "text": "node",
      "type": "Struct(node)"
    },
    {
      "hash": "V-cluster",
      "refs": [
        {
          "doc": "EMQX 节点可以组成一个集群，以提高总容量。<br/> 这里指定了节点之间如何连接。",
          "fields": [
            {
              "default": "emqxcl",
              "doc": "EMQX集群名称。每个集群都有一个唯一的名称。服务发现时会用于做路径的一部分。",
              "hash": "V-cluster-S-cluster-name",
              "text": "name",
              "type": "String"
            },
            {
              "default": "manual",
              "doc": "集群节点发现方式。可选值为:\n- manual: 使用 <code>emqx ctl cluster</code> 命令管理集群。<br/>\n- static: 配置静态节点。配置几个固定的节点，新节点通过连接固定节点中的某一个来加入集群。<br/>\n- dns: 使用 DNS A 记录的方式发现节点。<br/>\n- etcd: 使用 etcd 发现节点。<br/>\n- k8s: 使用 Kubernetes API 发现节点。",
              "hash": "V-cluster-S-cluster-discovery_strategy",
              "text": "discovery_strategy",
              "type": "Enum(manual,static,dns,etcd,k8s,mcast)"
            },
            {
              "default": "24h",
              "doc": "指定多久之后从集群中删除离线节点。",
              "hash": "V-cluster-S-cluster-autoclean",
              "text": "autoclean",
              "type": "String"
            },
            {
              "default": "true",
              "doc": "集群脑裂自动恢复机制开关。",
              "hash": "V-cluster-S-cluster-autoheal",
              "text": "autoheal",
              "type": "Boolean"
            },
            {
              "default": "inet_tcp",
              "doc": "分布式 Erlang 集群协议类型。可选值为:<br/>\n- inet_tcp: 使用 IPv4 <br/>\n- inet_tls: 使用 TLS，需要配合 <code>etc/ssl_dist.conf</code> 一起使用。",
              "hash": "V-cluster-S-cluster-proto_dist",
              "text": "proto_dist",
              "type": "Enum(inet_tcp,inet6_tcp,inet_tls,inet6_tls)"
            },
            {
              "hash": "V-cluster-S-cluster-static",
              "refs": [
                {
                  "doc": "静态节点服务发现。新节点通过连接一个节点来加入集群。",
                  "fields": [
                    {
                      "default": "[]",
                      "doc": "集群中的EMQX节点名称列表，\n指定固定的节点列表，多个节点间使用逗号 , 分隔。\n当 cluster.discovery_strategy 为 static 时，此配置项才有效。\n适合于节点数量较少且固定的集群。",
                      "hash": "V-cluster-S-cluster-static-S-cluster_static-seeds",
                      "text": "seeds",
                      "type": "OneOf(String,Array(String))"
                    }
                  ],
                  "hash": "T-cluster-S-cluster-static-S-cluster_static",
                  "text": "cluster_static"
                }
              ],
              "text": "static",
              "type": "Struct(cluster_static)"
            },
            {
              "hash": "V-cluster-S-cluster-dns",
              "refs": [
                {
                  "doc": "DNS SRV 记录服务发现。",
                  "fields": [
                    {
                      "default": "localhost",
                      "doc": "指定 DNS A 记录的名字。emqx 会通过访问这个 DNS A 记录来获取 IP 地址列表。\n当<code>cluster.discovery_strategy</code> 为 <code>dns</code> 时有效。",
                      "hash": "V-cluster-S-cluster-dns-S-cluster_dns-name",
                      "text": "name",
                      "type": "String"
                    },
                    {
                      "default": "a",
                      "doc": "DNS 记录类型。",
                      "hash": "V-cluster-S-cluster-dns-S-cluster_dns-record_type",
                      "text": "record_type",
                      "type": "Enum(a,srv)"
                    }
                  ],
                  "hash": "T-cluster-S-cluster-dns-S-cluster_dns",
                  "text": "cluster_dns"
                }
              ],
              "text": "dns",
              "type": "Struct(cluster_dns)"
            },
            {
              "hash": "V-cluster-S-cluster-etcd",
              "refs": [
                {
                  "doc": "使用 'etcd' 服务的服务发现。",
                  "fields": [
                    {
                      "doc": "指定 etcd 服务的地址。如有多个服务使用逗号 , 分隔。\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。",
                      "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "emqxcl",
                      "doc": "指定 etcd 路径的前缀。每个节点在 etcd 中都会创建一个路径:\nv2/keys/<prefix>/<cluster.name>/<node.name> <br/>\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。",
                      "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-prefix",
                      "text": "prefix",
                      "type": "String"
                    },
                    {
                      "default": "1m",
                      "doc": "指定 etcd 中节点信息的过期时间。\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。",
                      "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-node_ttl",
                      "text": "node_ttl",
                      "type": "String"
                    },
                    {
                      "aliases": [
                        "ssl"
                      ],
                      "doc": "当使用 TLS 连接 etcd 时的配置选项。\n当 cluster.discovery_strategy 为 etcd 时，此配置项才有效。",
                      "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl_options",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-cluster-S-cluster-etcd-S-cluster_etcd",
                  "text": "cluster_etcd"
                }
              ],
              "text": "etcd",
              "type": "Struct(cluster_etcd)"
            },
            {
              "hash": "V-cluster-S-cluster-k8s",
              "refs": [
                {
                  "doc": "Kubernetes 服务发现。",
                  "fields": [
                    {
                      "default": "\"https://kubernetes.default.svc:443\"",
                      "doc": "指定 Kubernetes API Server。如有多个 Server 使用逗号 , 分隔。\n当 cluster.discovery_strategy 为 k8s 时，此配置项才有效。",
                      "hash": "V-cluster-S-cluster-k8s-S-cluster_k8s-apiserver",
                      "text": "apiserver",
                      "type": "String"
                    },
                    {
                      "default": "emqx",
                      "doc": "指定 Kubernetes 中 EMQX 的服务名。\n当 cluster.discovery_strategy 为 k8s 时，此配置项才有效。",
                      "hash": "V-cluster-S-cluster-k8s-S-cluster_k8s-service_name",
                      "text": "service_name",
                      "type": "String"
                    },
                    {
                      "default": "ip",
                      "doc": "当使用 k8s 方式集群时，address_type 用来从 Kubernetes 接口的应答里获取什么形式的 Host 列表。\n指定 <code>cluster.k8s.address_type</code> 为 <code>ip</code>，则将从 Kubernetes 接口中获取集群中其他节点\n的IP地址。",
                      "hash": "V-cluster-S-cluster-k8s-S-cluster_k8s-address_type",
                      "text": "address_type",
                      "type": "Enum(ip,dns,hostname)"
                    },
                    {
                      "default": "default",
                      "doc": "当使用 k8s 方式并且 cluster.k8s.address_type 指定为 dns 类型时，\n可设置 emqx 节点名的命名空间。与 cluster.k8s.suffix 一起使用用以拼接得到节点名列表。",
                      "hash": "V-cluster-S-cluster-k8s-S-cluster_k8s-namespace",
                      "text": "namespace",
                      "type": "String"
                    },
                    {
                      "default": "pod.local",
                      "doc": "当使用 k8s 方式并且 cluster.k8s.address_type 指定为 dns 类型时，可设置 emqx 节点名的后缀。\n与 cluster.k8s.namespace 一起使用用以拼接得到节点名列表。",
                      "hash": "V-cluster-S-cluster-k8s-S-cluster_k8s-suffix",
                      "text": "suffix",
                      "type": "String"
                    }
                  ],
                  "hash": "T-cluster-S-cluster-k8s-S-cluster_k8s",
                  "text": "cluster_k8s"
                }
              ],
              "text": "k8s",
              "type": "Struct(cluster_k8s)"
            }
          ],
          "hash": "T-cluster-S-cluster",
          "text": "cluster"
        }
      ],
      "text": "cluster",
      "type": "Struct(cluster)"
    },
    {
      "hash": "V-log",
      "refs": [
        {
          "doc": "EMQX 支持同时多个日志输出，一个控制台输出，和多个文件输出。\n默认情况下，EMQX 运行在容器中，或者在 'console' 或 'foreground' 模式下运行时，会输出到 控制台，否则输出到文件。",
          "fields": [
            {
              "aliases": [
                "console_handler"
              ],
              "hash": "V-log-S-log-console",
              "refs": [
                {
                  "doc": "日志处理进程将日志事件打印到 EMQX 控制台。",
                  "fields": [
                    {
                      "default": "warning",
                      "doc": "当前日志处理进程的日志级别。\n默认为 warning 级别。",
                      "hash": "V-log-S-log-console-S-console_handler-level",
                      "text": "level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "false",
                      "doc": "启用此日志处理进程。",
                      "hash": "V-log-S-log-console-S-console_handler-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "aliases": [
                        "format"
                      ],
                      "default": "text",
                      "doc": "选择日志格式类型。 <code>text</code> 用于纯文本，<code>json</code> 用于结构化日志记录。",
                      "hash": "V-log-S-log-console-S-console_handler-formatter",
                      "text": "formatter",
                      "type": "Enum(text,json)"
                    },
                    {
                      "default": "system",
                      "doc": "日志中的时间戳使用的时间偏移量。\n可选值为：\n  - <code>system</code>: 本地系统使用的时区偏移量\n  - <code>utc</code>: 0 时区的偏移量\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \"-02:00\" 或者 \"+00:00\"\n默认值为本地系统的时区偏移量：<code>system</code>。",
                      "hash": "V-log-S-log-console-S-console_handler-time_offset",
                      "text": "time_offset",
                      "type": "String"
                    }
                  ],
                  "hash": "T-log-S-log-console-S-console_handler",
                  "text": "console_handler"
                }
              ],
              "text": "console",
              "type": "Struct(console_handler)"
            },
            {
              "aliases": [
                "file_handlers"
              ],
              "default": "{level = warning}",
              "doc": "输出到文件的日志处理进程列表",
              "hash": "V-log-S-log-file",
              "refs": [
                {
                  "doc": "日志处理进程将日志事件打印到文件。",
                  "fields": [
                    {
                      "aliases": [
                        "file",
                        "to"
                      ],
                      "default": "\"${EMQX_LOG_DIR}/emqx.log\"",
                      "doc": "日志文件路径及名字。",
                      "hash": "V-log-S-log-file-S-log_file_handler-path",
                      "text": "path",
                      "type": "String"
                    },
                    {
                      "aliases": [
                        "rotation"
                      ],
                      "default": "10",
                      "doc": "轮换的最大日志文件数。",
                      "hash": "V-log-S-log-file-S-log_file_handler-rotation_count",
                      "text": "rotation_count",
                      "type": "Integer(1..128)"
                    },
                    {
                      "aliases": [
                        "max_size"
                      ],
                      "default": "50MB",
                      "doc": "此参数控制日志文件轮换。 `infinity` 意味着日志文件将无限增长，否则日志文件将在达到 `max_size`（以字节为单位）时进行轮换。\n与 rotation count配合使用。如果 counter 为 10，则是10个文件轮换。",
                      "hash": "V-log-S-log-file-S-log_file_handler-rotation_size",
                      "text": "rotation_size",
                      "type": "OneOf(String(\"infinity\"),String)"
                    },
                    {
                      "default": "warning",
                      "doc": "当前日志处理进程的日志级别。\n默认为 warning 级别。",
                      "hash": "V-log-S-log-file-S-log_file_handler-level",
                      "text": "level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "true",
                      "doc": "启用此日志处理进程。",
                      "hash": "V-log-S-log-file-S-log_file_handler-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "aliases": [
                        "format"
                      ],
                      "default": "text",
                      "doc": "选择日志格式类型。 <code>text</code> 用于纯文本，<code>json</code> 用于结构化日志记录。",
                      "hash": "V-log-S-log-file-S-log_file_handler-formatter",
                      "text": "formatter",
                      "type": "Enum(text,json)"
                    },
                    {
                      "default": "system",
                      "doc": "日志中的时间戳使用的时间偏移量。\n可选值为：\n  - <code>system</code>: 本地系统使用的时区偏移量\n  - <code>utc</code>: 0 时区的偏移量\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \"-02:00\" 或者 \"+00:00\"\n默认值为本地系统的时区偏移量：<code>system</code>。",
                      "hash": "V-log-S-log-file-S-log_file_handler-time_offset",
                      "text": "time_offset",
                      "type": "String"
                    }
                  ],
                  "hash": "T-log-S-log-file-S-log_file_handler",
                  "text": "log_file_handler"
                },
                {
                  "doc": "日志处理进程将日志事件打印到文件。",
                  "fields": [
                    {
                      "aliases": [
                        "file",
                        "to"
                      ],
                      "default": "\"${EMQX_LOG_DIR}/emqx.log\"",
                      "doc": "日志文件路径及名字。",
                      "hash": "V-log-S-log-file-S-log_file_handler-path",
                      "text": "path",
                      "type": "String"
                    },
                    {
                      "aliases": [
                        "rotation"
                      ],
                      "default": "10",
                      "doc": "轮换的最大日志文件数。",
                      "hash": "V-log-S-log-file-S-log_file_handler-rotation_count",
                      "text": "rotation_count",
                      "type": "Integer(1..128)"
                    },
                    {
                      "aliases": [
                        "max_size"
                      ],
                      "default": "50MB",
                      "doc": "此参数控制日志文件轮换。 `infinity` 意味着日志文件将无限增长，否则日志文件将在达到 `max_size`（以字节为单位）时进行轮换。\n与 rotation count配合使用。如果 counter 为 10，则是10个文件轮换。",
                      "hash": "V-log-S-log-file-S-log_file_handler-rotation_size",
                      "text": "rotation_size",
                      "type": "OneOf(String(\"infinity\"),String)"
                    },
                    {
                      "default": "warning",
                      "doc": "当前日志处理进程的日志级别。\n默认为 warning 级别。",
                      "hash": "V-log-S-log-file-S-log_file_handler-level",
                      "text": "level",
                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                    },
                    {
                      "default": "true",
                      "doc": "启用此日志处理进程。",
                      "hash": "V-log-S-log-file-S-log_file_handler-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "aliases": [
                        "format"
                      ],
                      "default": "text",
                      "doc": "选择日志格式类型。 <code>text</code> 用于纯文本，<code>json</code> 用于结构化日志记录。",
                      "hash": "V-log-S-log-file-S-log_file_handler-formatter",
                      "text": "formatter",
                      "type": "Enum(text,json)"
                    },
                    {
                      "default": "system",
                      "doc": "日志中的时间戳使用的时间偏移量。\n可选值为：\n  - <code>system</code>: 本地系统使用的时区偏移量\n  - <code>utc</code>: 0 时区的偏移量\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \"-02:00\" 或者 \"+00:00\"\n默认值为本地系统的时区偏移量：<code>system</code>。",
                      "hash": "V-log-S-log-file-S-log_file_handler-time_offset",
                      "text": "time_offset",
                      "type": "String"
                    }
                  ],
                  "hash": "T-log-S-log-file-S-log_file_handler",
                  "text": "log_file_handler"
                }
              ],
              "text": "file",
              "type": "OneOf(Struct(log_file_handler),Map($handler_name->Struct(log_file_handler)))"
            },
            {
              "default": "{enable = false, level = info}",
              "doc": "审计日志文件处理进程",
              "hash": "V-log-S-log-audit",
              "refs": [
                {
                  "doc": "将日志时间输出到文件的审计日志处理进程。",
                  "fields": [
                    {
                      "default": "\"${EMQX_LOG_DIR}/audit.log\"",
                      "doc": "----",
                      "hash": "V-log-S-log-audit-S-log_audit_handler-path",
                      "text": "path",
                      "type": "String"
                    },
                    {
                      "default": "10",
                      "doc": "轮换的最大日志文件数。",
                      "hash": "V-log-S-log-audit-S-log_audit_handler-rotation_count",
                      "text": "rotation_count",
                      "type": "Integer(1..128)"
                    },
                    {
                      "default": "50MB",
                      "doc": "此参数控制日志文件轮换。 `infinity` 意味着日志文件将无限增长，否则日志文件将在达到 `max_size`（以字节为单位）时进行轮换。\n与 rotation count配合使用。如果 counter 为 10，则是10个文件轮换。",
                      "hash": "V-log-S-log-audit-S-log_audit_handler-rotation_size",
                      "text": "rotation_size",
                      "type": "OneOf(String(\"infinity\"),String)"
                    },
                    {
                      "default": "true",
                      "doc": "启用此日志处理进程。",
                      "hash": "V-log-S-log-audit-S-log_audit_handler-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "system",
                      "doc": "日志中的时间戳使用的时间偏移量。\n可选值为：\n  - <code>system</code>: 本地系统使用的时区偏移量\n  - <code>utc</code>: 0 时区的偏移量\n  - <code>+-[hh]:[mm]</code>: 自定义偏移量，比如 \"-02:00\" 或者 \"+00:00\"\n默认值为本地系统的时区偏移量：<code>system</code>。",
                      "hash": "V-log-S-log-audit-S-log_audit_handler-time_offset",
                      "text": "time_offset",
                      "type": "String"
                    }
                  ],
                  "hash": "T-log-S-log-audit-S-log_audit_handler",
                  "text": "log_audit_handler"
                }
              ],
              "text": "audit",
              "type": "Struct(log_audit_handler)"
            }
          ],
          "hash": "T-log-S-log",
          "text": "log"
        }
      ],
      "text": "log",
      "type": "Struct(log)"
    },
    {
      "hash": "V-rpc",
      "refs": [
        {
          "doc": "EMQX 使用 <code>gen_rpc</code> 库来实现跨节点通信。<br/>\n大多数情况下，默认的配置应该可以工作，但如果你需要做一些性能优化或者实验，可以尝试调整这些参数。",
          "fields": [
            {
              "default": "async",
              "doc": "在 <code>sync</code> 模式下，发送端等待接收端的 ack信号。",
              "hash": "V-rpc-S-rpc-mode",
              "text": "mode",
              "type": "Enum(sync,async)"
            },
            {
              "aliases": [
                "driver"
              ],
              "default": "tcp",
              "doc": "集群间通信使用的传输协议。",
              "hash": "V-rpc-S-rpc-protocol",
              "text": "protocol",
              "type": "Enum(tcp,ssl)"
            },
            {
              "default": "256",
              "doc": "异步模式下，发送的批量消息的最大数量。",
              "hash": "V-rpc-S-rpc-async_batch_size",
              "text": "async_batch_size",
              "type": "Integer"
            },
            {
              "default": "stateless",
              "doc": "<code>manual</code>: 通过 <code>tcp_server_port</code> 来发现端口。\n<br/><code>stateless</code>: 使用无状态的方式来发现端口，使用如下算法。如果节点名称是 <code>\nemqxN@127.0.0.1</code>, N 是一个数字，那么监听端口就是 5370 + N。",
              "hash": "V-rpc-S-rpc-port_discovery",
              "text": "port_discovery",
              "type": "Enum(manual,stateless)"
            },
            {
              "default": "5369",
              "doc": "RPC 本地服务使用的 TCP 端口。<br/>\n只有当 rpc.port_discovery 设置为 manual 时，此配置才会生效。",
              "hash": "V-rpc-S-rpc-tcp_server_port",
              "text": "tcp_server_port",
              "type": "Integer"
            },
            {
              "default": "5369",
              "doc": "RPC 本地服务使用的监听SSL端口。<br/>\n只有当 rpc.port_discovery 设置为 manual 且 <code> dirver </code> 设置为 <code>ssl</code>，\n此配置才会生效。",
              "hash": "V-rpc-S-rpc-ssl_server_port",
              "text": "ssl_server_port",
              "type": "Integer"
            },
            {
              "default": "10",
              "doc": "设置本节点与远程节点之间的 RPC 通信通道的最大数量。",
              "hash": "V-rpc-S-rpc-tcp_client_num",
              "text": "tcp_client_num",
              "type": "Integer(1..256)"
            },
            {
              "default": "5s",
              "doc": "建立 RPC 连接的超时时间。",
              "hash": "V-rpc-S-rpc-connect_timeout",
              "text": "connect_timeout",
              "type": "String"
            },
            {
              "doc": "TLS 证书文件的路径，用于验证集群节点的身份。\n只有当 <code>rpc.driver</code> 设置为 <code>ssl</code> 时，此配置才会生效。",
              "hash": "V-rpc-S-rpc-certfile",
              "text": "certfile",
              "type": "String"
            },
            {
              "doc": "<code>rpc.certfile</code> 的私钥文件的路径。<br/>\n注意：此文件内容是私钥，所以需要设置权限为 600。",
              "hash": "V-rpc-S-rpc-keyfile",
              "text": "keyfile",
              "type": "String"
            },
            {
              "doc": "验证 <code>rpc.certfile</code> 的 CA 证书文件的路径。<br/>\n注意：集群中所有节点的证书必须使用同一个 CA 签发。",
              "hash": "V-rpc-S-rpc-cacertfile",
              "text": "cacertfile",
              "type": "String"
            },
            {
              "default": "5s",
              "doc": "发送 RPC 请求的超时时间。",
              "hash": "V-rpc-S-rpc-send_timeout",
              "text": "send_timeout",
              "type": "String"
            },
            {
              "default": "5s",
              "doc": "远程节点认证的超时时间。",
              "hash": "V-rpc-S-rpc-authentication_timeout",
              "text": "authentication_timeout",
              "type": "String"
            },
            {
              "default": "15s",
              "doc": "同步 RPC 的回复超时时间。",
              "hash": "V-rpc-S-rpc-call_receive_timeout",
              "text": "call_receive_timeout",
              "type": "String"
            },
            {
              "default": "15m",
              "doc": "broker 之间的连接在最后一条消息发送后保持打开的时间。",
              "hash": "V-rpc-S-rpc-socket_keepalive_idle",
              "text": "socket_keepalive_idle",
              "type": "String"
            },
            {
              "default": "75s",
              "doc": "keepalive 消息的间隔。",
              "hash": "V-rpc-S-rpc-socket_keepalive_interval",
              "text": "socket_keepalive_interval",
              "type": "String"
            },
            {
              "default": "9",
              "doc": "keepalive 探测消息发送失败的次数，直到 RPC 连接被认为已经断开。",
              "hash": "V-rpc-S-rpc-socket_keepalive_count",
              "text": "socket_keepalive_count",
              "type": "Integer"
            },
            {
              "default": "1MB",
              "doc": "TCP 调节参数。TCP 发送缓冲区大小。",
              "hash": "V-rpc-S-rpc-socket_sndbuf",
              "text": "socket_sndbuf",
              "type": "String"
            },
            {
              "default": "1MB",
              "doc": "TCP 调节参数。TCP 接收缓冲区大小。",
              "hash": "V-rpc-S-rpc-socket_recbuf",
              "text": "socket_recbuf",
              "type": "String"
            },
            {
              "default": "1MB",
              "doc": "TCP 调节参数。用户模式套接字缓冲区大小。",
              "hash": "V-rpc-S-rpc-socket_buffer",
              "text": "socket_buffer",
              "type": "String"
            },
            {
              "default": "true",
              "doc": "兼容旧的无鉴权模式",
              "hash": "V-rpc-S-rpc-insecure_fallback",
              "text": "insecure_fallback",
              "type": "Boolean"
            },
            {
              "default": "[]",
              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
              "hash": "V-rpc-S-rpc-ciphers",
              "text": "ciphers",
              "type": "Array(String)"
            },
            {
              "default": "[tlsv1.3, tlsv1.2]",
              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
              "hash": "V-rpc-S-rpc-tls_versions",
              "text": "tls_versions",
              "type": "Array(String)"
            },
            {
              "default": "\"0.0.0.0\"",
              "doc": "Indicates the IP address for the RPC server to listen on. For example, use <code>\"0.0.0.0\"</code> for IPv4 or <code>\"::\"</code> for IPv6.",
              "hash": "V-rpc-S-rpc-listen_address",
              "text": "listen_address",
              "type": "String"
            },
            {
              "default": "false",
              "doc": "This setting is effective only when <code>rpc.listen_address</code> is assigned an IPv6 address.\nIf set to <code>true</code>, the RPC client will exclusively use IPv6 for connections.\nOtherwise, the client might opt for IPv4, even if the server is on IPv6.",
              "hash": "V-rpc-S-rpc-ipv6_only",
              "text": "ipv6_only",
              "type": "Boolean"
            }
          ],
          "hash": "T-rpc-S-rpc",
          "text": "rpc"
        }
      ],
      "text": "rpc",
      "type": "Struct(rpc)"
    },
    {
      "doc": "系统主题配置。",
      "hash": "V-sys_topics",
      "refs": [
        {
          "doc": "The EMQX Broker periodically publishes its own status, message statistics,\nclient online and offline events to the system topic starting with `$SYS/`.\n\nThe following options control the behavior of `$SYS` topics.",
          "fields": [
            {
              "default": "1m",
              "doc": "发送 `$SYS` 主题的间隔时间。",
              "hash": "V-sys_topics-S-sys_topics-sys_msg_interval",
              "text": "sys_msg_interval",
              "type": "OneOf(String(\"disabled\"),String)"
            },
            {
              "default": "30s",
              "doc": "发送心跳系统消息的间隔时间，它包括：\n  - `$SYS/brokers/<node>/uptime`\n  - `$SYS/brokers/<node>/datetime`",
              "hash": "V-sys_topics-S-sys_topics-sys_heartbeat_interval",
              "text": "sys_heartbeat_interval",
              "type": "OneOf(String(\"disabled\"),String)"
            },
            {
              "doc": "客户端事件消息。",
              "hash": "V-sys_topics-S-sys_topics-sys_event_messages",
              "refs": [
                {
                  "doc": "Enable or disable client lifecycle event publishing.\n\nThe following options affect MQTT clients as well as\ngateway clients. The types of the clients\nare distinguished by the topic prefix:\n\n- For the MQTT clients, the format is:\n`$SYS/broker/<node>/clients/<clientid>/<event>`\n- For the Gateway clients, it is\n`$SYS/broker/<node>/gateway/<gateway-name>/clients/<clientid>/<event>`\n",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "是否开启客户端已连接事件消息。",
                      "hash": "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_connected",
                      "text": "client_connected",
                      "type": "Boolean"
                    },
                    {
                      "default": "true",
                      "doc": "是否开启客户端已断开连接事件消息。",
                      "hash": "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_disconnected",
                      "text": "client_disconnected",
                      "type": "Boolean"
                    },
                    {
                      "default": "false",
                      "doc": "是否开启客户端已成功订阅主题事件消息。",
                      "hash": "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_subscribed",
                      "text": "client_subscribed",
                      "type": "Boolean"
                    },
                    {
                      "default": "false",
                      "doc": "是否开启客户端已成功取消订阅主题事件消息。",
                      "hash": "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_unsubscribed",
                      "text": "client_unsubscribed",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-sys_topics-S-sys_topics-sys_event_messages-S-event_names",
                  "text": "event_names"
                }
              ],
              "text": "sys_event_messages",
              "type": "Struct(event_names)"
            }
          ],
          "hash": "T-sys_topics-S-sys_topics",
          "text": "sys_topics"
        }
      ],
      "text": "sys_topics",
      "type": "Struct(sys_topics)"
    },
    {
      "hash": "V-force_shutdown",
      "refs": [
        {
          "doc": "When the process message queue length, or the memory bytes\nreaches a certain value, the process is forced to close.\n\nNote: \"message queue\" here refers to the \"message mailbox\"\nof the Erlang process, not the `mqueue` of QoS 1 and QoS 2.",
          "fields": [
            {
              "default": "true",
              "doc": "启用 `force_shutdown` 功能。",
              "hash": "V-force_shutdown-S-force_shutdown-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "aliases": [
                "max_message_queue_len"
              ],
              "default": "1000",
              "doc": "每个在线客户端在 EMQX 服务器中都是独立的一个进程。该配置可以设为单个进程的邮箱消息队列设置最大长度，当超过该上限时，客户端会被强制下线。",
              "hash": "V-force_shutdown-S-force_shutdown-max_mailbox_size",
              "text": "max_mailbox_size",
              "type": "Integer(0..inf)"
            },
            {
              "default": "32MB",
              "doc": "Heap 的总大小。",
              "hash": "V-force_shutdown-S-force_shutdown-max_heap_size",
              "text": "max_heap_size",
              "type": "String"
            }
          ],
          "hash": "T-force_shutdown-S-force_shutdown",
          "text": "force_shutdown"
        }
      ],
      "text": "force_shutdown",
      "type": "Struct(force_shutdown)"
    },
    {
      "hash": "V-force_gc",
      "refs": [
        {
          "doc": "Force garbage collection in MQTT connection process after\n they process certain number of messages or bytes of data.",
          "fields": [
            {
              "default": "true",
              "doc": "启用强制垃圾回收。",
              "hash": "V-force_gc-S-force_gc-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "16000",
              "doc": "在进程收到多少消息之后，对此进程执行垃圾回收。",
              "hash": "V-force_gc-S-force_gc-count",
              "text": "count",
              "type": "Integer(0..inf)"
            },
            {
              "default": "16MB",
              "doc": "在进程处理过多少个字节之后，对此进程执行垃圾回收。",
              "hash": "V-force_gc-S-force_gc-bytes",
              "text": "bytes",
              "type": "String"
            }
          ],
          "hash": "T-force_gc-S-force_gc",
          "text": "force_gc"
        }
      ],
      "text": "force_gc",
      "type": "Struct(force_gc)"
    },
    {
      "hash": "V-sysmon",
      "refs": [
        {
          "doc": "Features related to system monitoring and introspection.",
          "fields": [
            {
              "hash": "V-sysmon-S-sysmon-vm",
              "refs": [
                {
                  "doc": "This part of the configuration is responsible for collecting\n BEAM VM events, such as long garbage collection, traffic congestion in the inter-broker\n communication, etc.",
                  "fields": [
                    {
                      "default": "30s",
                      "doc": "定期进程限制检查的时间间隔。",
                      "hash": "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_check_interval",
                      "text": "process_check_interval",
                      "type": "String"
                    },
                    {
                      "default": "80%",
                      "doc": "在发出相应警报之前，本地节点上可以同时存在多少进程的阈值（以进程百分比表示）。",
                      "hash": "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_high_watermark",
                      "text": "process_high_watermark",
                      "type": "String"
                    },
                    {
                      "default": "60%",
                      "doc": "在清除相应警报之前，本地节点上可以同时存在多少进程的阈值（以进程百分比表示）。",
                      "hash": "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_low_watermark",
                      "text": "process_low_watermark",
                      "type": "String"
                    },
                    {
                      "default": "disabled",
                      "doc": "当系统检测到某个 Erlang 进程垃圾回收占用过长时间，会触发一条带有 <code>long_gc</code> 关键字的日志。\n同时还会发布一条主题为 <code>$SYS/sysmon/long_gc</code> 的 MQTT 系统消息。",
                      "hash": "V-sysmon-S-sysmon-vm-S-sysmon_vm-long_gc",
                      "text": "long_gc",
                      "type": "OneOf(String(\"disabled\"),String)"
                    },
                    {
                      "default": "240ms",
                      "doc": "启用后，如果 Erlang VM 调度器出现某个任务占用时间过长时，会触发一条带有 'long_schedule' 关键字的日志。\n同时还会发布一条主题为 <code>$SYS/sysmon/long_schedule</code> 的 MQTT 系统消息。",
                      "hash": "V-sysmon-S-sysmon-vm-S-sysmon_vm-long_schedule",
                      "text": "long_schedule",
                      "type": "OneOf(String(\"disabled\"),String)"
                    },
                    {
                      "default": "32MB",
                      "doc": "启用后，当一个 Erlang 进程申请了大量内存，系统会触发一条带有 <code>large_heap</code> 关键字的\nwarning 级别日志。同时还会发布一条主题为 <code>$SYS/sysmon/busy_dist_port</code> 的 MQTT 系统消息。",
                      "hash": "V-sysmon-S-sysmon-vm-S-sysmon_vm-large_heap",
                      "text": "large_heap",
                      "type": "OneOf(String(\"disabled\"),String)"
                    },
                    {
                      "default": "true",
                      "doc": "启用后，当用于集群接点之间 RPC 的连接过忙时，会触发一条带有 <code>busy_dist_port</code> 关键字的 warning 级别日志。\n同时还会发布一条主题为 <code>$SYS/sysmon/busy_dist_port</code> 的 MQTT 系统消息。",
                      "hash": "V-sysmon-S-sysmon-vm-S-sysmon_vm-busy_dist_port",
                      "text": "busy_dist_port",
                      "type": "Boolean"
                    },
                    {
                      "default": "true",
                      "doc": "当一个系统接口（例如 TCP socket）过忙，会触发一条带有 <code>busy_port</code> 关键字的 warning 级别的日志。\n同时还会发布一条主题为 <code>$SYS/sysmon/busy_port</code> 的 MQTT 系统消息。",
                      "hash": "V-sysmon-S-sysmon-vm-S-sysmon_vm-busy_port",
                      "text": "busy_port",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-sysmon-S-sysmon-vm-S-sysmon_vm",
                  "text": "sysmon_vm"
                }
              ],
              "text": "vm",
              "type": "Struct(sysmon_vm)"
            },
            {
              "hash": "V-sysmon-S-sysmon-os",
              "refs": [
                {
                  "doc": "This part of the configuration is responsible for monitoring\n the host OS health, such as free memory, disk space, CPU load, etc.",
                  "fields": [
                    {
                      "default": "60s",
                      "doc": "定期 CPU 检查的时间间隔。",
                      "hash": "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_check_interval",
                      "text": "cpu_check_interval",
                      "type": "String"
                    },
                    {
                      "default": "80%",
                      "doc": "在发出相应警报之前可以使用多少系统 CPU 的阈值，以系统CPU负载的百分比表示。",
                      "hash": "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_high_watermark",
                      "text": "cpu_high_watermark",
                      "type": "String"
                    },
                    {
                      "default": "60%",
                      "doc": "在解除相应警报之前可以使用多少系统 CPU 的阈值，以系统CPU负载的百分比表示。",
                      "hash": "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_low_watermark",
                      "text": "cpu_low_watermark",
                      "type": "String"
                    },
                    {
                      "default": "60s",
                      "doc": "定期内存检查的时间间隔。",
                      "hash": "V-sysmon-S-sysmon-os-S-sysmon_os-mem_check_interval",
                      "text": "mem_check_interval",
                      "type": "OneOf(String(\"disabled\"),String)"
                    },
                    {
                      "default": "70%",
                      "doc": "在发出相应报警之前可以分配多少系统内存的阈值，以系统内存的百分比表示。",
                      "hash": "V-sysmon-S-sysmon-os-S-sysmon_os-sysmem_high_watermark",
                      "text": "sysmem_high_watermark",
                      "type": "String"
                    },
                    {
                      "default": "5%",
                      "doc": "在发出相应警报之前，一个Erlang进程可以分配多少系统内存的阈值，以系统内存的百分比表示。",
                      "hash": "V-sysmon-S-sysmon-os-S-sysmon_os-procmem_high_watermark",
                      "text": "procmem_high_watermark",
                      "type": "String"
                    }
                  ],
                  "hash": "T-sysmon-S-sysmon-os-S-sysmon_os",
                  "text": "sysmon_os"
                }
              ],
              "text": "os",
              "type": "Struct(sysmon_os)"
            }
          ],
          "hash": "T-sysmon-S-sysmon",
          "text": "sysmon"
        }
      ],
      "text": "sysmon",
      "type": "Struct(sysmon)"
    },
    {
      "hash": "V-alarm",
      "refs": [
        {
          "doc": "Settings for the alarms.",
          "fields": [
            {
              "default": "[log, publish]",
              "doc": "警报激活时触发的动作。<br/>目前，支持以下操作：<code>log</code> 和 <code>publish</code>.\n<code>log</code> 将告警写入日志 (控制台或者文件).\n<code>publish</code> 将告警作为 MQTT 消息发布到系统主题:\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/activate</code> and\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/deactivate</code>",
              "hash": "V-alarm-S-alarm-actions",
              "text": "actions",
              "type": "Array(String)"
            },
            {
              "default": "1000",
              "doc": "要保留为历史记录的已停用报警的最大总数。当超过此限制时，将删除最旧的停用报警，以限制总数。",
              "hash": "V-alarm-S-alarm-size_limit",
              "text": "size_limit",
              "type": "Integer(1..3000)"
            },
            {
              "default": "24h",
              "doc": "停用报警的保留时间。报警在停用时不会立即删除，而是在保留时间之后删除。",
              "hash": "V-alarm-S-alarm-validity_period",
              "text": "validity_period",
              "type": "String"
            }
          ],
          "hash": "T-alarm-S-alarm",
          "text": "alarm"
        }
      ],
      "text": "alarm",
      "type": "Struct(alarm)"
    },
    {
      "hash": "V-flapping_detect",
      "refs": [
        {
          "doc": "This config controls the allowed maximum number of `CONNECT` packets received\nfrom the same clientid in a time frame defined by `window_time`.\nAfter the limit is reached, successive `CONNECT` requests are forbidden\n(banned) until the end of the time period defined by `ban_time`.",
          "fields": [
            {
              "default": "false",
              "doc": "启用抖动检测功能。",
              "hash": "V-flapping_detect-S-flapping_detect-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "1m",
              "doc": "抖动检测的时间窗口。",
              "hash": "V-flapping_detect-S-flapping_detect-window_time",
              "text": "window_time",
              "type": "String"
            },
            {
              "default": "15",
              "doc": "MQTT 客户端在“窗口”时间内允许的最大断开次数。",
              "hash": "V-flapping_detect-S-flapping_detect-max_count",
              "text": "max_count",
              "type": "Integer(0..+inf)"
            },
            {
              "default": "5m",
              "doc": "抖动的客户端将会被禁止登录多长时间。",
              "hash": "V-flapping_detect-S-flapping_detect-ban_time",
              "text": "ban_time",
              "type": "String"
            }
          ],
          "hash": "T-flapping_detect-S-flapping_detect",
          "text": "flapping_detect"
        }
      ],
      "text": "flapping_detect",
      "type": "Struct(flapping_detect)"
    },
    {
      "hash": "V-bridges",
      "refs": [
        {
          "doc": "MQTT数据桥接配置",
          "fields": [
            {
              "doc": "转发消息到 HTTP 服务器的 WebHook",
              "hash": "V-bridges-S-bridges-webhook",
              "refs": [
                {
                  "doc": "Configuration for an HTTP bridge.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "Enable or disable this bridge",
                      "hash": "V-bridges-S-bridges-webhook-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-webhook-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "default": "15s",
                      "doc": "The timeout when connecting to the HTTP server.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.0.4.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-retry_interval",
                      "text": "retry_interval",
                      "type": "String"
                    },
                    {
                      "default": "random",
                      "doc": "The type of the pool. Can be one of `random`, `hash`.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-pool_type",
                      "text": "pool_type",
                      "type": "Enum(random,hash)"
                    },
                    {
                      "default": "8",
                      "doc": "The pool size.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "100",
                      "doc": "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-enable_pipelining",
                      "text": "enable_pipelining",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "Configure HTTP request parameters.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-request",
                      "refs": [
                        {
                          "doc": "",
                          "fields": [
                            {
                              "doc": "HTTP method.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-request-S-request-method",
                              "text": "method",
                              "type": "String"
                            },
                            {
                              "doc": "URL path.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-request-S-request-path",
                              "text": "path",
                              "type": "String"
                            },
                            {
                              "doc": "HTTP request body.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-request-S-request-body",
                              "text": "body",
                              "type": "String"
                            },
                            {
                              "doc": "List of HTTP headers.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-request-S-request-headers",
                              "text": "headers",
                              "type": "Map"
                            },
                            {
                              "doc": "Max retry times if error on sending request.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-request-S-request-max_retries",
                              "text": "max_retries",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "HTTP request timeout.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-request-S-request-request_timeout",
                              "text": "request_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-webhook-S-config-request-S-request",
                          "text": "request"
                        }
                      ],
                      "text": "request",
                      "type": "Struct(request)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-webhook-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-webhook-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "The URL of the HTTP Bridge.<br/>\nTemplate with variables is allowed in the path, but variables cannot be used in the scheme, host,\nor port part.<br/>\nFor example, <code> http://localhost:9901/${topic} </code> is allowed, but\n<code> http://${host}:9901/message </code> or <code> http://localhost:${port}/message </code>\nis not allowed.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-url",
                      "text": "url",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.0.12.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-direction",
                      "text": "direction",
                      "type": "String(\"egress\")"
                    },
                    {
                      "doc": "The MQTT topic filter to be forwarded to the HTTP server. All MQTT 'PUBLISH' messages with the topic\nmatching the local_topic will be forwarded.<br/>\nNOTE: if this bridge is used as the action of a rule (EMQX rule engine), and also local_topic is\nconfigured, then both the data got from the rule and the MQTT messages that match local_topic\nwill be forwarded.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "post",
                      "doc": "The method of the HTTP request. All the available methods are: post, put, get, delete.<br/>\nTemplate with variables is allowed.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-method",
                      "text": "method",
                      "type": "Enum(post,put,get,delete)"
                    },
                    {
                      "default": "{\n  accept = \"application/json\"\n  cache-control = no-cache\n  connection = keep-alive\n  content-type = \"application/json\"\n  keep-alive = \"timeout=5\"\n}\n",
                      "doc": "The headers of the HTTP request.<br/>\nTemplate with variables is allowed.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-headers",
                      "text": "headers",
                      "type": "Map"
                    },
                    {
                      "doc": "The body of the HTTP request.<br/>\nIf not provided, the body will be a JSON object of all the available fields.<br/>\nThere, 'all the available fields' means the context of a MQTT message when\nthis webhook is triggered by receiving a MQTT message (the `local_topic` is set),\nor the context of the event when this webhook is triggered by a rule (i.e. this\nwebhook is used as an action of a rule).<br/>\nTemplate with variables is allowed.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-body",
                      "text": "body",
                      "type": "String"
                    },
                    {
                      "default": "2",
                      "doc": "HTTP request max retry times if failed.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since v5.0.26.",
                      "hash": "V-bridges-S-bridges-webhook-S-config-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-webhook-S-config",
                  "text": "config"
                }
              ],
              "text": "webhook",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "桥接到另一个 MQTT Broker 的 MQTT数据桥接",
              "hash": "V-bridges-S-bridges-mqtt",
              "refs": [
                {
                  "doc": "MQTT数据桥接的配置。",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mqtt-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "Deprecated since v5.1.0 & e5.1.0.",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-mode",
                      "text": "mode",
                      "type": "Enum(cluster_shareload)"
                    },
                    {
                      "doc": "The host and port of the remote MQTT broker",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "Optional prefix to prepend to the clientid used by egress bridges.",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-clientid_prefix",
                      "text": "clientid_prefix",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.16.",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-reconnect_interval",
                      "text": "reconnect_interval",
                      "type": "String"
                    },
                    {
                      "default": "v4",
                      "doc": "The MQTT protocol version",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-proto_ver",
                      "text": "proto_ver",
                      "type": "Enum(v3,v4,v5)"
                    },
                    {
                      "default": "false",
                      "doc": "If enable bridge mode.\nNOTE: This setting is only for MQTT protocol version older than 5.0, and the remote MQTT\nbroker MUST support this feature.\nIf bridge_mode is set to true, the bridge will indicate to the remote broker that it is a bridge not an ordinary client.\nThis means that loop detection will be more effective and that retained messages will be propagated correctly.",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-bridge_mode",
                      "text": "bridge_mode",
                      "type": "Boolean"
                    },
                    {
                      "doc": "The username of the MQTT protocol",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "The password of the MQTT protocol",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "true",
                      "doc": "Whether to start a clean session when reconnecting a remote broker for ingress bridge",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-clean_start",
                      "text": "clean_start",
                      "type": "Boolean"
                    },
                    {
                      "default": "300s",
                      "doc": "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,\n- `s` for seconds,\n- `m` for minutes,\n- `h` for hours;\n<br/>or combination of whereof: `1h5m0s`",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-keepalive",
                      "text": "keepalive",
                      "type": "String"
                    },
                    {
                      "default": "15s",
                      "doc": "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,\n- `s` for seconds,\n- `m` for minutes,\n- `h` for hours;\n<br/>or combination of whereof: `1h5m0s`",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-retry_interval",
                      "text": "retry_interval",
                      "type": "String"
                    },
                    {
                      "default": "32",
                      "doc": "Max inflight (sent, but un-acked) messages of the MQTT protocol",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-max_inflight",
                      "text": "max_inflight",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mqtt-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "The ingress config defines how this bridge receive messages from the remote MQTT broker, and then\n        send them to the local broker.<br/>\n        Template with variables is allowed in 'remote.qos', 'local.topic', 'local.qos', 'local.retain', 'local.payload'.<br/>\n        NOTE: if this bridge is used as the input of a rule, and also 'local.topic' is\n        configured, then messages got from the remote broker will be sent to both the 'local.topic' and\n        the rule.",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-ingress",
                      "refs": [
                        {
                          "doc": "The ingress config defines how this bridge receive messages from the remote MQTT broker, and then\n        send them to the local broker.<br/>\n        Template with variables is allowed in 'remote.qos', 'local.topic', 'local.qos', 'local.retain', 'local.payload'.<br/>\n        NOTE: if this bridge is used as the input of a rule, and also 'local.topic' is\n        configured, then messages got from the remote broker will be sent to both the 'local.topic' and\n        the rule.",
                          "fields": [
                            {
                              "default": "8",
                              "doc": "Size of the pool of MQTT clients that will ingest messages from the remote broker.<br/>\nThis value will be respected only if 'remote.topic' is a shared subscription topic or topic-filter\n(for example `$share/name1/topic1` or `$share/name2/topic2/#`), otherwise only a single MQTT client will be used.\nEach MQTT client will be assigned 'clientid' of the form '${clientid_prefix}:${bridge_name}:ingress:${node}:${n}'\nwhere 'n' is the number of a client inside the pool.\nNOTE: Non-shared subscription will not work well when EMQX is clustered.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-pool_size",
                              "text": "pool_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "The configs about subscribing to the remote broker.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-remote",
                              "refs": [
                                {
                                  "doc": "The configs about subscribing to the remote broker.",
                                  "fields": [
                                    {
                                      "doc": "Receive messages from which topic of the remote broker",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-remote-S-ingress_remote-topic",
                                      "text": "topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1",
                                      "doc": "The QoS level to be used when subscribing to the remote broker",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-remote-S-ingress_remote-qos",
                                      "text": "qos",
                                      "type": "Integer(0..2)"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-remote-S-ingress_remote",
                                  "text": "ingress_remote"
                                }
                              ],
                              "text": "remote",
                              "type": "Struct(ingress_remote)"
                            },
                            {
                              "doc": "The configs about sending message to the local broker.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-local",
                              "refs": [
                                {
                                  "doc": "The configs about sending message to the local broker.",
                                  "fields": [
                                    {
                                      "doc": "Send messages to which topic of the local broker.<br/>\nTemplate with variables is allowed.",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-local-S-ingress_local-topic",
                                      "text": "topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${qos}\"",
                                      "doc": "The QoS of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-local-S-ingress_local-qos",
                                      "text": "qos",
                                      "type": "OneOf(Integer(0..2),String)"
                                    },
                                    {
                                      "default": "\"${retain}\"",
                                      "doc": "The 'retain' flag of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-local-S-ingress_local-retain",
                                      "text": "retain",
                                      "type": "OneOf(Boolean,String)"
                                    },
                                    {
                                      "doc": "The payload of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-local-S-ingress_local-payload",
                                      "text": "payload",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-mqtt-S-config-ingress-S-ingress-local-S-ingress_local",
                                  "text": "ingress_local"
                                }
                              ],
                              "text": "local",
                              "type": "Struct(ingress_local)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mqtt-S-config-ingress-S-ingress",
                          "text": "ingress"
                        }
                      ],
                      "text": "ingress",
                      "type": "Struct(ingress)"
                    },
                    {
                      "doc": "The egress config defines how this bridge forwards messages from the local broker to the remote broker.<br/>\nTemplate with variables is allowed in 'remote.topic', 'local.qos', 'local.retain', 'local.payload'.<br/>\nNOTE: if this bridge is used as the action of a rule, and also 'local.topic'\nis configured, then both the data got from the rule and the MQTT messages that matches\n'local.topic' will be forwarded.",
                      "hash": "V-bridges-S-bridges-mqtt-S-config-egress",
                      "refs": [
                        {
                          "doc": "The egress config defines how this bridge forwards messages from the local broker to the remote broker.<br/>\nTemplate with variables is allowed in 'remote.topic', 'local.qos', 'local.retain', 'local.payload'.<br/>\nNOTE: if this bridge is used as the action of a rule, and also 'local.topic'\nis configured, then both the data got from the rule and the MQTT messages that matches\n'local.topic' will be forwarded.",
                          "fields": [
                            {
                              "default": "8",
                              "doc": "Size of the pool of MQTT clients that will publish messages to the remote broker.<br/>\nEach MQTT client will be assigned 'clientid' of the form '${clientid_prefix}:${bridge_name}:egress:${node}:${n}'\nwhere 'n' is the number of a client inside the pool.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-egress-S-egress-pool_size",
                              "text": "pool_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "The configs about receiving messages from local broker.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-egress-S-egress-local",
                              "refs": [
                                {
                                  "doc": "The configs about receiving messages from local broker.",
                                  "fields": [
                                    {
                                      "doc": "The local topic to be forwarded to the remote broker",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-egress-S-egress-local-S-egress_local-topic",
                                      "text": "topic",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-mqtt-S-config-egress-S-egress-local-S-egress_local",
                                  "text": "egress_local"
                                }
                              ],
                              "text": "local",
                              "type": "Struct(egress_local)"
                            },
                            {
                              "doc": "The configs about sending message to the remote broker.",
                              "hash": "V-bridges-S-bridges-mqtt-S-config-egress-S-egress-remote",
                              "refs": [
                                {
                                  "doc": "The configs about sending message to the remote broker.",
                                  "fields": [
                                    {
                                      "doc": "Forward to which topic of the remote broker.<br/>\nTemplate with variables is allowed.",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-egress-S-egress-remote-S-egress_remote-topic",
                                      "text": "topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1",
                                      "doc": "The QoS of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-egress-S-egress-remote-S-egress_remote-qos",
                                      "text": "qos",
                                      "type": "OneOf(Integer(0..2),String)"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "The 'retain' flag of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-egress-S-egress-remote-S-egress_remote-retain",
                                      "text": "retain",
                                      "type": "OneOf(Boolean,String)"
                                    },
                                    {
                                      "doc": "The payload of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                                      "hash": "V-bridges-S-bridges-mqtt-S-config-egress-S-egress-remote-S-egress_remote-payload",
                                      "text": "payload",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-mqtt-S-config-egress-S-egress-remote-S-egress_remote",
                                  "text": "egress_remote"
                                }
                              ],
                              "text": "remote",
                              "type": "Struct(egress_remote)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mqtt-S-config-egress-S-egress",
                          "text": "egress"
                        }
                      ],
                      "text": "egress",
                      "type": "Struct(egress)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-mqtt-S-config",
                  "text": "config"
                }
              ],
              "text": "mqtt",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "HStreamDB Bridge Config",
              "hash": "V-bridges-S-bridges-hstreamdb",
              "refs": [
                {
                  "doc": "Configuration for an HStreamDB bridge.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "egress",
                      "doc": "The direction of this bridge, MUST be 'egress'",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-direction",
                      "text": "direction",
                      "type": "String(\"egress\")"
                    },
                    {
                      "doc": "The MQTT topic filter to be forwarded to the HStreamDB. All MQTT 'PUBLISH' messages with the topic\nmatching the local_topic will be forwarded.</br>\nNOTE: if this bridge is used as the action of a rule (EMQX rule engine), and also local_topic is\nconfigured, then both the data got from the rule and the MQTT messages that match local_topic\nwill be forwarded.",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "\"${payload}\"",
                      "doc": "The HStream Record template to be forwarded to the HStreamDB. Placeholders supported.<br>\nNOTE: When you use `raw record` template (which means the data is not a valid JSON), you should use `read` or `subscription` in HStream to get the data.",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-record_template",
                      "text": "record_template",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-hstreamdb-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "default": "\"http://127.0.0.1:6570\"",
                      "doc": "HStreamDB Server URL. Using gRPC http server address.",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-url",
                      "text": "url",
                      "type": "String"
                    },
                    {
                      "doc": "HStreamDB Stream Name.",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-stream",
                      "text": "stream",
                      "type": "String"
                    },
                    {
                      "doc": "HStreamDB Partition Key. Placeholders supported.",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-partition_key",
                      "text": "partition_key",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "30s",
                      "doc": "HStreamDB gRPC Timeout.",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-grpc_timeout",
                      "text": "grpc_timeout",
                      "type": "String"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-hstreamdb-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-hstreamdb-S-config",
                  "text": "config"
                }
              ],
              "text": "hstreamdb",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "MySQL Bridge Config",
              "hash": "V-bridges-S-bridges-mysql",
              "refs": [
                {
                  "doc": "Configuration for an HStreamDB bridge.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "Enable or disable this bridge",
                      "hash": "V-bridges-S-bridges-mysql-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))\"",
                      "doc": "SQL Template",
                      "hash": "V-bridges-S-bridges-mysql-S-config-sql",
                      "text": "sql",
                      "type": "String"
                    },
                    {
                      "doc": "The MQTT topic filter to be forwarded to MySQL. All MQTT 'PUBLISH' messages with the topic\nmatching the local_topic will be forwarded.</br>\nNOTE: if this bridge is used as the action of a rule (EMQX rule engine), and also local_topic is\nconfigured, then both the data got from the rule and the MQTT messages that match local_topic\nwill be forwarded.",
                      "hash": "V-bridges-S-bridges-mysql-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mysql-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MySQL default port 3306 is used if `[:Port]` is not specified.",
                      "hash": "V-bridges-S-bridges-mysql-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-mysql-S-config-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-mysql-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "root",
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-mysql-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-mysql-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-mysql-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-mysql-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mysql-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-mysql-S-config",
                  "text": "config"
                }
              ],
              "text": "mysql",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "TDengine Bridge Config",
              "hash": "V-bridges-S-bridges-tdengine",
              "refs": [
                {
                  "doc": "TDengine 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"insert into t_mqtt_msg(ts, msgid, mqtt_topic, qos, payload, arrived) values (${ts}, '${id}', '${topic}', ${qos}, '${payload}', ${timestamp})\"",
                      "doc": "SQL 模板",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-sql",
                      "text": "sql",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 TDengine。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-tdengine-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 TDengine 默认端口 6041。",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "root",
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-tdengine-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-tdengine-S-config",
                  "text": "config"
                }
              ],
              "text": "tdengine",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Dynamo Bridge Config",
              "hash": "V-bridges-S-bridges-dynamo",
              "refs": [
                {
                  "doc": "DynamoDB 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"\"",
                      "doc": "模板, 默认为空，为空时将会将整个消息存入数据库",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-template",
                      "text": "template",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 DynamoDB。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-dynamo-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "DynamoDB 的地址。",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-url",
                      "text": "url",
                      "type": "String"
                    },
                    {
                      "doc": "DynamoDB 的表。",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-table",
                      "text": "table",
                      "type": "String"
                    },
                    {
                      "doc": "DynamoDB 的访问 ID。",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-aws_access_key_id",
                      "text": "aws_access_key_id",
                      "type": "String"
                    },
                    {
                      "doc": "DynamoDB 的访问密钥。",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-aws_secret_access_key",
                      "text": "aws_secret_access_key",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-dynamo-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-dynamo-S-config",
                  "text": "config"
                }
              ],
              "text": "dynamo",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "RocketMQ Bridge Config",
              "hash": "V-bridges-S-bridges-rocketmq",
              "refs": [
                {
                  "doc": "RocketMQ 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"\"",
                      "doc": "模板, 默认为空，为空时将会将整个消息转发给 RocketMQ。 <br />\n            模板可以是任意带有占位符的合法字符串, 例如:<br />            ${id}, ${username}, ${clientid}, ${timestamp}<br />\n            {\"id\" : ${id}, \"username\" : ${username}}",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-template",
                      "text": "template",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 RocketMQ。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-rocketmq-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 RocketMQ 默认端口 9876。",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "TopicTest",
                      "doc": "RocketMQ 主题",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-topic",
                      "text": "topic",
                      "type": "String"
                    },
                    {
                      "default": "\"\"",
                      "doc": "RocketMQ 服务器的 `accessKey`。",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-access_key",
                      "text": "access_key",
                      "type": "String"
                    },
                    {
                      "default": "\"\"",
                      "doc": "RocketMQ 服务器的 `secretKey`。",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-secret_key",
                      "text": "secret_key",
                      "type": "String"
                    },
                    {
                      "default": "\"\"",
                      "doc": "RocketMQ 服务器安全令牌",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-security_token",
                      "text": "security_token",
                      "type": "String"
                    },
                    {
                      "default": "3s",
                      "doc": "RocketMQ 驱动同步调用的超时时间。",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-sync_timeout",
                      "text": "sync_timeout",
                      "type": "String"
                    },
                    {
                      "default": "3s",
                      "doc": "RocketMQ 主题路由更新间隔。",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-refresh_interval",
                      "text": "refresh_interval",
                      "type": "String"
                    },
                    {
                      "default": "1024KB",
                      "doc": "RocketMQ 驱动的套字节发送消息的缓冲区大小",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-send_buffer",
                      "text": "send_buffer",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-rocketmq-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-rocketmq-S-config",
                  "text": "config"
                }
              ],
              "text": "rocketmq",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Cassandra Bridge Config",
              "hash": "V-bridges-S-bridges-cassandra",
              "refs": [
                {
                  "doc": "Cassandra 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"insert into mqtt_msg(topic, msgid, sender, qos, payload, arrived, retain) values (${topic}, ${id}, ${clientid}, ${qos}, ${payload}, ${timestamp}, ${flags.retain})\"",
                      "doc": "CQL 模板",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-cql",
                      "text": "cql",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 Cassandra。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-cassandra-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port][,Host2:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 Cassandra 默认端口 9042。",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "doc": "要连接到的 Keyspace 名称。",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-keyspace",
                      "text": "keyspace",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-cassandra-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-cassandra-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-cassandra-S-config",
                  "text": "config"
                }
              ],
              "text": "cassandra",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "OpenTSDB Bridge Config",
              "hash": "V-bridges-S-bridges-opents",
              "refs": [
                {
                  "doc": "OpenTSDB 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-opents-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-opents-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-opents-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "服务器的地址。",
                      "hash": "V-bridges-S-bridges-opents-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-opents-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "true",
                      "doc": "是否返回摘要信息。",
                      "hash": "V-bridges-S-bridges-opents-S-config-summary",
                      "text": "summary",
                      "type": "Boolean"
                    },
                    {
                      "default": "false",
                      "doc": "是否返回详细信息。",
                      "hash": "V-bridges-S-bridges-opents-S-config-details",
                      "text": "details",
                      "type": "Boolean"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-opents-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-opents-S-config",
                  "text": "config"
                }
              ],
              "text": "opents",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Oracle Bridge Config",
              "hash": "V-bridges-S-bridges-oracle",
              "refs": [
                {
                  "doc": "Oracle Database 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-oracle-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"insert into t_mqtt_msgs(msgid, topic, qos, payload) values (${id}, ${topic}, ${qos}, ${payload})\"",
                      "doc": "SQL模板。模板字符串可以包含消息元数据和有效载荷字段的占位符。占位符的插入不需要任何检查和特殊格式化，因此必须确保插入的数值格式化和转义正确。模板字符串可以包含占位符模板字符串可以包含消息元数据和有效载荷字段的占位符。这些占位符被插入所以必须确保插入的值的格式正确。因此，确保插入的值格式化和转义正确是非常重要的。模板字符串可以包含占位符模板字符串可以包含消息元数据和有效载荷字段的占位符。这些占位符被插入所以必须确保插入的值的格式正确。确保插入的值被正确地格式化和转义。",
                      "hash": "V-bridges-S-bridges-oracle-S-config-sql",
                      "text": "sql",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 Oracle Database。 </br>注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-oracle-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-oracle-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Oracle Database 默认端口 1521。",
                      "hash": "V-bridges-S-bridges-oracle-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "Oracle Database Sid 名称",
                      "hash": "V-bridges-S-bridges-oracle-S-config-sid",
                      "text": "sid",
                      "type": "String"
                    },
                    {
                      "doc": "Oracle Database 服务名称。",
                      "hash": "V-bridges-S-bridges-oracle-S-config-service_name",
                      "text": "service_name",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-oracle-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-oracle-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-oracle-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-oracle-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-oracle-S-config",
                  "text": "config"
                }
              ],
              "text": "oracle",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Apache IoTDB Bridge Config",
              "hash": "V-bridges-S-bridges-iotdb",
              "refs": [
                {
                  "doc": "IoTDB数据桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用或禁用该桥接",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "auth_basic",
                      "doc": "认证信息",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-authentication",
                      "refs": [
                        {
                          "doc": "基本认证（basic auth）的参数。",
                          "fields": [
                            {
                              "doc": "Basic auth 用户名。类似 IoTDB REST 接口中的用户名。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-authentication-S-auth_basic-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "Basic auth 密码。类似 IoTDB REST 接口中的密码。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-authentication-S-auth_basic-password",
                              "text": "password",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-iotdb-S-config-authentication-S-auth_basic",
                          "text": "auth_basic"
                        }
                      ],
                      "text": "authentication",
                      "type": "OneOf(Struct(auth_basic))"
                    },
                    {
                      "default": "false",
                      "doc": "是否对齐时间序列。",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-is_aligned",
                      "text": "is_aligned",
                      "type": "Boolean"
                    },
                    {
                      "doc": "IoTDB 的设备ID（DeviceID）。可以使用一个占位符。如果留空则 MQTT 消息体中必须有一个 `device_id` 字段，\n或者 EMQX 规则引擎的 SQL 必须输出一个 `device_id` 字段。",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-device_id",
                      "text": "device_id",
                      "type": "String"
                    },
                    {
                      "default": "v1.1.x",
                      "doc": "IoTDB 版本。",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-iotdb_version",
                      "text": "iotdb_version",
                      "type": "Enum(v1.1.x,v1.0.x,v0.13.x)"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-iotdb-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "default": "15s",
                      "doc": "The timeout when connecting to the HTTP server.",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since 5.0.4.",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-retry_interval",
                      "text": "retry_interval",
                      "type": "String"
                    },
                    {
                      "default": "random",
                      "doc": "The type of the pool. Can be one of `random`, `hash`.",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-pool_type",
                      "text": "pool_type",
                      "type": "Enum(random,hash)"
                    },
                    {
                      "default": "8",
                      "doc": "The pool size.",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "100",
                      "doc": "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-enable_pipelining",
                      "text": "enable_pipelining",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-iotdb-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "IoTDB REST 服务的 URL。",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-base_url",
                      "text": "base_url",
                      "type": "String"
                    },
                    {
                      "default": "2",
                      "doc": "HTTP 请求的最大重试次数。",
                      "hash": "V-bridges-S-bridges-iotdb-S-config-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-iotdb-S-config",
                  "text": "config"
                }
              ],
              "text": "iotdb",
              "type": "Map($name->Struct(config))"
            },
            {
              "aliases": [
                "kafka"
              ],
              "doc": "Kafka Producer Bridge Config",
              "hash": "V-bridges-S-bridges-kafka_producer",
              "refs": [
                {
                  "doc": "Kafka Producer 配置。",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用（true）或停用该（false）Kafka 数据桥接。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"\"",
                      "doc": "Descriptive text.",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-description",
                      "text": "description",
                      "type": "String"
                    },
                    {
                      "doc": "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-bootstrap_hosts",
                      "text": "bootstrap_hosts",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "default": "3s",
                      "doc": "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-min_metadata_refresh_interval",
                      "text": "min_metadata_refresh_interval",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "刷新元数据时最大等待时长。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-metadata_request_timeout",
                      "text": "metadata_request_timeout",
                      "type": "String"
                    },
                    {
                      "default": "none",
                      "doc": "认证参数。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-authentication",
                      "refs": [
                        {
                          "doc": "基于用户名密码的认证。",
                          "fields": [
                            {
                              "doc": "SASL 认证方法名称。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-authentication-S-auth_username_password-mechanism",
                              "text": "mechanism",
                              "type": "Enum(plain,scram_sha_256,scram_sha_512)"
                            },
                            {
                              "doc": "SASL 认证的用户名。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-authentication-S-auth_username_password-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "SASL 认证的密码。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-authentication-S-auth_username_password-password",
                              "text": "password",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-authentication-S-auth_username_password",
                          "text": "auth_username_password"
                        },
                        {
                          "doc": "使用 GSSAPI/Kerberos 认证。",
                          "fields": [
                            {
                              "doc": "SASL GSSAPI 认证方法的 Kerberos principal，例如 <code>client_name@MY.KERBEROS.REALM.MYDOMAIN.COM</code>注意：这里使用的 realm 需要配置在 EMQX 服务器的 /etc/krb5.conf 中。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-authentication-S-auth_gssapi_kerberos-kerberos_principal",
                              "text": "kerberos_principal",
                              "type": "String"
                            },
                            {
                              "doc": "SASL GSSAPI 认证方法的 Kerberos keytab 文件。注意：该文件需要上传到 EMQX 服务器中，且运行 EMQX 服务的系统账户需要有读取权限。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-authentication-S-auth_gssapi_kerberos-kerberos_keytab_file",
                              "text": "kerberos_keytab_file",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-authentication-S-auth_gssapi_kerberos",
                          "text": "auth_gssapi_kerberos"
                        }
                      ],
                      "text": "authentication",
                      "type": "OneOf(String(\"none\"),Struct(auth_username_password),Struct(auth_gssapi_kerberos))"
                    },
                    {
                      "doc": "更多 Socket 参数设置。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-socket_opts",
                      "refs": [
                        {
                          "doc": "更多 Socket 参数设置。",
                          "fields": [
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-socket_opts-S-socket_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-socket_opts-S-socket_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-socket_opts-S-socket_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "Enable TCP keepalive for Kafka bridge connections.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: TCP keepalive probes are sent after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-socket_opts-S-socket_opts-tcp_keepalive",
                              "text": "tcp_keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-socket_opts-S-socket_opts",
                          "text": "socket_opts"
                        }
                      ],
                      "text": "socket_opts",
                      "type": "Struct(socket_opts)"
                    },
                    {
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl",
                      "refs": [
                        {
                          "doc": "TLS/SSL options for Kafka client.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "default": "auto",
                              "doc": "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: Allow the client to automatically determine the appropriate SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values will be sent as-is.",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"auto\"),String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "MQTT 主题数据源由桥接指定，或留空由规则动作指定。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "aliases": [
                        "kafka"
                      ],
                      "doc": "Kafka 生产者参数。",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters",
                      "refs": [
                        {
                          "doc": "Kafka 生产者参数。",
                          "fields": [
                            {
                              "doc": "Kafka 主题名称",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-topic",
                              "text": "topic",
                              "type": "String"
                            },
                            {
                              "doc": "用于生成 Kafka 消息的模版。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-message",
                              "refs": [
                                {
                                  "doc": "用于生成 Kafka 消息的模版。",
                                  "fields": [
                                    {
                                      "default": "\"${.clientid}\"",
                                      "doc": "生成 Kafka 消息 Key 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code> ，而非空字符串。",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "text": "key",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${.}\"",
                                      "doc": "生成 Kafka 消息 Value 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code>，而非空字符串。",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "text": "value",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${.timestamp}\"",
                                      "doc": "生成 Kafka 消息时间戳的模版。该时间必需是一个整型数值（可以是字符串格式）例如 <code>1661326462115</code> 或 <code>'1661326462115'</code>。当所需的输入字段不存在，或不是一个整型时，则会使用当前系统时间。",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-message-S-kafka_message-timestamp",
                                      "text": "timestamp",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "text": "kafka_message"
                                }
                              ],
                              "text": "message",
                              "type": "Struct(kafka_message)"
                            },
                            {
                              "default": "896KB",
                              "doc": "最大消息批量字节数。大多数 Kafka 环境的默认最低值是 1 MB，EMQX 的默认值比 1 MB 更小是因为需要补偿 Kafka 消息编码所需要的额外字节（尤其是当每条消息都很小的情况下）。当单个消息的大小超过该限制时，它仍然会被发送，（相当于该批量中只有单个消息）。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "text": "max_batch_bytes",
                              "type": "String"
                            },
                            {
                              "default": "no_compression",
                              "doc": "压缩方法。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-compression",
                              "text": "compression",
                              "type": "Enum(no_compression,snappy,gzip)"
                            },
                            {
                              "default": "random",
                              "doc": "设置消息发布时应该如何选择 Kafka 分区。\n\n<code>random</code>: 为每个消息随机选择一个分区。\n<code>key_dispatch</code>: Hash Kafka message key to a partition number",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-partition_strategy",
                              "text": "partition_strategy",
                              "type": "Enum(random,key_dispatch)"
                            },
                            {
                              "default": "all_isr",
                              "doc": "设置 Kafka leader 在返回给 EMQX 确认之前需要等待多少个 follower 的确认。\n\n<code>all_isr</code>: 需要所有的在线复制者都确认。\n<code>leader_only</code>: 仅需要分区 leader 确认。\n<code>none</code>: 无需 Kafka 回复任何确认。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-required_acks",
                              "text": "required_acks",
                              "type": "Enum(all_isr,leader_only,none)"
                            },
                            {
                              "doc": "Please provide a placeholder to be used as Kafka Headers<br/>\ne.g. <code>${pub_props}</code><br/>\nNotice that the value of the placeholder must either be an object:\n<code>{\"foo\": \"bar\"}</code>\nor an array of key-value pairs:\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code>",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-kafka_headers",
                              "text": "kafka_headers",
                              "type": "String"
                            },
                            {
                              "doc": "Please provide more key-value pairs for Kafka headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending to Kafka.",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "refs": [
                                {
                                  "doc": "Please provide more key-value pairs for Kafka headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending to Kafka.",
                                  "fields": [
                                    {
                                      "doc": "Key of the Kafka header. Placeholders in format of ${var} are supported.",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "text": "kafka_ext_header_key",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Value of the Kafka header. Placeholders in format of ${var} are supported.",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "text": "kafka_ext_header_value",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "text": "producer_kafka_ext_headers"
                                }
                              ],
                              "text": "kafka_ext_headers",
                              "type": "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "default": "none",
                              "doc": "Kafka headers value encode mode<br/>\n - NONE: only add binary values to Kafka headers;<br/>\n - JSON: only add JSON values to Kafka headers,\nand encode it to JSON strings before sending.",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "text": "kafka_header_value_encode_mode",
                              "type": "Enum(none,json)"
                            },
                            {
                              "default": "60s",
                              "doc": "配置 Kafka 刷新分区数量的时间间隔。\nEMQX 发现 Kafka 分区数量增加后，会开始按 <code>partition_strategy<code> 配置，把消息发送到新的分区中。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "text": "partition_count_refresh_interval",
                              "type": "String"
                            },
                            {
                              "default": "10",
                              "doc": "设置 Kafka 生产者（每个分区一个）在收到 Kafka 的确认前最多发送多少个请求（批量）。调大这个值通常可以增加吞吐量，但是，当该值设置大于 1 时存在消息乱序的风险。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-max_inflight",
                              "text": "max_inflight",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-buffer",
                              "refs": [
                                {
                                  "doc": "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                                  "fields": [
                                    {
                                      "default": "memory",
                                      "doc": "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "text": "mode",
                                      "type": "Enum(memory,disk,hybrid)"
                                    },
                                    {
                                      "default": "2GB",
                                      "doc": "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "text": "per_partition_limit",
                                      "type": "String"
                                    },
                                    {
                                      "default": "100MB",
                                      "doc": "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "text": "segment_bytes",
                                      "type": "String"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "text": "memory_overload_protection",
                                      "type": "Boolean"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "text": "producer_buffer"
                                }
                              ],
                              "text": "buffer",
                              "type": "Struct(producer_buffer)"
                            },
                            {
                              "default": "async",
                              "doc": "Query mode. Optional 'sync/async', default 'async'.",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(async,sync)"
                            },
                            {
                              "default": "5s",
                              "doc": "This parameter defines the timeout limit for synchronous queries. It applies only when the bridge query mode is configured to 'sync'.",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "text": "sync_query_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-parameters-S-producer_kafka_opts",
                          "text": "producer_kafka_opts"
                        }
                      ],
                      "text": "parameters",
                      "type": "Struct(producer_kafka_opts)"
                    },
                    {
                      "default": "{}",
                      "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-resource_opts",
                      "refs": [
                        {
                          "doc": "资源相关的选项。",
                          "fields": [
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-kafka_producer-S-kafka_producer-resource_opts-S-resource_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer-resource_opts-S-resource_opts",
                          "text": "resource_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(resource_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-kafka_producer-S-kafka_producer",
                  "text": "kafka_producer"
                }
              ],
              "text": "kafka_producer",
              "type": "Map($name->Struct(kafka_producer))"
            },
            {
              "doc": "Kafka Consumer Bridge Config",
              "hash": "V-bridges-S-bridges-kafka_consumer",
              "refs": [
                {
                  "doc": "Kafka 消费者配置。",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用（true）或停用该（false）Kafka 数据桥接。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"\"",
                      "doc": "Descriptive text.",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-description",
                      "text": "description",
                      "type": "String"
                    },
                    {
                      "doc": "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-bootstrap_hosts",
                      "text": "bootstrap_hosts",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "default": "3s",
                      "doc": "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-min_metadata_refresh_interval",
                      "text": "min_metadata_refresh_interval",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "刷新元数据时最大等待时长。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-metadata_request_timeout",
                      "text": "metadata_request_timeout",
                      "type": "String"
                    },
                    {
                      "default": "none",
                      "doc": "认证参数。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-authentication",
                      "refs": [
                        {
                          "doc": "基于用户名密码的认证。",
                          "fields": [
                            {
                              "doc": "SASL 认证方法名称。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-authentication-S-auth_username_password-mechanism",
                              "text": "mechanism",
                              "type": "Enum(plain,scram_sha_256,scram_sha_512)"
                            },
                            {
                              "doc": "SASL 认证的用户名。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-authentication-S-auth_username_password-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "SASL 认证的密码。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-authentication-S-auth_username_password-password",
                              "text": "password",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_consumer-S-kafka_consumer-authentication-S-auth_username_password",
                          "text": "auth_username_password"
                        },
                        {
                          "doc": "使用 GSSAPI/Kerberos 认证。",
                          "fields": [
                            {
                              "doc": "SASL GSSAPI 认证方法的 Kerberos principal，例如 <code>client_name@MY.KERBEROS.REALM.MYDOMAIN.COM</code>注意：这里使用的 realm 需要配置在 EMQX 服务器的 /etc/krb5.conf 中。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-authentication-S-auth_gssapi_kerberos-kerberos_principal",
                              "text": "kerberos_principal",
                              "type": "String"
                            },
                            {
                              "doc": "SASL GSSAPI 认证方法的 Kerberos keytab 文件。注意：该文件需要上传到 EMQX 服务器中，且运行 EMQX 服务的系统账户需要有读取权限。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-authentication-S-auth_gssapi_kerberos-kerberos_keytab_file",
                              "text": "kerberos_keytab_file",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_consumer-S-kafka_consumer-authentication-S-auth_gssapi_kerberos",
                          "text": "auth_gssapi_kerberos"
                        }
                      ],
                      "text": "authentication",
                      "type": "OneOf(String(\"none\"),Struct(auth_username_password),Struct(auth_gssapi_kerberos))"
                    },
                    {
                      "doc": "更多 Socket 参数设置。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-socket_opts",
                      "refs": [
                        {
                          "doc": "更多 Socket 参数设置。",
                          "fields": [
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-socket_opts-S-socket_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-socket_opts-S-socket_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-socket_opts-S-socket_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "Enable TCP keepalive for Kafka bridge connections.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: TCP keepalive probes are sent after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-socket_opts-S-socket_opts-tcp_keepalive",
                              "text": "tcp_keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_consumer-S-kafka_consumer-socket_opts-S-socket_opts",
                          "text": "socket_opts"
                        }
                      ],
                      "text": "socket_opts",
                      "type": "Struct(socket_opts)"
                    },
                    {
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl",
                      "refs": [
                        {
                          "doc": "TLS/SSL options for Kafka client.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "default": "auto",
                              "doc": "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: Allow the client to automatically determine the appropriate SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values will be sent as-is.",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"auto\"),String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_consumer-S-kafka_consumer-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "Kafka消费者配置。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-kafka",
                      "refs": [
                        {
                          "doc": "Kafka消费者配置。",
                          "fields": [
                            {
                              "default": "896KB",
                              "doc": "设置每次从 Kafka 拉取数据的字节数。如该配置小于 Kafka 消息的大小，可能会影响消费性能。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-kafka-S-consumer_kafka_opts-max_batch_bytes",
                              "text": "max_batch_bytes",
                              "type": "String"
                            },
                            {
                              "default": "latest",
                              "doc": "如不存在偏移量历史记录或历史记录失效，消费者应使用哪个偏移量开始消费。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-kafka-S-consumer_kafka_opts-offset_reset_policy",
                              "text": "offset_reset_policy",
                              "type": "Enum(latest,earliest)"
                            },
                            {
                              "default": "5s",
                              "doc": "指定 Kafka 消费组偏移量提交的时间间隔。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-kafka-S-consumer_kafka_opts-offset_commit_interval_seconds",
                              "text": "offset_commit_interval_seconds",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_consumer-S-kafka_consumer-kafka-S-consumer_kafka_opts",
                          "text": "consumer_kafka_opts"
                        }
                      ],
                      "text": "kafka",
                      "type": "Struct(consumer_kafka_opts)"
                    },
                    {
                      "doc": "指定 Kafka 主题和 MQTT 主题之间的映射关系。 应至少包含一项。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-topic_mapping",
                      "refs": [
                        {
                          "doc": "指定 Kafka 主题和 MQTT 主题之间的映射关系。 应至少包含一项。",
                          "fields": [
                            {
                              "doc": "指定从哪个 Kafka 主题消费消息。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-topic_mapping-S-consumer_topic_mapping-kafka_topic",
                              "text": "kafka_topic",
                              "type": "String"
                            },
                            {
                              "doc": "设置 Kafka 消息向哪个本地 MQTT 主题转发消息。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-topic_mapping-S-consumer_topic_mapping-mqtt_topic",
                              "text": "mqtt_topic",
                              "type": "String"
                            },
                            {
                              "default": "0",
                              "doc": "转发 MQTT 消息时使用的 QoS。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-topic_mapping-S-consumer_topic_mapping-qos",
                              "text": "qos",
                              "type": "Integer(0..2)"
                            },
                            {
                              "default": "\"${.}\"",
                              "doc": "用于转换收到的 Kafka 消息的模板。 默认情况下，它将使用 JSON 格式来序列化来自 Kafka 的所有字段。 这些字段包括：<code>headers</code>：一个包含字符串键值对的 JSON 对象。\n<code>key</code>：Kafka 消息的键（使用选择的编码方式编码）。\n<code>offset</code>：消息的偏移量。\n<code>topic</code>：Kafka 主题。\n<code>ts</code>: 消息的时间戳。\n<code>ts_type</code>：消息的时间戳类型，值可能是： <code>create</code>， <code>append</code> 或 <code>undefined</code>。\n<code>value</code>: Kafka 消息值（使用选择的编码方式编码）。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-topic_mapping-S-consumer_topic_mapping-payload_template",
                              "text": "payload_template",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_consumer-S-kafka_consumer-topic_mapping-S-consumer_topic_mapping",
                          "text": "consumer_topic_mapping"
                        }
                      ],
                      "text": "topic_mapping",
                      "type": "Array(Struct(consumer_topic_mapping))"
                    },
                    {
                      "default": "none",
                      "doc": "通过 MQTT 转发之前，如何处理 Kafka 消息的 Key。<code>none</code> 使用 Kafka 消息中的 Key 原始值，不进行编码。  注意：在这种情况下，Key 必须是一个有效的 UTF-8 字符串。\n<code>base64</code> 对收到的密钥或值使用 base-64 编码。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-key_encoding_mode",
                      "text": "key_encoding_mode",
                      "type": "Enum(none,base64)"
                    },
                    {
                      "default": "none",
                      "doc": "通过 MQTT 转发之前，如何处理 Kafka 消息的 Value。<code>none</code> 使用 Kafka 消息中的 Value 原始值，不进行编码。  注意：在这种情况下，Value 必须是一个有效的 UTF-8 字符串。\n<code>base64</code> 对收到的 Value 使用 base-64 编码。",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-value_encoding_mode",
                      "text": "value_encoding_mode",
                      "type": "Enum(none,base64)"
                    },
                    {
                      "default": "{}",
                      "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-resource_opts",
                      "refs": [
                        {
                          "doc": "资源相关的选项。",
                          "fields": [
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-kafka_consumer-S-kafka_consumer-resource_opts-S-resource_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kafka_consumer-S-kafka_consumer-resource_opts-S-resource_opts",
                          "text": "resource_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(resource_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-kafka_consumer-S-kafka_consumer",
                  "text": "kafka_consumer"
                }
              ],
              "text": "kafka_consumer",
              "type": "Map($name->Struct(kafka_consumer))"
            },
            {
              "doc": "Pulsar Producer Bridge Config",
              "hash": "V-bridges-S-bridges-pulsar_producer",
              "refs": [
                {
                  "doc": "Pulsar 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用（true）或停用（false）该 Pulsar 数据桥接。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "以逗号分隔的 <code>scheme://host[:port]</code> 格式的 Pulsar URL 列表，支持的 scheme 有 <code>pulsar://</code> （默认）和<code>pulsar+ssl://</code>。默认的端口是6650。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "none",
                      "doc": "认证参数。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-authentication",
                      "refs": [
                        {
                          "doc": "基本认证的参数。",
                          "fields": [
                            {
                              "doc": "基本认证用户名。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-authentication-S-auth_basic-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "基本认证密码。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-authentication-S-auth_basic-password",
                              "text": "password",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-pulsar_producer-S-pulsar_producer-authentication-S-auth_basic",
                          "text": "auth_basic"
                        },
                        {
                          "doc": "令牌认证的参数。",
                          "fields": [
                            {
                              "doc": "JWT认证令牌。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-authentication-S-auth_token-jwt",
                              "text": "jwt",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-pulsar_producer-S-pulsar_producer-authentication-S-auth_token",
                          "text": "auth_token"
                        }
                      ],
                      "text": "authentication",
                      "type": "OneOf(String(\"none\"),Struct(auth_basic),Struct(auth_token))"
                    },
                    {
                      "default": "5s",
                      "doc": "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-pulsar_producer-S-pulsar_producer-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "default": "100",
                      "doc": "在一个Pulsar消息中批处理的单个请求的最大数量。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-batch_size",
                      "text": "batch_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "no_compression",
                      "doc": "压缩方法。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-compression",
                      "text": "compression",
                      "type": "Enum(no_compression,snappy,zlib)"
                    },
                    {
                      "default": "1MB",
                      "doc": "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-send_buffer",
                      "text": "send_buffer",
                      "type": "String"
                    },
                    {
                      "default": "3s",
                      "doc": "同步发布时，从Pulsar接收发送回执的最长等待时间。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-sync_timeout",
                      "text": "sync_timeout",
                      "type": "String"
                    },
                    {
                      "default": "infinity",
                      "doc": "当没有连接到Pulsar代理时，信息将被缓冲的时间。 较长的时间意味着将使用更多的内存/磁盘",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-retention_period",
                      "text": "retention_period",
                      "type": "OneOf(String(\"infinity\"),String)"
                    },
                    {
                      "default": "900KB",
                      "doc": "最大消息批量字节数。大多数 Pulsar 环境的默认最低值是 5 MB，EMQX 的默认值比 5 MB 更小是因为需要补偿 Pulsar 消息编码所需要的额外字节（尤其是当每条消息都很小的情况下）。当单个消息的大小超过该限制时，它仍然会被发送，（相当于该批量中只有单个消息）。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-max_batch_bytes",
                      "text": "max_batch_bytes",
                      "type": "String"
                    },
                    {
                      "doc": "MQTT 主题数据源由桥接指定，或留空由规则动作指定。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "Pulsar 主题名称",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-pulsar_topic",
                      "text": "pulsar_topic",
                      "type": "String"
                    },
                    {
                      "default": "random",
                      "doc": "设置消息发布时应该如何选择 Pulsar 分区。\n\n<code>random</code>: 为每个消息随机选择一个分区。\n<code>roundrobin</code>: 依次为每条信息挑选可用的生产商。\n<code>key_dispatch</code>: 将一批信息中的第一条信息的Pulsar信息密钥哈希到一个分区编号。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-strategy",
                      "text": "strategy",
                      "type": "Enum(random,roundrobin,key_dispatch)"
                    },
                    {
                      "doc": "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Pulsar 处理能力，或者当 Pulsar 临时下线时，EMQX 内部会将消息缓存起来。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-buffer",
                      "refs": [
                        {
                          "doc": "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Pulsar 处理能力，或者当 Pulsar 临时下线时，EMQX 内部会将消息缓存起来。",
                          "fields": [
                            {
                              "default": "memory",
                              "doc": "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-buffer-S-producer_buffer-mode",
                              "text": "mode",
                              "type": "Enum(memory,disk,hybrid)"
                            },
                            {
                              "default": "2GB",
                              "doc": "为每个 Pulsar 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-buffer-S-producer_buffer-per_partition_limit",
                              "text": "per_partition_limit",
                              "type": "String"
                            },
                            {
                              "default": "100MB",
                              "doc": "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-buffer-S-producer_buffer-segment_bytes",
                              "text": "segment_bytes",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-buffer-S-producer_buffer-memory_overload_protection",
                              "text": "memory_overload_protection",
                              "type": "Boolean"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-pulsar_producer-S-pulsar_producer-buffer-S-producer_buffer",
                          "text": "producer_buffer"
                        }
                      ],
                      "text": "buffer",
                      "type": "Struct(producer_buffer)"
                    },
                    {
                      "doc": "用于生成 Pulsar 消息的模版。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-message",
                      "refs": [
                        {
                          "doc": "用于生成 Pulsar 消息的模版。",
                          "fields": [
                            {
                              "default": "\"${.clientid}\"",
                              "doc": "生成 Pulsar 消息 Key 的模版。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-message-S-producer_pulsar_message-key",
                              "text": "key",
                              "type": "String"
                            },
                            {
                              "default": "\"${.}\"",
                              "doc": "生成 Pulsar 消息 Value 的模版。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-message-S-producer_pulsar_message-value",
                              "text": "value",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-pulsar_producer-S-pulsar_producer-message-S-producer_pulsar_message",
                          "text": "producer_pulsar_message"
                        }
                      ],
                      "text": "message",
                      "type": "Struct(producer_pulsar_message)"
                    },
                    {
                      "doc": "资源启动相关的选项。",
                      "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "1s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-resource_opts-S-producer_resource_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-resource_opts-S-producer_resource_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-pulsar_producer-S-pulsar_producer-resource_opts-S-producer_resource_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-pulsar_producer-S-pulsar_producer-resource_opts-S-producer_resource_opts",
                          "text": "producer_resource_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(producer_resource_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-pulsar_producer-S-pulsar_producer",
                  "text": "pulsar_producer"
                }
              ],
              "text": "pulsar_producer",
              "type": "Map($name->Struct(pulsar_producer))"
            },
            {
              "doc": "EMQX Enterprise Config",
              "hash": "V-bridges-S-bridges-gcp_pubsub",
              "refs": [
                {
                  "doc": "GCP PubSub 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-gcp_pubsub-S-config_producer-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "default": "15s",
                      "doc": "连接 HTTP 服务器的超时时间。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "连接池大小。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "100",
                      "doc": "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-pipelining",
                      "text": "pipelining",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "2",
                      "doc": "请求出错时的最大重试次数。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since e5.0.1.",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。\n当创建GCP服务账户时（如https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-service_account_json",
                      "text": "service_account_json",
                      "type": "Map"
                    },
                    {
                      "default": "[]",
                      "doc": "The template for formatting the outgoing message attributes.  Undefined values will be rendered as empty string values.  Empty keys are removed from the attribute map.",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-attributes_template",
                      "refs": [
                        {
                          "doc": "Key-value pair.",
                          "fields": [
                            {
                              "doc": "Key",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-attributes_template-S-key_value_pair-key",
                              "text": "key",
                              "type": "String"
                            },
                            {
                              "doc": "Value",
                              "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-attributes_template-S-key_value_pair-value",
                              "text": "value",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-gcp_pubsub-S-config_producer-attributes_template-S-key_value_pair",
                          "text": "key_value_pair"
                        }
                      ],
                      "text": "attributes_template",
                      "type": "Array(Struct(key_value_pair))"
                    },
                    {
                      "default": "\"\"",
                      "doc": "The template for formatting the outgoing message ordering key.  Undefined values will be rendered as empty string values.  This value will not be added to the message if it's empty.",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-ordering_key_template",
                      "text": "ordering_key_template",
                      "type": "String"
                    },
                    {
                      "default": "\"\"",
                      "doc": "用于格式化外发信息的模板。 如果未定义，将以JSON格式发送所有可用的上下文。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-payload_template",
                      "text": "payload_template",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 GCP PubSub。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 GCP PubSub。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "要发布消息的GCP PubSub主题。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub-S-config_producer-pubsub_topic",
                      "text": "pubsub_topic",
                      "type": "String"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-gcp_pubsub-S-config_producer",
                  "text": "config_producer"
                }
              ],
              "text": "gcp_pubsub",
              "type": "Map($name->Struct(config_producer))"
            },
            {
              "doc": "EMQX Enterprise Config",
              "hash": "V-bridges-S-bridges-gcp_pubsub_consumer",
              "refs": [
                {
                  "doc": "GCP PubSub 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "资源启动相关的选项。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "30s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-resource_opts-S-consumer_resource_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-resource_opts-S-consumer_resource_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-resource_opts-S-consumer_resource_opts",
                          "text": "consumer_resource_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(consumer_resource_opts)"
                    },
                    {
                      "default": "15s",
                      "doc": "连接 HTTP 服务器的超时时间。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "连接池大小。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "100",
                      "doc": "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-pipelining",
                      "text": "pipelining",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "2",
                      "doc": "请求出错时的最大重试次数。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since e5.0.1.",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。\n当创建GCP服务账户时（如https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-service_account_json",
                      "text": "service_account_json",
                      "type": "Map"
                    },
                    {
                      "doc": "Local MQTT publish and GCP PubSub consumer configs.",
                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer",
                      "refs": [
                        {
                          "doc": "GCP PubSub Consumer configuration.",
                          "fields": [
                            {
                              "default": "100",
                              "doc": "The maximum number of messages to retrieve from GCP PubSub in a single pull request. The actual number may be less than the specified value.",
                              "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer-S-consumer-pull_max_messages",
                              "text": "pull_max_messages",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "Defines the mapping between GCP PubSub topics and MQTT topics. Must contain at least one item.",
                              "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer-S-consumer-topic_mapping",
                              "refs": [
                                {
                                  "doc": "Defines the mapping between GCP PubSub topics and MQTT topics. Must contain at least one item.",
                                  "fields": [
                                    {
                                      "doc": "GCP PubSub topic to consume from.",
                                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer-S-consumer-topic_mapping-S-consumer_topic_mapping-pubsub_topic",
                                      "text": "pubsub_topic",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Local topic to which consumed GCP PubSub messages should be published to.",
                                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer-S-consumer-topic_mapping-S-consumer_topic_mapping-mqtt_topic",
                                      "text": "mqtt_topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "0",
                                      "doc": "MQTT QoS used to publish messages consumed from GCP PubSub.",
                                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer-S-consumer-topic_mapping-S-consumer_topic_mapping-qos",
                                      "text": "qos",
                                      "type": "Integer(0..2)"
                                    },
                                    {
                                      "default": "\"${.}\"",
                                      "doc": "The template for transforming the incoming GCP PubSub message.  By default, it will use JSON format to serialize inputs from the GCP PubSub message.  Available fields are:\n<code>message_id</code>: the message ID assigned by GCP PubSub.\n<code>publish_time</code>: message timestamp assigned by GCP PubSub.\n<code>topic</code>: GCP PubSub topic.\n<code>value</code>: the payload of the GCP PubSub message.  Omitted if there's no payload.\n<code>attributes</code>: an object containing string key-value pairs.  Omitted if there are no attributes.\n<code>ordering_key</code>: GCP PubSub message ordering key.  Omitted if there's none.",
                                      "hash": "V-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer-S-consumer-topic_mapping-S-consumer_topic_mapping-payload_template",
                                      "text": "payload_template",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer-S-consumer-topic_mapping-S-consumer_topic_mapping",
                                  "text": "consumer_topic_mapping"
                                }
                              ],
                              "text": "topic_mapping",
                              "type": "Array(Struct(consumer_topic_mapping))"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer-consumer-S-consumer",
                          "text": "consumer"
                        }
                      ],
                      "text": "consumer",
                      "type": "Struct(consumer)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-gcp_pubsub_consumer-S-config_consumer",
                  "text": "config_consumer"
                }
              ],
              "text": "gcp_pubsub_consumer",
              "type": "Map($name->Struct(config_consumer))"
            },
            {
              "doc": "MongoDB Bridge Config",
              "hash": "V-bridges-S-bridges-mongodb_rs",
              "refs": [
                {
                  "doc": "MongoDB (Replica Set) configuration",
                  "fields": [
                    {
                      "default": "rs",
                      "doc": "Replica set. Must be set to 'rs' when MongoDB server is running in 'replica set' mode.",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-mongo_type",
                      "text": "mongo_type",
                      "type": "String(\"rs\")"
                    },
                    {
                      "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "unsafe",
                      "doc": "Write mode.",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-w_mode",
                      "text": "w_mode",
                      "type": "Enum(unsafe,safe)"
                    },
                    {
                      "default": "master",
                      "doc": "Read mode.",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-r_mode",
                      "text": "r_mode",
                      "type": "Enum(master,slave_ok)"
                    },
                    {
                      "doc": "Name of the replica set.",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-replica_set_name",
                      "text": "replica_set_name",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "Use DNS SRV record.",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-srv_record",
                      "text": "srv_record",
                      "type": "Boolean"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "auto",
                      "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-use_legacy_protocol",
                      "text": "use_legacy_protocol",
                      "type": "Enum(auto,true,false)"
                    },
                    {
                      "doc": "Database name associated with the user's credentials.",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-auth_source",
                      "text": "auth_source",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology",
                      "refs": [
                        {
                          "doc": "Topology of MongoDB.",
                          "fields": [
                            {
                              "default": "0",
                              "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-max_overflow",
                              "text": "max_overflow",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-overflow_ttl",
                              "text": "overflow_ttl",
                              "type": "String"
                            },
                            {
                              "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-overflow_check_period",
                              "text": "overflow_check_period",
                              "type": "String"
                            },
                            {
                              "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-local_threshold_ms",
                              "text": "local_threshold_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt a connection before timing out.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-connect_timeout_ms",
                              "text": "connect_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-socket_timeout_ms",
                              "text": "socket_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Specifies how long to block for server selection before throwing an exception.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-server_selection_timeout_ms",
                              "text": "server_selection_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The maximum duration that a worker can wait for a connection to become available.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-wait_queue_timeout_ms",
                              "text": "wait_queue_timeout_ms",
                              "type": "String"
                            },
                            {
                              "default": "200s",
                              "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-heartbeat_frequency_ms",
                              "text": "heartbeat_frequency_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Controls the minimum amount of time to wait between heartbeats.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology-min_heartbeat_frequency_ms",
                              "text": "min_heartbeat_frequency_ms",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_rs-S-mongodb_rs-topology-S-topology",
                          "text": "topology"
                        }
                      ],
                      "text": "topology",
                      "type": "Struct(topology)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_rs-S-mongodb_rs-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "default": "true",
                      "doc": "Enable or disable this MongoDB Bridge",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "mqtt",
                      "doc": "The collection where data will be stored into",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-collection",
                      "text": "collection",
                      "type": "String"
                    },
                    {
                      "doc": "The template for formatting the outgoing messages.  If undefined, rule engine will use JSON format to serialize all visible inputs, such as clientid, topic, payload etc.",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-payload_template",
                      "text": "payload_template",
                      "type": "String"
                    },
                    {
                      "doc": "资源启动相关的选项。",
                      "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_rs-S-mongodb_rs-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-mongodb_rs-S-mongodb_rs",
                  "text": "mongodb_rs"
                }
              ],
              "text": "mongodb_rs",
              "type": "Map($name->Struct(mongodb_rs))"
            },
            {
              "doc": "MongoDB Bridge Config",
              "hash": "V-bridges-S-bridges-mongodb_sharded",
              "refs": [
                {
                  "doc": "MongoDB (Sharded) configuration",
                  "fields": [
                    {
                      "default": "sharded",
                      "doc": "Sharded cluster. Must be set to 'sharded' when MongoDB server is running in 'sharded' mode.",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-mongo_type",
                      "text": "mongo_type",
                      "type": "String(\"sharded\")"
                    },
                    {
                      "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "unsafe",
                      "doc": "Write mode.",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-w_mode",
                      "text": "w_mode",
                      "type": "Enum(unsafe,safe)"
                    },
                    {
                      "default": "false",
                      "doc": "Use DNS SRV record.",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-srv_record",
                      "text": "srv_record",
                      "type": "Boolean"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "auto",
                      "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-use_legacy_protocol",
                      "text": "use_legacy_protocol",
                      "type": "Enum(auto,true,false)"
                    },
                    {
                      "doc": "Database name associated with the user's credentials.",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-auth_source",
                      "text": "auth_source",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology",
                      "refs": [
                        {
                          "doc": "Topology of MongoDB.",
                          "fields": [
                            {
                              "default": "0",
                              "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-max_overflow",
                              "text": "max_overflow",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-overflow_ttl",
                              "text": "overflow_ttl",
                              "type": "String"
                            },
                            {
                              "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-overflow_check_period",
                              "text": "overflow_check_period",
                              "type": "String"
                            },
                            {
                              "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-local_threshold_ms",
                              "text": "local_threshold_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt a connection before timing out.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-connect_timeout_ms",
                              "text": "connect_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-socket_timeout_ms",
                              "text": "socket_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Specifies how long to block for server selection before throwing an exception.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-server_selection_timeout_ms",
                              "text": "server_selection_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The maximum duration that a worker can wait for a connection to become available.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-wait_queue_timeout_ms",
                              "text": "wait_queue_timeout_ms",
                              "type": "String"
                            },
                            {
                              "default": "200s",
                              "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-heartbeat_frequency_ms",
                              "text": "heartbeat_frequency_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Controls the minimum amount of time to wait between heartbeats.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                              "text": "min_heartbeat_frequency_ms",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-topology-S-topology",
                          "text": "topology"
                        }
                      ],
                      "text": "topology",
                      "type": "Struct(topology)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "default": "true",
                      "doc": "Enable or disable this MongoDB Bridge",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "mqtt",
                      "doc": "The collection where data will be stored into",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-collection",
                      "text": "collection",
                      "type": "String"
                    },
                    {
                      "doc": "The template for formatting the outgoing messages.  If undefined, rule engine will use JSON format to serialize all visible inputs, such as clientid, topic, payload etc.",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-payload_template",
                      "text": "payload_template",
                      "type": "String"
                    },
                    {
                      "doc": "资源启动相关的选项。",
                      "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-mongodb_sharded-S-mongodb_sharded",
                  "text": "mongodb_sharded"
                }
              ],
              "text": "mongodb_sharded",
              "type": "Map($name->Struct(mongodb_sharded))"
            },
            {
              "doc": "MongoDB Bridge Config",
              "hash": "V-bridges-S-bridges-mongodb_single",
              "refs": [
                {
                  "doc": "MongoDB (Standalone) configuration",
                  "fields": [
                    {
                      "default": "single",
                      "doc": "Standalone instance. Must be set to 'single' when MongoDB server is running in standalone mode.",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-mongo_type",
                      "text": "mongo_type",
                      "type": "String(\"single\")"
                    },
                    {
                      "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "unsafe",
                      "doc": "Write mode.",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-w_mode",
                      "text": "w_mode",
                      "type": "Enum(unsafe,safe)"
                    },
                    {
                      "default": "false",
                      "doc": "Use DNS SRV record.",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-srv_record",
                      "text": "srv_record",
                      "type": "Boolean"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "auto",
                      "doc": "是否使用 MongoDB 的传统协议与数据库通信。默认情况下，将尝试自动确定是否支持较新的协议。",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-use_legacy_protocol",
                      "text": "use_legacy_protocol",
                      "type": "Enum(auto,true,false)"
                    },
                    {
                      "doc": "Database name associated with the user's credentials.",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-auth_source",
                      "text": "auth_source",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology",
                      "refs": [
                        {
                          "doc": "Topology of MongoDB.",
                          "fields": [
                            {
                              "default": "0",
                              "doc": "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-max_overflow",
                              "text": "max_overflow",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-overflow_ttl",
                              "text": "overflow_ttl",
                              "type": "String"
                            },
                            {
                              "doc": "Period for checking if there are more workers than configured (\"overflow\").",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-overflow_check_period",
                              "text": "overflow_check_period",
                              "type": "String"
                            },
                            {
                              "doc": "The size of the latency window for selecting among multiple suitable MongoDB instances.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-local_threshold_ms",
                              "text": "local_threshold_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt a connection before timing out.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-connect_timeout_ms",
                              "text": "connect_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The duration to attempt to send or to receive on a socket before the attempt times out.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-socket_timeout_ms",
                              "text": "socket_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Specifies how long to block for server selection before throwing an exception.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-server_selection_timeout_ms",
                              "text": "server_selection_timeout_ms",
                              "type": "String"
                            },
                            {
                              "doc": "The maximum duration that a worker can wait for a connection to become available.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-wait_queue_timeout_ms",
                              "text": "wait_queue_timeout_ms",
                              "type": "String"
                            },
                            {
                              "default": "200s",
                              "doc": "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-heartbeat_frequency_ms",
                              "text": "heartbeat_frequency_ms",
                              "type": "String"
                            },
                            {
                              "doc": "Controls the minimum amount of time to wait between heartbeats.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology-min_heartbeat_frequency_ms",
                              "text": "min_heartbeat_frequency_ms",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_single-S-mongodb_single-topology-S-topology",
                          "text": "topology"
                        }
                      ],
                      "text": "topology",
                      "type": "Struct(topology)"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_single-S-mongodb_single-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "default": "true",
                      "doc": "Enable or disable this MongoDB Bridge",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "mqtt",
                      "doc": "The collection where data will be stored into",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-collection",
                      "text": "collection",
                      "type": "String"
                    },
                    {
                      "doc": "The template for formatting the outgoing messages.  If undefined, rule engine will use JSON format to serialize all visible inputs, such as clientid, topic, payload etc.",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-payload_template",
                      "text": "payload_template",
                      "type": "String"
                    },
                    {
                      "doc": "资源启动相关的选项。",
                      "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-mongodb_single-S-mongodb_single-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-mongodb_single-S-mongodb_single",
                  "text": "mongodb_single"
                }
              ],
              "text": "mongodb_single",
              "type": "Map($name->Struct(mongodb_single))"
            },
            {
              "doc": "InfluxDB Bridge Config",
              "hash": "V-bridges-S-bridges-influxdb_api_v1",
              "refs": [
                {
                  "doc": "InfluxDB HTTP API 协议。支持 Influxdb v1.8 以及之前的版本。",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br>\n参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及\n[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br>\nTLDR: </br>\n\n```\n<measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]\n```\n注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-write_syntax",
                      "text": "write_syntax",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "default": "\"127.0.0.1:8086\"",
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br>\n主机名具有以下形式：`Host[:Port]`。</br>\n如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "ms",
                      "doc": "InfluxDB 时间精度。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-precision",
                      "text": "precision",
                      "type": "Enum(ns,us,ms,s)"
                    },
                    {
                      "doc": "InfluxDB 数据库。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "doc": "InfluxDB 用户名。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "InfluxDB 密码。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-influxdb_api_v1-S-influxdb_api_v1",
                  "text": "influxdb_api_v1"
                }
              ],
              "text": "influxdb_api_v1",
              "type": "Map($name->Struct(influxdb_api_v1))"
            },
            {
              "doc": "InfluxDB Bridge Config",
              "hash": "V-bridges-S-bridges-influxdb_api_v2",
              "refs": [
                {
                  "doc": "InfluxDB HTTP API V2 协议。支持 Influxdb v2.0 以及之后的版本。",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br>\n参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及\n[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br>\nTLDR: </br>\n\n```\n<measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]\n```\n注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-write_syntax",
                      "text": "write_syntax",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "default": "\"127.0.0.1:8086\"",
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br>\n主机名具有以下形式：`Host[:Port]`。</br>\n如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "ms",
                      "doc": "InfluxDB 时间精度。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-precision",
                      "text": "precision",
                      "type": "Enum(ns,us,ms,s)"
                    },
                    {
                      "doc": "InfluxDB bucket 名称。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-bucket",
                      "text": "bucket",
                      "type": "String"
                    },
                    {
                      "doc": "InfluxDB 组织名称。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-org",
                      "text": "org",
                      "type": "String"
                    },
                    {
                      "doc": "InfluxDB token。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-token",
                      "text": "token",
                      "type": "String"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-influxdb_api_v2-S-influxdb_api_v2",
                  "text": "influxdb_api_v2"
                }
              ],
              "text": "influxdb_api_v2",
              "type": "Map($name->Struct(influxdb_api_v2))"
            },
            {
              "doc": "Redis Bridge Config",
              "hash": "V-bridges-S-bridges-redis_single",
              "refs": [
                {
                  "doc": "Single mode. Must be set to 'single' when Redis server is running in single mode.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "The MQTT topic filter to be forwarded to Redis. All MQTT 'PUBLISH' messages with the topic\nmatching the local_topic will be forwarded.</br>\nNOTE: if this bridge is used as the action of a rule (EMQX rule engine), and also local_topic is\nconfigured, then both the data got from the rule and the MQTT messages that match local_topic\nwill be forwarded.",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "Redis command template used to export messages. Each list element stands for a command name or its argument.\nFor example, to push payloads in a Redis list by key `msgs`, the elements should be the following:\n`rpush`, `msgs`, `${payload}`.",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-command_template",
                      "text": "command_template",
                      "type": "Array(String)"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-redis_single-S-redis_single-resource_opts-S-creation_opts_redis_single",
                          "text": "creation_opts_redis_single"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts_redis_single)"
                    },
                    {
                      "doc": "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "single",
                      "doc": "Single mode. Must be set to 'single' when Redis server is running in single mode.",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-redis_type",
                      "text": "redis_type",
                      "type": "String(\"single\")"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "0",
                      "doc": "Redis database ID.",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-database",
                      "text": "database",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-redis_single-S-redis_single-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-redis_single-S-redis_single",
                  "text": "redis_single"
                }
              ],
              "text": "redis_single",
              "type": "Map($name->Struct(redis_single))"
            },
            {
              "doc": "Redis Bridge Config",
              "hash": "V-bridges-S-bridges-redis_sentinel",
              "refs": [
                {
                  "doc": "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "The MQTT topic filter to be forwarded to Redis. All MQTT 'PUBLISH' messages with the topic\nmatching the local_topic will be forwarded.</br>\nNOTE: if this bridge is used as the action of a rule (EMQX rule engine), and also local_topic is\nconfigured, then both the data got from the rule and the MQTT messages that match local_topic\nwill be forwarded.",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "Redis command template used to export messages. Each list element stands for a command name or its argument.\nFor example, to push payloads in a Redis list by key `msgs`, the elements should be the following:\n`rpush`, `msgs`, `${payload}`.",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-command_template",
                      "text": "command_template",
                      "type": "Array(String)"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-redis_sentinel-S-redis_sentinel-resource_opts-S-creation_opts_redis_sentinel",
                          "text": "creation_opts_redis_sentinel"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts_redis_sentinel)"
                    },
                    {
                      "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "sentinel",
                      "doc": "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-redis_type",
                      "text": "redis_type",
                      "type": "String(\"sentinel\")"
                    },
                    {
                      "doc": "The cluster name in Redis sentinel mode.",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-sentinel",
                      "text": "sentinel",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "0",
                      "doc": "Redis database ID.",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-database",
                      "text": "database",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-redis_sentinel-S-redis_sentinel-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-redis_sentinel-S-redis_sentinel",
                  "text": "redis_sentinel"
                }
              ],
              "text": "redis_sentinel",
              "type": "Map($name->Struct(redis_sentinel))"
            },
            {
              "doc": "Redis Bridge Config",
              "hash": "V-bridges-S-bridges-redis_cluster",
              "refs": [
                {
                  "doc": "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "The MQTT topic filter to be forwarded to Redis. All MQTT 'PUBLISH' messages with the topic\nmatching the local_topic will be forwarded.</br>\nNOTE: if this bridge is used as the action of a rule (EMQX rule engine), and also local_topic is\nconfigured, then both the data got from the rule and the MQTT messages that match local_topic\nwill be forwarded.",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "Redis command template used to export messages. Each list element stands for a command name or its argument.\nFor example, to push payloads in a Redis list by key `msgs`, the elements should be the following:\n`rpush`, `msgs`, `${payload}`.",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-command_template",
                      "text": "command_template",
                      "type": "Array(String)"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-redis_cluster-S-redis_cluster-resource_opts-S-creation_opts_redis_cluster",
                          "text": "creation_opts_redis_cluster"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts_redis_cluster)"
                    },
                    {
                      "doc": "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-servers",
                      "text": "servers",
                      "type": "String"
                    },
                    {
                      "default": "cluster",
                      "doc": "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-redis_type",
                      "text": "redis_type",
                      "type": "String(\"cluster\")"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-redis_cluster-S-redis_cluster-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-redis_cluster-S-redis_cluster",
                  "text": "redis_cluster"
                }
              ],
              "text": "redis_cluster",
              "type": "Map($name->Struct(redis_cluster))"
            },
            {
              "doc": "PostgreSQL Bridge Config",
              "hash": "V-bridges-S-bridges-pgsql",
              "refs": [
                {
                  "doc": "PostgreSQL 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\"",
                      "doc": "SQL 模板",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-sql",
                      "text": "sql",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-pgsql-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-pgsql-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-pgsql-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-pgsql-S-config",
                  "text": "config"
                }
              ],
              "text": "pgsql",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Timescale Bridge Config",
              "hash": "V-bridges-S-bridges-timescale",
              "refs": [
                {
                  "doc": "PostgreSQL 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-timescale-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\"",
                      "doc": "SQL 模板",
                      "hash": "V-bridges-S-bridges-timescale-S-config-sql",
                      "text": "sql",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-timescale-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-timescale-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。",
                      "hash": "V-bridges-S-bridges-timescale-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-timescale-S-config-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-timescale-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-timescale-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-timescale-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-timescale-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-timescale-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-timescale-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-timescale-S-config",
                  "text": "config"
                }
              ],
              "text": "timescale",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Matrix Bridge Config",
              "hash": "V-bridges-S-bridges-matrix",
              "refs": [
                {
                  "doc": "PostgreSQL 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-matrix-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\"",
                      "doc": "SQL 模板",
                      "hash": "V-bridges-S-bridges-matrix-S-config-sql",
                      "text": "sql",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-matrix-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-matrix-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。",
                      "hash": "V-bridges-S-bridges-matrix-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-matrix-S-config-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-matrix-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-matrix-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-matrix-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-matrix-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-matrix-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-matrix-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-matrix-S-config",
                  "text": "config"
                }
              ],
              "text": "matrix",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Clickhouse Bridge Config",
              "hash": "V-bridges-S-bridges-clickhouse",
              "refs": [
                {
                  "doc": "Clickhouse 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"INSERT INTO mqtt_test(payload, arrived) VALUES ('${payload}', ${timestamp})\"",
                      "doc": "可以使用 ${field} 占位符来引用消息与客户端上下文中的变量，请确保对应字段存在且数据格式符合预期。此处不支持 [SQL 预处理](https://docs.emqx.com/zh/enterprise/v5.0/data-integration/data-bridges.html#sql-预处理)。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-sql",
                      "text": "sql",
                      "type": "String"
                    },
                    {
                      "default": "\", \"",
                      "doc": "默认为逗号 ','，适用于 VALUE 格式。您也可以使用其他分隔符， 请参考 [INSERT INTO 语句](https://clickhouse.com/docs/en/sql-reference/statements/insert-into)。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-batch_value_separator",
                      "text": "batch_value_separator",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 Clickhouse。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-clickhouse-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "你想连接到的Clickhouse服务器的HTTP URL（例如http://myhostname:8123）。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-url",
                      "text": "url",
                      "type": "String"
                    },
                    {
                      "default": "15s",
                      "doc": "连接HTTP服务器的超时时间。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-clickhouse-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-clickhouse-S-config",
                  "text": "config"
                }
              ],
              "text": "clickhouse",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Microsoft SQL Server Bridge Config",
              "hash": "V-bridges-S-bridges-sqlserver",
              "refs": [
                {
                  "doc": "Microsoft SQL Server 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用桥接",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"insert into t_mqtt_msg(msgid, topic, qos, payload) values ( ${id}, ${topic}, ${qos}, ${payload} )\"",
                      "doc": "SQL 模板",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-sql",
                      "text": "sql",
                      "type": "String"
                    },
                    {
                      "default": "ms-sql",
                      "doc": "SQL Server Driver 名称",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-driver",
                      "text": "driver",
                      "type": "String"
                    },
                    {
                      "doc": "发送到 'local_topic' 的消息都会转发到 Microsoft SQL Server。 </br>\n注意：如果这个数据桥接被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-sqlserver-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/>\n主机名具有以下形式：`Host[:Port]`。<br/>\n如果未指定 `[:Port]`，则使用 SQL Server 默认端口 1433。",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "doc": "数据库名字。",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-database",
                      "text": "database",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "桥接远端服务时使用的连接池大小。",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "sa",
                      "doc": "内部数据库的用户名。",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "doc": "Deprecated since v5.0.15.",
                      "hash": "V-bridges-S-bridges-sqlserver-S-config-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-sqlserver-S-config",
                  "text": "config"
                }
              ],
              "text": "sqlserver",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "RabbitMQ Bridge Config",
              "hash": "V-bridges-S-bridges-rabbitmq",
              "refs": [
                {
                  "doc": "RabbitMQ 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用或禁用桥接",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "转发到 RabbitMQ 的消息 MQTT 主题或主题过滤器。对所有的 'PUBLISH' 消息，如果匹配到该配置的主题或主题过滤器时，\n注意：如果此桥接被用作规则的动作，同时又配置了 'local_topic'，那么这两份消息都会被转发到 RabbitMQ，这可能会导致消息重复。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-rabbitmq-S-config-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "default": "localhost",
                      "doc": "RabbitMQ 服务器的主机名或 IP 地址（例如 localhost）。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "5672",
                      "doc": "RabbitMQ 服务器的主机名或 IP 地址（例如 localhost）。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-port",
                      "text": "port",
                      "type": "Integer(1..65535)"
                    },
                    {
                      "doc": "用于认证的 RabbitMQ 用户名。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "内部数据库密码。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "8",
                      "doc": "连接池的大小。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "5s",
                      "doc": "连接超时时间。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-timeout",
                      "text": "timeout",
                      "type": "String"
                    },
                    {
                      "default": "true",
                      "doc": "是否等待 RabbitMQ 确认消息发布。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-wait_for_publish_confirmations",
                      "text": "wait_for_publish_confirmations",
                      "type": "Boolean"
                    },
                    {
                      "default": "30s",
                      "doc": "连接超时时间。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-publish_confirmation_timeout",
                      "text": "publish_confirmation_timeout",
                      "type": "String"
                    },
                    {
                      "default": "\"/\"",
                      "doc": "RabbitMQ 虚拟主机的名称。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-virtual_host",
                      "text": "virtual_host",
                      "type": "String"
                    },
                    {
                      "default": "30s",
                      "doc": "发送心跳的间隔时间。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-heartbeat",
                      "text": "heartbeat",
                      "type": "String"
                    },
                    {
                      "doc": " RabbitMQ Exchange 名称。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-exchange",
                      "text": "exchange",
                      "type": "String"
                    },
                    {
                      "doc": "用于路由消息的 Routing Key。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-routing_key",
                      "text": "routing_key",
                      "type": "String"
                    },
                    {
                      "default": "non_persistent",
                      "doc": "消息的投递模式。non_persistent(1) 表示非持久化消息，persistent(2) 表示持久化消息。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-delivery_mode",
                      "text": "delivery_mode",
                      "type": "Enum(non_persistent,persistent)"
                    },
                    {
                      "default": "\"${.}\"",
                      "doc": "用于生成 RabbitMQ 消息的模版。模板中的占位符（例如 '${fields.sub_field}'）会被替换成消息的字段值。如果该留空，则表示所有的输入字段都会被转发到 RabbitMQ，与使用 '${.}' 作为占位符的效果等价。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-payload_template",
                      "text": "payload_template",
                      "type": "String"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-rabbitmq-S-config-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-rabbitmq-S-config",
                  "text": "config"
                }
              ],
              "text": "rabbitmq",
              "type": "Map($name->Struct(config))"
            },
            {
              "doc": "Amazon Kinesis Producer Bridge Config",
              "hash": "V-bridges-S-bridges-kinesis_producer",
              "refs": [
                {
                  "doc": "Configuration for an Amazon Kinesis bridge.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "{}",
                      "doc": "资源启动相关的选项。",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-kinesis_producer-S-config_producer-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "doc": "Access Key ID for connecting to Amazon Kinesis.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-aws_access_key_id",
                      "text": "aws_access_key_id",
                      "type": "String"
                    },
                    {
                      "doc": "AWS Secret Access Key for connecting to Amazon Kinesis.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-aws_secret_access_key",
                      "text": "aws_secret_access_key",
                      "type": "String"
                    },
                    {
                      "doc": "The url of Amazon Kinesis endpoint.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-endpoint",
                      "text": "endpoint",
                      "type": "String"
                    },
                    {
                      "default": "2",
                      "doc": "Max retry times if an error occurs when sending a request.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-max_retries",
                      "text": "max_retries",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "default": "8",
                      "doc": "The pool size.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    },
                    {
                      "default": "\"${.}\"",
                      "doc": "The template for formatting the outgoing messages.  If undefined, will send all the available context in JSON format.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-payload_template",
                      "text": "payload_template",
                      "type": "String"
                    },
                    {
                      "doc": "The MQTT topic filter to be forwarded to Amazon Kinesis. All MQTT `PUBLISH` messages with the topic\nmatching the `local_topic` will be forwarded.</br>\nNOTE: if this bridge is used as the action of a rule (EMQX rule engine), and also `local_topic` is\nconfigured, then both the data got from the rule and the MQTT messages that match `local_topic`\nwill be forwarded.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "The Amazon Kinesis Stream to publish messages to.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-stream_name",
                      "text": "stream_name",
                      "type": "String"
                    },
                    {
                      "doc": "The Amazon Kinesis Partition Key associated to published message. Placeholders in format of ${var} are supported.",
                      "hash": "V-bridges-S-bridges-kinesis_producer-S-config_producer-partition_key",
                      "text": "partition_key",
                      "type": "String"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-kinesis_producer-S-config_producer",
                  "text": "config_producer"
                }
              ],
              "text": "kinesis_producer",
              "type": "Map($name->Struct(config_producer))"
            },
            {
              "doc": "GreptimeDB Bridge Config",
              "hash": "V-bridges-S-bridges-greptimedb",
              "refs": [
                {
                  "doc": "GreptimeDB's protocol. Support GreptimeDB v1.8 and before.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用/禁用数据桥接",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "The MQTT topic filter to be forwarded to the GreptimeDB. All MQTT 'PUBLISH' messages with the topic\nmatching the local_topic will be forwarded.</br>\nNOTE: if this bridge is used as the action of a rule (EMQX rule engine), and also local_topic is\nconfigured, then both the data got from the rule and the MQTT messages that match local_topic\nwill be forwarded.",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "doc": "Conf of GreptimeDB gRPC protocol to write data points. Write syntax is a text-based format that provides the measurement, tag set, field set, and timestamp of a data point, and placeholder supported, which is the same as InfluxDB line protocol.\nSee also [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) and\n[GreptimeDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br>\nTLDR:</br>\n```\n<measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]\n```\nPlease note that a placeholder for an integer value must be annotated with a suffix `i`. For example `${payload.int_value}i`.",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-write_syntax",
                      "text": "write_syntax",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "资源相关的选项。",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts",
                      "refs": [
                        {
                          "doc": "资源启动相关的选项。",
                          "fields": [
                            {
                              "default": "16",
                              "doc": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-worker_pool_size",
                              "text": "worker_pool_size",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "是否在创建资源后立即启动资源。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-start_after_created",
                              "text": "start_after_created",
                              "type": "Boolean"
                            },
                            {
                              "default": "5s",
                              "doc": "在回复资源创建请求前等待资源进入健康状态的时间。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-start_timeout",
                              "text": "start_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.0.",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-auto_restart_interval",
                              "text": "auto_restart_interval",
                              "type": "OneOf(String(\"infinity\"),String)"
                            },
                            {
                              "default": "async",
                              "doc": "请求模式。可选 '同步/异步'，默认为'异步'模式。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(sync,async)"
                            },
                            {
                              "aliases": [
                                "request_timeout"
                              ],
                              "default": "45s",
                              "doc": "从请求进入缓冲区的时刻开始，如果请求在指定的时间内仍然停留在缓冲区中，或者已经发送但没有及时收到响应或确认，该请求将被视为过期。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-request_ttl",
                              "text": "request_ttl",
                              "type": "OneOf(String,String(\"infinity\"))"
                            },
                            {
                              "aliases": [
                                "async_inflight_window"
                              ],
                              "default": "100",
                              "doc": "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-inflight_window",
                              "text": "inflight_window",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "1",
                              "doc": "最大批量请求大小。如果设为1，则无批处理。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-batch_size",
                              "text": "batch_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "default": "0ms",
                              "doc": "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-batch_time",
                              "text": "batch_time",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since v5.0.14.",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-enable_queue",
                              "text": "enable_queue",
                              "type": "Boolean"
                            },
                            {
                              "aliases": [
                                "max_queue_bytes"
                              ],
                              "default": "256MB",
                              "doc": "每个缓存 worker 允许使用的最大字节数。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts-max_buffer_bytes",
                              "text": "max_buffer_bytes",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-greptimedb-S-greptimedb-resource_opts-S-creation_opts",
                          "text": "creation_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(creation_opts)"
                    },
                    {
                      "default": "\"127.0.0.1:4001\"",
                      "doc": "The IPv4 or IPv6 address or the hostname to connect to.</br>\nA host entry has the following form: `Host[:Port]`.</br>\nThe GreptimeDB default port 8086 is used if `[:Port]` is not specified.",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-server",
                      "text": "server",
                      "type": "String"
                    },
                    {
                      "default": "ms",
                      "doc": "GreptimeDB time precision.",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-precision",
                      "text": "precision",
                      "type": "Enum(ns,us,ms,s)"
                    },
                    {
                      "doc": "GreptimeDB database.",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-dbname",
                      "text": "dbname",
                      "type": "String"
                    },
                    {
                      "doc": "GreptimeDB username.",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-username",
                      "text": "username",
                      "type": "String"
                    },
                    {
                      "doc": "GreptimeDB password.",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-password",
                      "text": "password",
                      "type": "String"
                    },
                    {
                      "default": "{enable = false}",
                      "doc": "启用 SSL 连接。",
                      "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl",
                      "refs": [
                        {
                          "doc": "Socket options for SSL clients.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-greptimedb-S-greptimedb-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-greptimedb-S-greptimedb",
                  "text": "greptimedb"
                }
              ],
              "text": "greptimedb",
              "type": "Map($name->Struct(greptimedb))"
            },
            {
              "doc": "EMQX Enterprise Config",
              "hash": "V-bridges-S-bridges-azure_event_hub_producer",
              "refs": [
                {
                  "doc": "Configuration for an Azure Event Hub bridge.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "Enable (true) or disable (false) this bridge.",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"\"",
                      "doc": "Descriptive text.",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-description",
                      "text": "description",
                      "type": "String"
                    },
                    {
                      "doc": "A comma separated list of Azure Event Hub Kafka <code>host[:port]</code> namespace endpoints to bootstrap the client.  Default port number is 9093.",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-bootstrap_hosts",
                      "text": "bootstrap_hosts",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "TCP 连接建立的最大等待时间（包括如果已启用身份认证则包括身份认证时间）",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "default": "3s",
                      "doc": "客户端在刷新 Azure Event Hub Kafka 代理和主题元数据之前必须等待的最小时间间隔。设置太小的值可能会给 Azure Event Hub 增加额外的负载。",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-min_metadata_refresh_interval",
                      "text": "min_metadata_refresh_interval",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "Maximum wait time when fetching metadata from Azure Event Hub.",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-metadata_request_timeout",
                      "text": "metadata_request_timeout",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "Authentication configs.",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-authentication",
                      "refs": [
                        {
                          "doc": "基于用户名/密码进行认证",
                          "fields": [
                            {
                              "doc": "用于连接 Azure Event Hub 的连接字符串。应为命名空间共享访问策略的 \"连接字符串-主键\"。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-authentication-S-auth_username_password-password",
                              "text": "password",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer-authentication-S-auth_username_password",
                          "text": "auth_username_password"
                        }
                      ],
                      "text": "authentication",
                      "type": "Struct(auth_username_password)"
                    },
                    {
                      "doc": "Extra socket options.",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-socket_opts",
                      "refs": [
                        {
                          "doc": "更多 Socket 参数设置。",
                          "fields": [
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-socket_opts-S-socket_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-socket_opts-S-socket_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-socket_opts-S-socket_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "Enable TCP keepalive for Kafka bridge connections.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: TCP keepalive probes are sent after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-socket_opts-S-socket_opts-tcp_keepalive",
                              "text": "tcp_keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer-socket_opts-S-socket_opts",
                          "text": "socket_opts"
                        }
                      ],
                      "text": "socket_opts",
                      "type": "Struct(socket_opts)"
                    },
                    {
                      "default": "{enable = true}",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl",
                      "refs": [
                        {
                          "doc": "TLS/SSL options for Azure Event Hub client.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "String(\"true\")"
                            },
                            {
                              "default": "auto",
                              "doc": "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: The client will use <code>\"servicebus.windows.net\"</code> as SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values it will be sent as-is.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"auto\"),String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    },
                    {
                      "doc": "MQTT topic or topic filter as data source (bridge input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in Azure Event Hub.",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "aliases": [
                        "kafka"
                      ],
                      "doc": "Azure Event Hub 生产者配置",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters",
                      "refs": [
                        {
                          "doc": "Azure Event Hub 生产者配置",
                          "fields": [
                            {
                              "doc": "----",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-topic",
                              "text": "topic",
                              "type": "String"
                            },
                            {
                              "doc": "Template to render an Azure Event Hub message.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-message",
                              "refs": [
                                {
                                  "doc": "Template to render an Azure Event Hub message.",
                                  "fields": [
                                    {
                                      "default": "\"${.clientid}\"",
                                      "doc": "Template to render Azure Event Hub message key. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then Azure Event Hub's <code>NULL</code> (but not empty string) is used.",
                                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "text": "key",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${.}\"",
                                      "doc": "Template to render Azure Event Hub message value. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then Azure Event Hub's <code>NULL</code> (but not empty string) is used.",
                                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "text": "value",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "text": "kafka_message"
                                }
                              ],
                              "text": "message",
                              "type": "Struct(kafka_message)"
                            },
                            {
                              "default": "896KB",
                              "doc": "Maximum bytes to collect in an Azure Event Hub message batch. Most of the Kafka brokers default to a limit of 1 MB batch size. EMQX's default value is less than 1 MB in order to compensate Kafka message encoding overheads (especially when each individual message is very small). When a single message is over the limit, it is still sent (as a single element batch).",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "text": "max_batch_bytes",
                              "type": "String"
                            },
                            {
                              "default": "random",
                              "doc": "Partition strategy is to tell the producer how to dispatch messages to Azure Event Hub partitions.\n\n<code>random</code>: Randomly pick a partition for each message\n<code>key_dispatch</code>: Hash Azure Event Hub message key to a partition number",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-partition_strategy",
                              "text": "partition_strategy",
                              "type": "Enum(random,key_dispatch)"
                            },
                            {
                              "default": "all_isr",
                              "doc": "Required acknowledgements for Azure Event Hub partition leader to wait for its followers before it sends back the acknowledgement to EMQX Azure Event Hub producer\n\n<code>all_isr</code>: Require all in-sync replicas to acknowledge.\n<code>leader_only</code>: Require only the partition-leader's acknowledgement.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-required_acks",
                              "text": "required_acks",
                              "type": "Enum(all_isr,leader_only)"
                            },
                            {
                              "doc": "Please provide a placeholder to be used as Azure Event Hub Headers<br/>\ne.g. <code>${pub_props}</code><br/>\nNotice that the value of the placeholder must either be an object:\n<code>{\"foo\": \"bar\"}</code>\nor an array of key-value pairs:\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code>",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-kafka_headers",
                              "text": "kafka_headers",
                              "type": "String"
                            },
                            {
                              "doc": "请提供更多的 Azure Event Hub 标头键值对<br/>这里的键值对将与<code>kafka_headers</code>字段的值合并，然后发送到 Azure Event Hub。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "refs": [
                                {
                                  "doc": "Please provide more key-value pairs for Kafka headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending to Kafka.",
                                  "fields": [
                                    {
                                      "doc": "Key of the Kafka header. Placeholders in format of ${var} are supported.",
                                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "text": "kafka_ext_header_key",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Value of the Kafka header. Placeholders in format of ${var} are supported.",
                                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "text": "kafka_ext_header_value",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "text": "producer_kafka_ext_headers"
                                }
                              ],
                              "text": "kafka_ext_headers",
                              "type": "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "default": "none",
                              "doc": "Azure Event Hub headers value encode mode<br/>\n - NONE: only add binary values to Azure Event Hub headers;<br/>\n - JSON: only add JSON values to Azure Event Hub headers,\nand encode it to JSON strings before sending.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "text": "kafka_header_value_encode_mode",
                              "type": "Enum(none,json)"
                            },
                            {
                              "default": "60s",
                              "doc": "The time interval for Azure Event Hub producer to discover increased number of partitions.\nAfter the number of partitions is increased in Azure Event Hub, EMQX will start taking the\ndiscovered partitions into account when dispatching messages per <code>partition_strategy</code>.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "text": "partition_count_refresh_interval",
                              "type": "String"
                            },
                            {
                              "default": "10",
                              "doc": "Maximum number of batches allowed for Azure Event Hub producer (per-partition) to send before receiving acknowledgement from Azure Event Hub. Greater value typically means better throughput. However, there can be a risk of message reordering when this value is greater than 1.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-max_inflight",
                              "text": "max_inflight",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "配置生产者消息缓冲区。\n\n告诉 Azure Event Hub 生产者，在 EMQX 需要发送的消息多于 Azure Event Hub 能够处理的消息时，或者 Azure Event Hub 宕机时，如何缓冲消息。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-buffer",
                              "refs": [
                                {
                                  "doc": "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                                  "fields": [
                                    {
                                      "default": "memory",
                                      "doc": "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "text": "mode",
                                      "type": "Enum(memory,disk,hybrid)"
                                    },
                                    {
                                      "default": "2GB",
                                      "doc": "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。",
                                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "text": "per_partition_limit",
                                      "type": "String"
                                    },
                                    {
                                      "default": "100MB",
                                      "doc": "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。",
                                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "text": "segment_bytes",
                                      "type": "String"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "text": "memory_overload_protection",
                                      "type": "Boolean"
                                    }
                                  ],
                                  "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "text": "producer_buffer"
                                }
                              ],
                              "text": "buffer",
                              "type": "Struct(producer_buffer)"
                            },
                            {
                              "default": "async",
                              "doc": "Query mode. Optional 'sync/async', default 'async'.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(async,sync)"
                            },
                            {
                              "default": "5s",
                              "doc": "This parameter defines the timeout limit for synchronous queries. It applies only when the bridge query mode is configured to 'sync'.",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "text": "sync_query_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer-parameters-S-producer_kafka_opts",
                          "text": "producer_kafka_opts"
                        }
                      ],
                      "text": "parameters",
                      "type": "Struct(producer_kafka_opts)"
                    },
                    {
                      "default": "{}",
                      "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-resource_opts",
                      "refs": [
                        {
                          "doc": "资源相关的选项。",
                          "fields": [
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-bridges-S-bridges-azure_event_hub_producer-S-config_producer-resource_opts-S-resource_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            }
                          ],
                          "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer-resource_opts-S-resource_opts",
                          "text": "resource_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(resource_opts)"
                    }
                  ],
                  "hash": "T-bridges-S-bridges-azure_event_hub_producer-S-config_producer",
                  "text": "config_producer"
                }
              ],
              "text": "azure_event_hub_producer",
              "type": "Map($name->Struct(config_producer))"
            }
          ],
          "hash": "T-bridges-S-bridges",
          "text": "bridges"
        }
      ],
      "text": "bridges",
      "type": "Struct(bridges)"
    },
    {
      "hash": "V-connectors",
      "refs": [
        {
          "doc": "Connectors that are used to connect to external systems",
          "fields": [
            {
              "doc": "Kafka Connector Config",
              "hash": "V-connectors-S-connectors-kafka_producer",
              "refs": [
                {
                  "doc": "Kafka 桥接配置",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用（true）或停用该（false）Kafka 数据桥接。",
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"\"",
                      "doc": "Descriptive text.",
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-description",
                      "text": "description",
                      "type": "String"
                    },
                    {
                      "doc": "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。",
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-bootstrap_hosts",
                      "text": "bootstrap_hosts",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "default": "3s",
                      "doc": "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-min_metadata_refresh_interval",
                      "text": "min_metadata_refresh_interval",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "刷新元数据时最大等待时长。",
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-metadata_request_timeout",
                      "text": "metadata_request_timeout",
                      "type": "String"
                    },
                    {
                      "default": "none",
                      "doc": "认证参数。",
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication",
                      "refs": [
                        {
                          "doc": "基于用户名密码的认证。",
                          "fields": [
                            {
                              "doc": "SASL 认证方法名称。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-mechanism",
                              "text": "mechanism",
                              "type": "Enum(plain,scram_sha_256,scram_sha_512)"
                            },
                            {
                              "doc": "SASL 认证的用户名。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "SASL 认证的密码。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-password",
                              "text": "password",
                              "type": "String"
                            }
                          ],
                          "hash": "T-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password",
                          "text": "auth_username_password"
                        },
                        {
                          "doc": "使用 GSSAPI/Kerberos 认证。",
                          "fields": [
                            {
                              "doc": "SASL GSSAPI 认证方法的 Kerberos principal，例如 <code>client_name@MY.KERBEROS.REALM.MYDOMAIN.COM</code>注意：这里使用的 realm 需要配置在 EMQX 服务器的 /etc/krb5.conf 中。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_principal",
                              "text": "kerberos_principal",
                              "type": "String"
                            },
                            {
                              "doc": "SASL GSSAPI 认证方法的 Kerberos keytab 文件。注意：该文件需要上传到 EMQX 服务器中，且运行 EMQX 服务的系统账户需要有读取权限。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_keytab_file",
                              "text": "kerberos_keytab_file",
                              "type": "String"
                            }
                          ],
                          "hash": "T-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos",
                          "text": "auth_gssapi_kerberos"
                        }
                      ],
                      "text": "authentication",
                      "type": "OneOf(String(\"none\"),Struct(auth_username_password),Struct(auth_gssapi_kerberos))"
                    },
                    {
                      "doc": "更多 Socket 参数设置。",
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts",
                      "refs": [
                        {
                          "doc": "更多 Socket 参数设置。",
                          "fields": [
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "Enable TCP keepalive for Kafka bridge connections.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: TCP keepalive probes are sent after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "text": "tcp_keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts",
                          "text": "socket_opts"
                        }
                      ],
                      "text": "socket_opts",
                      "type": "Struct(socket_opts)"
                    },
                    {
                      "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl",
                      "refs": [
                        {
                          "doc": "TLS/SSL options for Kafka client.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "default": "auto",
                              "doc": "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: Allow the client to automatically determine the appropriate SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values will be sent as-is.",
                              "hash": "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"auto\"),String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-connectors-S-connectors-kafka_producer-S-config_connector",
                  "text": "config_connector"
                }
              ],
              "text": "kafka_producer",
              "type": "Map($name->Struct(config_connector))"
            },
            {
              "doc": "Azure Event Hub Connector Config",
              "hash": "V-connectors-S-connectors-azure_event_hub_producer",
              "refs": [
                {
                  "doc": "Configuration for an Azure Event Hub bridge.",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "Enable (true) or disable (false) this bridge.",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "\"\"",
                      "doc": "Descriptive text.",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-description",
                      "text": "description",
                      "type": "String"
                    },
                    {
                      "doc": "A comma separated list of Azure Event Hub Kafka <code>host[:port]</code> namespace endpoints to bootstrap the client.  Default port number is 9093.",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-bootstrap_hosts",
                      "text": "bootstrap_hosts",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "TCP 连接建立的最大等待时间（包括如果已启用身份认证则包括身份认证时间）",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-connect_timeout",
                      "text": "connect_timeout",
                      "type": "String"
                    },
                    {
                      "default": "3s",
                      "doc": "客户端在刷新 Azure Event Hub Kafka 代理和主题元数据之前必须等待的最小时间间隔。设置太小的值可能会给 Azure Event Hub 增加额外的负载。",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-min_metadata_refresh_interval",
                      "text": "min_metadata_refresh_interval",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "Maximum wait time when fetching metadata from Azure Event Hub.",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-metadata_request_timeout",
                      "text": "metadata_request_timeout",
                      "type": "String"
                    },
                    {
                      "default": "{}",
                      "doc": "Authentication configs.",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication",
                      "refs": [
                        {
                          "doc": "基于用户名/密码进行认证",
                          "fields": [
                            {
                              "doc": "用于连接 Azure Event Hub 的连接字符串。应为命名空间共享访问策略的 \"连接字符串-主键\"。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication-S-auth_username_password-password",
                              "text": "password",
                              "type": "String"
                            }
                          ],
                          "hash": "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication-S-auth_username_password",
                          "text": "auth_username_password"
                        }
                      ],
                      "text": "authentication",
                      "type": "Struct(auth_username_password)"
                    },
                    {
                      "doc": "Extra socket options.",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts",
                      "refs": [
                        {
                          "doc": "更多 Socket 参数设置。",
                          "fields": [
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            },
                            {
                              "default": "1MB",
                              "doc": "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "设置‘true’让系统内核立即发送。否则当需要发送的内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "default": "none",
                              "doc": "Enable TCP keepalive for Kafka bridge connections.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: TCP keepalive probes are sent after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "text": "tcp_keepalive",
                              "type": "String"
                            }
                          ],
                          "hash": "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts",
                          "text": "socket_opts"
                        }
                      ],
                      "text": "socket_opts",
                      "type": "Struct(socket_opts)"
                    },
                    {
                      "default": "{enable = true}",
                      "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl",
                      "refs": [
                        {
                          "doc": "TLS/SSL options for Azure Event Hub client.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS。",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "text": "enable",
                              "type": "String(\"true\")"
                            },
                            {
                              "default": "auto",
                              "doc": "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: The client will use <code>\"servicebus.windows.net\"</code> as SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values it will be sent as-is.",
                              "hash": "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"auto\"),String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts",
                          "text": "ssl_client_opts"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_client_opts)"
                    }
                  ],
                  "hash": "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector",
                  "text": "config_connector"
                }
              ],
              "text": "azure_event_hub_producer",
              "type": "Map($name->Struct(config_connector))"
            }
          ],
          "hash": "T-connectors-S-connectors",
          "text": "connectors"
        }
      ],
      "text": "connectors",
      "type": "Struct(connectors)"
    },
    {
      "hash": "V-actions",
      "refs": [
        {
          "doc": "Configuration for bridges.",
          "fields": [
            {
              "doc": "Kafka Producer Actions Config",
              "hash": "V-actions-S-actions-kafka_producer",
              "refs": [
                {
                  "doc": "Kafka Producer Action",
                  "fields": [
                    {
                      "default": "true",
                      "doc": "启用（true）或停用该（false）Kafka 数据桥接。",
                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "Name of connector used to connect to the resource where the action is to be performed.",
                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-connector",
                      "text": "connector",
                      "type": "String"
                    },
                    {
                      "default": "\"\"",
                      "doc": "Descriptive text.",
                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-description",
                      "text": "description",
                      "type": "String"
                    },
                    {
                      "doc": "MQTT 主题数据源由桥接指定，或留空由规则动作指定。",
                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "aliases": [
                        "kafka"
                      ],
                      "doc": "Kafka 生产者参数。",
                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters",
                      "refs": [
                        {
                          "doc": "Kafka 生产者参数。",
                          "fields": [
                            {
                              "doc": "Kafka 主题名称",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-topic",
                              "text": "topic",
                              "type": "String"
                            },
                            {
                              "doc": "用于生成 Kafka 消息的模版。",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message",
                              "refs": [
                                {
                                  "doc": "用于生成 Kafka 消息的模版。",
                                  "fields": [
                                    {
                                      "default": "\"${.clientid}\"",
                                      "doc": "生成 Kafka 消息 Key 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code> ，而非空字符串。",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "text": "key",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${.}\"",
                                      "doc": "生成 Kafka 消息 Value 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code>，而非空字符串。",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "text": "value",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${.timestamp}\"",
                                      "doc": "生成 Kafka 消息时间戳的模版。该时间必需是一个整型数值（可以是字符串格式）例如 <code>1661326462115</code> 或 <code>'1661326462115'</code>。当所需的输入字段不存在，或不是一个整型时，则会使用当前系统时间。",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-timestamp",
                                      "text": "timestamp",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "text": "kafka_message"
                                }
                              ],
                              "text": "message",
                              "type": "Struct(kafka_message)"
                            },
                            {
                              "default": "896KB",
                              "doc": "最大消息批量字节数。大多数 Kafka 环境的默认最低值是 1 MB，EMQX 的默认值比 1 MB 更小是因为需要补偿 Kafka 消息编码所需要的额外字节（尤其是当每条消息都很小的情况下）。当单个消息的大小超过该限制时，它仍然会被发送，（相当于该批量中只有单个消息）。",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "text": "max_batch_bytes",
                              "type": "String"
                            },
                            {
                              "default": "no_compression",
                              "doc": "压缩方法。",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-compression",
                              "text": "compression",
                              "type": "Enum(no_compression,snappy,gzip)"
                            },
                            {
                              "default": "random",
                              "doc": "设置消息发布时应该如何选择 Kafka 分区。\n\n<code>random</code>: 为每个消息随机选择一个分区。\n<code>key_dispatch</code>: Hash Kafka message key to a partition number",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-partition_strategy",
                              "text": "partition_strategy",
                              "type": "Enum(random,key_dispatch)"
                            },
                            {
                              "default": "all_isr",
                              "doc": "设置 Kafka leader 在返回给 EMQX 确认之前需要等待多少个 follower 的确认。\n\n<code>all_isr</code>: 需要所有的在线复制者都确认。\n<code>leader_only</code>: 仅需要分区 leader 确认。\n<code>none</code>: 无需 Kafka 回复任何确认。",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-required_acks",
                              "text": "required_acks",
                              "type": "Enum(all_isr,leader_only,none)"
                            },
                            {
                              "doc": "Please provide a placeholder to be used as Kafka Headers<br/>\ne.g. <code>${pub_props}</code><br/>\nNotice that the value of the placeholder must either be an object:\n<code>{\"foo\": \"bar\"}</code>\nor an array of key-value pairs:\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code>",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_headers",
                              "text": "kafka_headers",
                              "type": "String"
                            },
                            {
                              "doc": "Please provide more key-value pairs for Kafka headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending to Kafka.",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "refs": [
                                {
                                  "doc": "Please provide more key-value pairs for Kafka headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending to Kafka.",
                                  "fields": [
                                    {
                                      "doc": "Key of the Kafka header. Placeholders in format of ${var} are supported.",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "text": "kafka_ext_header_key",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Value of the Kafka header. Placeholders in format of ${var} are supported.",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "text": "kafka_ext_header_value",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "text": "producer_kafka_ext_headers"
                                }
                              ],
                              "text": "kafka_ext_headers",
                              "type": "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "default": "none",
                              "doc": "Kafka headers value encode mode<br/>\n - NONE: only add binary values to Kafka headers;<br/>\n - JSON: only add JSON values to Kafka headers,\nand encode it to JSON strings before sending.",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "text": "kafka_header_value_encode_mode",
                              "type": "Enum(none,json)"
                            },
                            {
                              "default": "60s",
                              "doc": "配置 Kafka 刷新分区数量的时间间隔。\nEMQX 发现 Kafka 分区数量增加后，会开始按 <code>partition_strategy<code> 配置，把消息发送到新的分区中。",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "text": "partition_count_refresh_interval",
                              "type": "String"
                            },
                            {
                              "default": "10",
                              "doc": "设置 Kafka 生产者（每个分区一个）在收到 Kafka 的确认前最多发送多少个请求（批量）。调大这个值通常可以增加吞吐量，但是，当该值设置大于 1 时存在消息乱序的风险。",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-max_inflight",
                              "text": "max_inflight",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer",
                              "refs": [
                                {
                                  "doc": "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                                  "fields": [
                                    {
                                      "default": "memory",
                                      "doc": "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "text": "mode",
                                      "type": "Enum(memory,disk,hybrid)"
                                    },
                                    {
                                      "default": "2GB",
                                      "doc": "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "text": "per_partition_limit",
                                      "type": "String"
                                    },
                                    {
                                      "default": "100MB",
                                      "doc": "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "text": "segment_bytes",
                                      "type": "String"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "text": "memory_overload_protection",
                                      "type": "Boolean"
                                    }
                                  ],
                                  "hash": "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "text": "producer_buffer"
                                }
                              ],
                              "text": "buffer",
                              "type": "Struct(producer_buffer)"
                            },
                            {
                              "default": "async",
                              "doc": "Query mode. Optional 'sync/async', default 'async'.",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(async,sync)"
                            },
                            {
                              "default": "5s",
                              "doc": "This parameter defines the timeout limit for synchronous queries. It applies only when the bridge query mode is configured to 'sync'.",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "text": "sync_query_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts",
                          "text": "producer_kafka_opts"
                        }
                      ],
                      "text": "parameters",
                      "type": "Struct(producer_kafka_opts)"
                    },
                    {
                      "default": "{}",
                      "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts",
                      "refs": [
                        {
                          "doc": "资源相关的选项。",
                          "fields": [
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts-S-resource_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            }
                          ],
                          "hash": "T-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts-S-resource_opts",
                          "text": "resource_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(resource_opts)"
                    }
                  ],
                  "hash": "T-actions-S-actions-kafka_producer-S-kafka_producer_action",
                  "text": "kafka_producer_action"
                }
              ],
              "text": "kafka_producer",
              "type": "Map($name->Struct(kafka_producer_action))"
            },
            {
              "doc": "Azure Event Hub Actions Config",
              "hash": "V-actions-S-actions-azure_event_hub_producer",
              "refs": [
                {
                  "doc": "The configuration for an action.",
                  "fields": [
                    {
                      "doc": "MQTT topic or topic filter as data source (bridge input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in Azure Event Hub.",
                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-local_topic",
                      "text": "local_topic",
                      "type": "String"
                    },
                    {
                      "aliases": [
                        "kafka"
                      ],
                      "doc": "Azure Event Hub 生产者配置",
                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters",
                      "refs": [
                        {
                          "doc": "Azure Event Hub 生产者配置",
                          "fields": [
                            {
                              "doc": "----",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-topic",
                              "text": "topic",
                              "type": "String"
                            },
                            {
                              "doc": "Template to render an Azure Event Hub message.",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message",
                              "refs": [
                                {
                                  "doc": "Template to render an Azure Event Hub message.",
                                  "fields": [
                                    {
                                      "default": "\"${.clientid}\"",
                                      "doc": "Template to render Azure Event Hub message key. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then Azure Event Hub's <code>NULL</code> (but not empty string) is used.",
                                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "text": "key",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${.}\"",
                                      "doc": "Template to render Azure Event Hub message value. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then Azure Event Hub's <code>NULL</code> (but not empty string) is used.",
                                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "text": "value",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "text": "kafka_message"
                                }
                              ],
                              "text": "message",
                              "type": "Struct(kafka_message)"
                            },
                            {
                              "default": "896KB",
                              "doc": "Maximum bytes to collect in an Azure Event Hub message batch. Most of the Kafka brokers default to a limit of 1 MB batch size. EMQX's default value is less than 1 MB in order to compensate Kafka message encoding overheads (especially when each individual message is very small). When a single message is over the limit, it is still sent (as a single element batch).",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "text": "max_batch_bytes",
                              "type": "String"
                            },
                            {
                              "default": "random",
                              "doc": "Partition strategy is to tell the producer how to dispatch messages to Azure Event Hub partitions.\n\n<code>random</code>: Randomly pick a partition for each message\n<code>key_dispatch</code>: Hash Azure Event Hub message key to a partition number",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-partition_strategy",
                              "text": "partition_strategy",
                              "type": "Enum(random,key_dispatch)"
                            },
                            {
                              "default": "all_isr",
                              "doc": "Required acknowledgements for Azure Event Hub partition leader to wait for its followers before it sends back the acknowledgement to EMQX Azure Event Hub producer\n\n<code>all_isr</code>: Require all in-sync replicas to acknowledge.\n<code>leader_only</code>: Require only the partition-leader's acknowledgement.",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-required_acks",
                              "text": "required_acks",
                              "type": "Enum(all_isr,leader_only)"
                            },
                            {
                              "doc": "Please provide a placeholder to be used as Azure Event Hub Headers<br/>\ne.g. <code>${pub_props}</code><br/>\nNotice that the value of the placeholder must either be an object:\n<code>{\"foo\": \"bar\"}</code>\nor an array of key-value pairs:\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code>",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_headers",
                              "text": "kafka_headers",
                              "type": "String"
                            },
                            {
                              "doc": "请提供更多的 Azure Event Hub 标头键值对<br/>这里的键值对将与<code>kafka_headers</code>字段的值合并，然后发送到 Azure Event Hub。",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "refs": [
                                {
                                  "doc": "Please provide more key-value pairs for Kafka headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending to Kafka.",
                                  "fields": [
                                    {
                                      "doc": "Key of the Kafka header. Placeholders in format of ${var} are supported.",
                                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "text": "kafka_ext_header_key",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Value of the Kafka header. Placeholders in format of ${var} are supported.",
                                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "text": "kafka_ext_header_value",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "text": "producer_kafka_ext_headers"
                                }
                              ],
                              "text": "kafka_ext_headers",
                              "type": "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "default": "none",
                              "doc": "Azure Event Hub headers value encode mode<br/>\n - NONE: only add binary values to Azure Event Hub headers;<br/>\n - JSON: only add JSON values to Azure Event Hub headers,\nand encode it to JSON strings before sending.",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "text": "kafka_header_value_encode_mode",
                              "type": "Enum(none,json)"
                            },
                            {
                              "default": "60s",
                              "doc": "The time interval for Azure Event Hub producer to discover increased number of partitions.\nAfter the number of partitions is increased in Azure Event Hub, EMQX will start taking the\ndiscovered partitions into account when dispatching messages per <code>partition_strategy</code>.",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "text": "partition_count_refresh_interval",
                              "type": "String"
                            },
                            {
                              "default": "10",
                              "doc": "Maximum number of batches allowed for Azure Event Hub producer (per-partition) to send before receiving acknowledgement from Azure Event Hub. Greater value typically means better throughput. However, there can be a risk of message reordering when this value is greater than 1.",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-max_inflight",
                              "text": "max_inflight",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "配置生产者消息缓冲区。\n\n告诉 Azure Event Hub 生产者，在 EMQX 需要发送的消息多于 Azure Event Hub 能够处理的消息时，或者 Azure Event Hub 宕机时，如何缓冲消息。",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer",
                              "refs": [
                                {
                                  "doc": "配置消息缓存的相关参数。\n\n当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                                  "fields": [
                                    {
                                      "default": "memory",
                                      "doc": "消息缓存模式。\n<code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。\n<code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。\n<code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "text": "mode",
                                      "type": "Enum(memory,disk,hybrid)"
                                    },
                                    {
                                      "default": "2GB",
                                      "doc": "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。",
                                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "text": "per_partition_limit",
                                      "type": "String"
                                    },
                                    {
                                      "default": "100MB",
                                      "doc": "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。",
                                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "text": "segment_bytes",
                                      "type": "String"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "text": "memory_overload_protection",
                                      "type": "Boolean"
                                    }
                                  ],
                                  "hash": "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "text": "producer_buffer"
                                }
                              ],
                              "text": "buffer",
                              "type": "Struct(producer_buffer)"
                            },
                            {
                              "default": "async",
                              "doc": "Query mode. Optional 'sync/async', default 'async'.",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-query_mode",
                              "text": "query_mode",
                              "type": "Enum(async,sync)"
                            },
                            {
                              "default": "5s",
                              "doc": "This parameter defines the timeout limit for synchronous queries. It applies only when the bridge query mode is configured to 'sync'.",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "text": "sync_query_timeout",
                              "type": "String"
                            }
                          ],
                          "hash": "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts",
                          "text": "producer_kafka_opts"
                        }
                      ],
                      "text": "parameters",
                      "type": "Struct(producer_kafka_opts)"
                    },
                    {
                      "default": "{}",
                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts",
                      "refs": [
                        {
                          "doc": "资源相关的选项。",
                          "fields": [
                            {
                              "default": "15s",
                              "doc": "健康检查间隔。",
                              "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts-S-resource_opts-health_check_interval",
                              "text": "health_check_interval",
                              "type": "String"
                            }
                          ],
                          "hash": "T-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts-S-resource_opts",
                          "text": "resource_opts"
                        }
                      ],
                      "text": "resource_opts",
                      "type": "Struct(resource_opts)"
                    },
                    {
                      "default": "true",
                      "doc": "Enable (true) or disable (false) this bridge.",
                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "Name of connector used to connect to the resource where the action is to be performed.",
                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-connector",
                      "text": "connector",
                      "type": "String"
                    },
                    {
                      "default": "\"\"",
                      "doc": "Descriptive text.",
                      "hash": "V-actions-S-actions-azure_event_hub_producer-S-actions-description",
                      "text": "description",
                      "type": "String"
                    }
                  ],
                  "hash": "T-actions-S-actions-azure_event_hub_producer-S-actions",
                  "text": "actions"
                }
              ],
              "text": "azure_event_hub_producer",
              "type": "Map($name->Struct(actions))"
            }
          ],
          "hash": "T-actions-S-actions",
          "text": "actions"
        }
      ],
      "text": "actions",
      "type": "Struct(actions)"
    },
    {
      "hash": "V-retainer",
      "refs": [
        {
          "doc": "Configuration related to handling `PUBLISH` packets with a `retain` flag set to 1.",
          "fields": [
            {
              "default": "true",
              "doc": "是否开启消息保留功能",
              "hash": "V-retainer-S-retainer-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "0s",
              "doc": "消息保留时间。0 代表永久保留",
              "hash": "V-retainer-S-retainer-msg_expiry_interval",
              "text": "msg_expiry_interval",
              "type": "String"
            },
            {
              "default": "0s",
              "doc": "消息清理间隔。0 代表不进行清理",
              "hash": "V-retainer-S-retainer-msg_clear_interval",
              "text": "msg_clear_interval",
              "type": "String"
            },
            {
              "default": "1MB",
              "doc": "消息大小最大值",
              "hash": "V-retainer-S-retainer-max_payload_size",
              "text": "max_payload_size",
              "type": "String"
            },
            {
              "default": "false",
              "doc": "是否不发送保留消息的清理消息，在 MQTT 5.0 中如果一条保留消息的消息体为空，则会清除掉之前存储\n的对应的保留消息，通过这个值控制是否停止发送清理消息。",
              "hash": "V-retainer-S-retainer-stop_publish_clear_msg",
              "text": "stop_publish_clear_msg",
              "type": "Boolean"
            },
            {
              "aliases": [
                "deliver_rate"
              ],
              "doc": "发送保留消息的最大速率",
              "hash": "V-retainer-S-retainer-delivery_rate",
              "text": "delivery_rate",
              "type": "String"
            },
            {
              "doc": "保留消息的存储后端",
              "hash": "V-retainer-S-retainer-backend",
              "refs": [
                {
                  "doc": "Configuration of the internal database storing retained messages.",
                  "fields": [
                    {
                      "default": "built_in_database",
                      "doc": "后端类型",
                      "hash": "V-retainer-S-retainer-backend-S-mnesia_config-type",
                      "text": "type",
                      "type": "String(\"built_in_database\")"
                    },
                    {
                      "default": "ram",
                      "doc": "选择消息是存放在磁盘还是内存中",
                      "hash": "V-retainer-S-retainer-backend-S-mnesia_config-storage_type",
                      "text": "storage_type",
                      "type": "Enum(ram,disc)"
                    },
                    {
                      "default": "0",
                      "doc": "消息保留的数量上限。0 表示无限",
                      "hash": "V-retainer-S-retainer-backend-S-mnesia_config-max_retained_messages",
                      "text": "max_retained_messages",
                      "type": "Integer(0..+inf)"
                    },
                    {
                      "default": "[\n  [1, 2, 3],\n  [1, 3],\n  [2, 3],\n  [3]\n]\n",
                      "doc": "Retainer index specifications: list of arrays of positive ascending integers. Each array specifies an index. Numbers in an index specification are 1-based word positions in topics. Words from specified positions will be used for indexing.<br/>For example, it is good to have <code>[2, 4]</code> index to optimize <code>+/X/+/Y/...</code> topic wildcard subscriptions.",
                      "hash": "V-retainer-S-retainer-backend-S-mnesia_config-index_specs",
                      "text": "index_specs",
                      "type": "Array(Integer)"
                    }
                  ],
                  "hash": "T-retainer-S-retainer-backend-S-mnesia_config",
                  "text": "mnesia_config"
                }
              ],
              "text": "backend",
              "type": "Struct(mnesia_config)"
            }
          ],
          "hash": "T-retainer-S-retainer",
          "text": "retainer"
        }
      ],
      "text": "retainer",
      "type": "Struct(retainer)"
    },
    {
      "hash": "V-delayed",
      "refs": [
        {
          "doc": "Settings for the delayed module.",
          "fields": [
            {
              "default": "true",
              "doc": "是否启用",
              "hash": "V-delayed-S-delayed-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "0",
              "doc": "延迟消息的数量上限(0 代表不限数量)",
              "hash": "V-delayed-S-delayed-max_delayed_messages",
              "text": "max_delayed_messages",
              "type": "Integer"
            }
          ],
          "hash": "T-delayed-S-delayed",
          "text": "delayed"
        }
      ],
      "text": "delayed",
      "type": "Struct(delayed)"
    },
    {
      "hash": "V-plugins",
      "refs": [
        {
          "doc": "管理EMQX插件。<br/>\n插件可以是EMQX安装包中的一部分，也可以是一个独立的安装包。<br/>\n独立安装的插件称为“外部插件”。",
          "fields": [
            {
              "default": "[]",
              "doc": "一组插件的状态。插件将按照定义的顺序启动",
              "hash": "V-plugins-S-plugins-states",
              "refs": [
                {
                  "doc": "描述插件的状态",
                  "fields": [
                    {
                      "doc": "插件的名称{name}-{version}。<br/>\n它应该与插件的发布包名称一致，如my_plugin-0.1.0。",
                      "hash": "V-plugins-S-plugins-states-S-state-name_vsn",
                      "text": "name_vsn",
                      "type": "String"
                    },
                    {
                      "doc": "设置为“true”以启用此插件。",
                      "hash": "V-plugins-S-plugins-states-S-state-enable",
                      "text": "enable",
                      "type": "Boolean"
                    }
                  ],
                  "hash": "T-plugins-S-plugins-states-S-state",
                  "text": "state"
                }
              ],
              "text": "states",
              "type": "Array(Struct(state))"
            },
            {
              "default": "plugins",
              "doc": "插件安装包的目录，出于安全考虑，该目录应该值允许 <code>emqx</code>，或用于运行 EMQX 服务的用户拥有写入权限。",
              "hash": "V-plugins-S-plugins-install_dir",
              "text": "install_dir",
              "type": "String"
            },
            {
              "doc": "Deprecated since 5.0.24.",
              "hash": "V-plugins-S-plugins-check_interval",
              "text": "check_interval",
              "type": "String"
            }
          ],
          "hash": "T-plugins-S-plugins",
          "text": "plugins"
        }
      ],
      "text": "plugins",
      "type": "Struct(plugins)"
    },
    {
      "hash": "V-dashboard",
      "refs": [
        {
          "doc": "EMQX Dashboard 配置。",
          "fields": [
            {
              "doc": "Dashboard 监听器设置。监听器必须有唯一的端口号和IP地址的组合。\n例如，可以通过指定IP地址 0.0.0.0 来监听机器上给定端口上的所有配置的IP地址。\n或者，可以为每个监听器指定唯一的IP地址，但使用相同的端口。",
              "hash": "V-dashboard-S-dashboard-listeners",
              "refs": [
                {
                  "doc": "Dashboard 监听器配置。",
                  "fields": [
                    {
                      "doc": "TCP listeners",
                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http",
                      "refs": [
                        {
                          "doc": "Dashboard 监听器(HTTP)配置。",
                          "fields": [
                            {
                              "default": "0",
                              "doc": "监听地址和端口，热更新此配置时，会重启 Dashboard 服务。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-bind",
                              "text": "bind",
                              "type": "String"
                            },
                            {
                              "default": "20",
                              "doc": "TCP 协议的 Socket acceptor 池大小, 通常配置为 CPU 核数",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-num_acceptors",
                              "text": "num_acceptors",
                              "type": "Integer"
                            },
                            {
                              "default": "512",
                              "doc": "同时处理的最大连接数。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-max_connections",
                              "text": "max_connections",
                              "type": "Integer"
                            },
                            {
                              "default": "1024",
                              "doc": "排队等待连接的队列的最大长度。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-backlog",
                              "text": "backlog",
                              "type": "Integer"
                            },
                            {
                              "default": "10s",
                              "doc": "发送响应内容的超时时间。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-send_timeout",
                              "text": "send_timeout",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用IPv6， 如果机器不支持IPv6，请关闭此选项，否则会导致 Dashboard 无法使用。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-inet6",
                              "text": "inet6",
                              "type": "Boolean"
                            },
                            {
                              "default": "false",
                              "doc": "当开启 inet6 功能的同时禁用 IPv4-to-IPv6 映射。该配置仅在 inet6 功能开启时有效。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-ipv6_v6only",
                              "text": "ipv6_v6only",
                              "type": "Boolean"
                            },
                            {
                              "default": "false",
                              "doc": "启用 Proxy Protocol 以提取客户端连接的原始信息，要求使用了代理服务器并且代理服务器也启用 Proxy Protocol。注意：一旦开启了这个功能，就无法再处理普通的 HTTP 请求。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-proxy_header",
                              "text": "proxy_header",
                              "type": "Boolean"
                            }
                          ],
                          "hash": "T-dashboard-S-dashboard-listeners-S-listeners-http-S-http",
                          "text": "http"
                        }
                      ],
                      "text": "http",
                      "type": "Struct(http)"
                    },
                    {
                      "doc": "SSL listeners",
                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https",
                      "refs": [
                        {
                          "doc": "Dashboard 监听器(HTTPS)配置。",
                          "fields": [
                            {
                              "default": "0",
                              "doc": "监听地址和端口，热更新此配置时，会重启 Dashboard 服务。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-bind",
                              "text": "bind",
                              "type": "String"
                            },
                            {
                              "doc": "Dashboard 监听器的 SSL/TLS 选项。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options",
                              "refs": [
                                {
                                  "doc": "Dashboard 监听器的 SSL/TLS 选项。",
                                  "fields": [
                                    {
                                      "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-cacertfile",
                                      "text": "cacertfile",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Deprecated since 5.1.4.",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-cacerts",
                                      "text": "cacerts",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-certfile",
                                      "text": "certfile",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                                      "doc": "PEM格式的私钥文件。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-keyfile",
                                      "text": "keyfile",
                                      "type": "String"
                                    },
                                    {
                                      "default": "verify_none",
                                      "doc": "启用或禁用对等验证。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-verify",
                                      "text": "verify",
                                      "type": "Enum(verify_peer,verify_none)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "启用 TLS 会话重用。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-reuse_sessions",
                                      "text": "reuse_sessions",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "10",
                                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-depth",
                                      "text": "depth",
                                      "type": "Integer(0..+inf)"
                                    },
                                    {
                                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-password",
                                      "text": "password",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[tlsv1.3, tlsv1.2]",
                                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-versions",
                                      "text": "versions",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-ciphers",
                                      "text": "ciphers",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-secure_renegotiate",
                                      "text": "secure_renegotiate",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "notice",
                                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-log_level",
                                      "text": "log_level",
                                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                    },
                                    {
                                      "default": "5s",
                                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-hibernate_after",
                                      "text": "hibernate_after",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-dhfile",
                                      "text": "dhfile",
                                      "type": "String"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-honor_cipher_order",
                                      "text": "honor_cipher_order",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-client_renegotiation",
                                      "text": "client_renegotiation",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "15s",
                                      "doc": "握手完成所允许的最长时间",
                                      "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-handshake_timeout",
                                      "text": "handshake_timeout",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options",
                                  "text": "ssl_options"
                                }
                              ],
                              "text": "ssl_options",
                              "type": "Struct(ssl_options)"
                            },
                            {
                              "default": "20",
                              "doc": "TCP 协议的 Socket acceptor 池大小, 通常配置为 CPU 核数",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-num_acceptors",
                              "text": "num_acceptors",
                              "type": "Integer"
                            },
                            {
                              "default": "512",
                              "doc": "同时处理的最大连接数。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-max_connections",
                              "text": "max_connections",
                              "type": "Integer"
                            },
                            {
                              "default": "1024",
                              "doc": "排队等待连接的队列的最大长度。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-backlog",
                              "text": "backlog",
                              "type": "Integer"
                            },
                            {
                              "default": "10s",
                              "doc": "发送响应内容的超时时间。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-send_timeout",
                              "text": "send_timeout",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用IPv6， 如果机器不支持IPv6，请关闭此选项，否则会导致 Dashboard 无法使用。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-inet6",
                              "text": "inet6",
                              "type": "Boolean"
                            },
                            {
                              "default": "false",
                              "doc": "当开启 inet6 功能的同时禁用 IPv4-to-IPv6 映射。该配置仅在 inet6 功能开启时有效。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ipv6_v6only",
                              "text": "ipv6_v6only",
                              "type": "Boolean"
                            },
                            {
                              "default": "false",
                              "doc": "启用 Proxy Protocol 以提取客户端连接的原始信息，要求使用了代理服务器并且代理服务器也启用 Proxy Protocol。注意：一旦开启了这个功能，就无法再处理普通的 HTTP 请求。",
                              "hash": "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-proxy_header",
                              "text": "proxy_header",
                              "type": "Boolean"
                            }
                          ],
                          "hash": "T-dashboard-S-dashboard-listeners-S-listeners-https-S-https",
                          "text": "https"
                        }
                      ],
                      "text": "https",
                      "type": "Struct(https)"
                    }
                  ],
                  "hash": "T-dashboard-S-dashboard-listeners-S-listeners",
                  "text": "listeners"
                }
              ],
              "text": "listeners",
              "type": "Struct(listeners)"
            },
            {
              "default": "60m",
              "doc": "登录成功返回的 JWT token 过期时间，默认为 60 分钟。",
              "hash": "V-dashboard-S-dashboard-token_expired_time",
              "text": "token_expired_time",
              "type": "String"
            },
            {
              "default": "false",
              "doc": "CORS（Cross-Origin Resource Sharing，跨域资源共享）允许服务器响应来自任何来源（域名、协议或端口）的请求，启用后允许另一个域名下的服务直接通过 JavaScript 调用 EMQX REST API。",
              "hash": "V-dashboard-S-dashboard-cors",
              "text": "cors",
              "type": "Boolean"
            },
            {
              "hash": "V-dashboard-S-dashboard-sso",
              "refs": [
                {
                  "doc": "Dashboard Single Sign-On",
                  "fields": [
                    {
                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap",
                      "refs": [
                        {
                          "doc": "LDAP",
                          "fields": [
                            {
                              "default": "false",
                              "doc": "是否启用该后端",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "----",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-backend",
                              "text": "backend",
                              "type": "Enum(ldap)"
                            },
                            {
                              "default": "5s",
                              "doc": "LDAP 查询超时。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-query_timeout",
                              "text": "query_timeout",
                              "type": "String"
                            },
                            {
                              "doc": "要连接的 IPv4 或 IPv6 地址或主机名。<br/>\n主机名条目的格式为：`主机[:端口]`。<br/>\n如果 `[:端口]` 未指定， 将使用 LDAP 默认端口 389。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-server",
                              "text": "server",
                              "type": "String"
                            },
                            {
                              "default": "8",
                              "doc": "桥接远端服务时使用的连接池大小。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-pool_size",
                              "text": "pool_size",
                              "type": "Integer(1..+inf)"
                            },
                            {
                              "doc": "内部数据库的用户名。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "内部数据库密码。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "doc": "与基本对象条目（或根）相关的名称。\n搜索用户的起点。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-base_dn",
                              "text": "base_dn",
                              "type": "String"
                            },
                            {
                              "default": "\"(& (objectClass=person) (uid=${username}))\"",
                              "doc": "LDAP 中匹配用户的过滤器默认为 `(&(objectClass=person)(uid=${username}))`。 对于 Active Directory，默认过滤器是 `(&(objectClass=user)(sAMAccountName=${username}))`。更多详细内容，请参考 [LDAP Filters](https://ldap.com/ldap-filters/)。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-filter",
                              "text": "filter",
                              "type": "String"
                            },
                            {
                              "default": "10s",
                              "doc": "设置每个单独请求所使用的最大时间（以毫秒为单位）。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-request_timeout",
                              "text": "request_timeout",
                              "type": "String"
                            },
                            {
                              "default": "{enable = false}",
                              "doc": "启用 SSL 连接。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl",
                              "refs": [
                                {
                                  "doc": "启用 SSL 连接。",
                                  "fields": [
                                    {
                                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-cacertfile",
                                      "text": "cacertfile",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Deprecated since 5.1.4.",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-cacerts",
                                      "text": "cacerts",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-certfile",
                                      "text": "certfile",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "PEM格式的私钥文件。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-keyfile",
                                      "text": "keyfile",
                                      "type": "String"
                                    },
                                    {
                                      "default": "verify_none",
                                      "doc": "启用或禁用对等验证。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-verify",
                                      "text": "verify",
                                      "type": "Enum(verify_peer,verify_none)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "启用 TLS 会话重用。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-reuse_sessions",
                                      "text": "reuse_sessions",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "10",
                                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-depth",
                                      "text": "depth",
                                      "type": "Integer(0..+inf)"
                                    },
                                    {
                                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-password",
                                      "text": "password",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[tlsv1.3, tlsv1.2]",
                                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-versions",
                                      "text": "versions",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-ciphers",
                                      "text": "ciphers",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-secure_renegotiate",
                                      "text": "secure_renegotiate",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "notice",
                                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-log_level",
                                      "text": "log_level",
                                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                    },
                                    {
                                      "default": "5s",
                                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-hibernate_after",
                                      "text": "hibernate_after",
                                      "type": "String"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "启用 TLS。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                                      "hash": "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-server_name_indication",
                                      "text": "server_name_indication",
                                      "type": "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "hash": "T-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl",
                                  "text": "ssl"
                                }
                              ],
                              "text": "ssl",
                              "type": "Struct(ssl)"
                            }
                          ],
                          "hash": "T-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap",
                          "text": "ldap"
                        }
                      ],
                      "text": "ldap",
                      "type": "Struct(ldap)"
                    },
                    {
                      "hash": "V-dashboard-S-dashboard-sso-S-sso-saml",
                      "refs": [
                        {
                          "doc": "saml",
                          "fields": [
                            {
                              "default": "false",
                              "doc": "是否启用该后端",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "----",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-backend",
                              "text": "backend",
                              "type": "Enum(saml)"
                            },
                            {
                              "default": "\"https://127.0.0.1:18083\"",
                              "doc": "EMQX Dashboard 的地址。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-dashboard_addr",
                              "text": "dashboard_addr",
                              "type": "String"
                            },
                            {
                              "default": "\"https://idp.example.com\"",
                              "doc": "身份提供商的元数据地址。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-idp_metadata_url",
                              "text": "idp_metadata_url",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "是否签署 SAML 请求。",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_sign_request",
                              "text": "sp_sign_request",
                              "type": "Boolean"
                            },
                            {
                              "default": "\"Pub Key\"",
                              "doc": "----",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_public_key",
                              "text": "sp_public_key",
                              "type": "String"
                            },
                            {
                              "doc": "----",
                              "hash": "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_private_key",
                              "text": "sp_private_key",
                              "type": "String"
                            }
                          ],
                          "hash": "T-dashboard-S-dashboard-sso-S-sso-saml-S-saml",
                          "text": "saml"
                        }
                      ],
                      "text": "saml",
                      "type": "Struct(saml)"
                    }
                  ],
                  "hash": "T-dashboard-S-dashboard-sso-S-sso",
                  "text": "sso"
                }
              ],
              "text": "sso",
              "type": "Struct(sso)"
            }
          ],
          "hash": "T-dashboard-S-dashboard",
          "text": "dashboard"
        }
      ],
      "text": "dashboard",
      "type": "Struct(dashboard)"
    },
    {
      "hash": "V-gateway",
      "refs": [
        {
          "doc": "EMQX Gateway configuration root.",
          "fields": [
            {
              "hash": "V-gateway-S-gateway-exproto",
              "refs": [
                {
                  "doc": "Settings for EMQX extension protocol (exproto).",
                  "fields": [
                    {
                      "doc": "配置 ExProto 网关需要启动的 <code>ConnectionAdapter</code> 服务。\n该服务用于提供客户端的认证、发布、订阅和数据下行等功能。",
                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server",
                      "refs": [
                        {
                          "doc": "Settings for the exproto gRPC server.",
                          "fields": [
                            {
                              "doc": "服务监听地址和端口。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-bind",
                              "text": "bind",
                              "type": "String"
                            },
                            {
                              "doc": "服务 SSL 配置。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options",
                              "refs": [
                                {
                                  "doc": "SSL configuration for the server.",
                                  "fields": [
                                    {
                                      "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-cacertfile",
                                      "text": "cacertfile",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Deprecated since 5.1.4.",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-cacerts",
                                      "text": "cacerts",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-certfile",
                                      "text": "certfile",
                                      "type": "String"
                                    },
                                    {
                                      "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                                      "doc": "PEM格式的私钥文件。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-keyfile",
                                      "text": "keyfile",
                                      "type": "String"
                                    },
                                    {
                                      "default": "verify_none",
                                      "doc": "启用或禁用对等验证。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-verify",
                                      "text": "verify",
                                      "type": "Enum(verify_peer,verify_none)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "启用 TLS 会话重用。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-reuse_sessions",
                                      "text": "reuse_sessions",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "10",
                                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-depth",
                                      "text": "depth",
                                      "type": "Integer(0..+inf)"
                                    },
                                    {
                                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-password",
                                      "text": "password",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[tlsv1.3, tlsv1.2]",
                                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-versions",
                                      "text": "versions",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-ciphers",
                                      "text": "ciphers",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-secure_renegotiate",
                                      "text": "secure_renegotiate",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "notice",
                                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-log_level",
                                      "text": "log_level",
                                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                    },
                                    {
                                      "default": "5s",
                                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-hibernate_after",
                                      "text": "hibernate_after",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-dhfile",
                                      "text": "dhfile",
                                      "type": "String"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-fail_if_no_peer_cert",
                                      "text": "fail_if_no_peer_cert",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-honor_cipher_order",
                                      "text": "honor_cipher_order",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-client_renegotiation",
                                      "text": "client_renegotiation",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "15s",
                                      "doc": "握手完成所允许的最长时间",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-handshake_timeout",
                                      "text": "handshake_timeout",
                                      "type": "String"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts",
                                  "text": "ssl_server_opts"
                                }
                              ],
                              "text": "ssl_options",
                              "type": "Struct(ssl_server_opts)"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server",
                          "text": "exproto_grpc_server"
                        }
                      ],
                      "text": "server",
                      "type": "Struct(exproto_grpc_server)"
                    },
                    {
                      "doc": "配置 ExProto 网关需要请求的 <code>ConnectionHandler</code> 服务地址。\n该服务用于给 ExProto 提供客户端的 Socket 事件处理、字节解码、订阅消息接收等功能。",
                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler",
                      "refs": [
                        {
                          "doc": "Settings for the exproto gRPC connection handler.",
                          "fields": [
                            {
                              "doc": "对端 gRPC 服务器地址。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-address",
                              "text": "address",
                              "type": "String"
                            },
                            {
                              "default": "ConnectionUnaryHandler",
                              "doc": "用于处理连接事件的服务名称\n在初始版本中，我们期望使用流来提高 ConnectionHandler 中请求的效率。\n但不幸的是，不同流之间的事件顺序混乱。\n这导致 OnSocketCreated 事件可能会\n在 OnReceivedBytes 之后到达。\n因此，自v5.0.25起，我们添加了 `ConnectionUnaryHandler` 服务，并强制在其中使用了 Unary，以避免顺序问题。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-service_name",
                              "text": "service_name",
                              "type": "OneOf(String(\"ConnectionHandler\"),String(\"ConnectionUnaryHandler\"))"
                            },
                            {
                              "doc": "gRPC 客户端的 SSL 配置。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options",
                              "refs": [
                                {
                                  "doc": "Socket options for SSL clients.",
                                  "fields": [
                                    {
                                      "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-cacertfile",
                                      "text": "cacertfile",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "Deprecated since 5.1.4.",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-cacerts",
                                      "text": "cacerts",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-certfile",
                                      "text": "certfile",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "PEM格式的私钥文件。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-keyfile",
                                      "text": "keyfile",
                                      "type": "String"
                                    },
                                    {
                                      "default": "verify_none",
                                      "doc": "启用或禁用对等验证。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-verify",
                                      "text": "verify",
                                      "type": "Enum(verify_peer,verify_none)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "启用 TLS 会话重用。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-reuse_sessions",
                                      "text": "reuse_sessions",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "10",
                                      "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-depth",
                                      "text": "depth",
                                      "type": "Integer(0..+inf)"
                                    },
                                    {
                                      "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-password",
                                      "text": "password",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[tlsv1.3, tlsv1.2]",
                                      "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-versions",
                                      "text": "versions",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-ciphers",
                                      "text": "ciphers",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-secure_renegotiate",
                                      "text": "secure_renegotiate",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "notice",
                                      "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-log_level",
                                      "text": "log_level",
                                      "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                    },
                                    {
                                      "default": "5s",
                                      "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-hibernate_after",
                                      "text": "hibernate_after",
                                      "type": "String"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "启用 TLS。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-server_name_indication",
                                      "text": "server_name_indication",
                                      "type": "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts",
                                  "text": "ssl_client_opts"
                                }
                              ],
                              "text": "ssl_options",
                              "type": "Struct(ssl_client_opts)"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler",
                          "text": "exproto_grpc_handler"
                        }
                      ],
                      "text": "handler",
                      "type": "Struct(exproto_grpc_handler)"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash": "V-gateway-S-gateway-exproto-S-exproto-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners",
                      "refs": [
                        {
                          "doc": "Settings for TCP and UDP listeners.",
                          "fields": [
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp",
                              "refs": [
                                {
                                  "doc": "Settings for TCP listener.",
                                  "fields": [
                                    {
                                      "default": "16",
                                      "doc": "Acceptor 进程池大小。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-acceptors",
                                      "text": "acceptors",
                                      "type": "Integer"
                                    },
                                    {
                                      "doc": "TCP Socket 配置。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "refs": [
                                        {
                                          "doc": "TCP listener options.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "default": "1024",
                                              "doc": "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "text": "backlog",
                                              "type": "Integer(1..+inf)"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "连接的 TCP 发送超时。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text": "send_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "如果发送超时，则关闭连接。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text": "send_timeout_close",
                                              "type": "Boolean"
                                            },
                                            {
                                              "doc": "连接的 TCP 接收缓冲区（OS 内核）。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "连接的 TCP 发送缓冲区（OS 内核）。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "default": "4KB",
                                              "doc": "驱动程序使用的用户空间缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "1MB",
                                              "doc": "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text": "high_watermark",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "连接的 TCP_NODELAY 标识",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text": "nodelay",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "连接的 SO_REUSEADDR 标识。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "none",
                                              "doc": "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux默认值为75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text": "keepalive",
                                              "type": "String"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "text": "tcp_opts"
                                        }
                                      ],
                                      "text": "tcp_options",
                                      "type": "Struct(tcp_opts)"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "text": "proxy_protocol",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "15s",
                                      "doc": "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "text": "proxy_protocol_timeout",
                                      "type": "String"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener",
                                  "text": "tcp_listener"
                                }
                              ],
                              "text": "tcp",
                              "type": "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl",
                              "refs": [
                                {
                                  "doc": "Settings for SSL listener.",
                                  "fields": [
                                    {
                                      "default": "16",
                                      "doc": "Acceptor 进程池大小。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-acceptors",
                                      "text": "acceptors",
                                      "type": "Integer"
                                    },
                                    {
                                      "doc": "TCP Socket 配置。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "refs": [
                                        {
                                          "doc": "TCP listener options.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "default": "1024",
                                              "doc": "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "text": "backlog",
                                              "type": "Integer(1..+inf)"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "连接的 TCP 发送超时。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text": "send_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "如果发送超时，则关闭连接。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text": "send_timeout_close",
                                              "type": "Boolean"
                                            },
                                            {
                                              "doc": "连接的 TCP 接收缓冲区（OS 内核）。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "连接的 TCP 发送缓冲区（OS 内核）。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "default": "4KB",
                                              "doc": "驱动程序使用的用户空间缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "1MB",
                                              "doc": "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text": "high_watermark",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "连接的 TCP_NODELAY 标识",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text": "nodelay",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "连接的 SO_REUSEADDR 标识。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "none",
                                              "doc": "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux默认值为75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text": "keepalive",
                                              "type": "String"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "text": "tcp_opts"
                                        }
                                      ],
                                      "text": "tcp_options",
                                      "type": "Struct(tcp_opts)"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "text": "proxy_protocol",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "15s",
                                      "doc": "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "text": "proxy_protocol_timeout",
                                      "type": "String"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "doc": "SSL Socket 配置。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "refs": [
                                        {
                                          "doc": "Socket options for SSL connections.",
                                          "fields": [
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "text": "cacertfile",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Deprecated since 5.1.4.",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "text": "cacerts",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "text": "certfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                                              "doc": "PEM格式的私钥文件。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "text": "keyfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "verify_none",
                                              "doc": "启用或禁用对等验证。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "text": "verify",
                                              "type": "Enum(verify_peer,verify_none)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "启用 TLS 会话重用。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "text": "reuse_sessions",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "10",
                                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "text": "depth",
                                              "type": "Integer(0..+inf)"
                                            },
                                            {
                                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "text": "password",
                                              "type": "String"
                                            },
                                            {
                                              "default": "[tlsv1.3, tlsv1.2]",
                                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "text": "versions",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "[]",
                                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "text": "ciphers",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "text": "secure_renegotiate",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "notice",
                                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "text": "log_level",
                                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                            },
                                            {
                                              "default": "5s",
                                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "text": "hibernate_after",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "text": "dhfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "text": "fail_if_no_peer_cert",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "text": "honor_cipher_order",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "text": "client_renegotiation",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "握手完成所允许的最长时间",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "text": "handshake_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "内存使用调优。如果启用，将在TLS/SSL握手完成后立即执行垃圾回收。TLS/SSL握手建立后立即进行GC。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "text": "gc_after_handshake",
                                              "type": "Boolean"
                                            },
                                            {
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "refs": [
                                                {
                                                  "doc": "Per listener OCSP Stapling configuration.",
                                                  "fields": [
                                                    {
                                                      "default": "false",
                                                      "doc": "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text": "enable_ocsp_stapling",
                                                      "type": "Boolean"
                                                    },
                                                    {
                                                      "doc": "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "text": "responder_url",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "doc": "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text": "issuer_pem",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "5m",
                                                      "doc": "为服务器刷新OCSP响应的周期。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text": "refresh_interval",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "15s",
                                                      "doc": "检查 OCSP 响应时，HTTP 请求的超时。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text": "refresh_http_timeout",
                                                      "type": "String"
                                                    }
                                                  ],
                                                  "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "text": "ocsp"
                                                }
                                              ],
                                              "text": "ocsp",
                                              "type": "Struct(ocsp)"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "是否为该监听器启用 CRL 检查。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "text": "enable_crl_check",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "text": "listener_ssl_opts"
                                        }
                                      ],
                                      "text": "ssl_options",
                                      "type": "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener",
                                  "text": "ssl_listener"
                                }
                              ],
                              "text": "ssl",
                              "type": "Map($name->Struct(ssl_listener))"
                            },
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp",
                              "refs": [
                                {
                                  "doc": "Settings for UDP listener.",
                                  "fields": [
                                    {
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for UDP sockets.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "doc": "Socket 在内核空间接收缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在内核空间发送缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在用户空间的缓冲区大小。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "text": "udp_opts"
                                        }
                                      ],
                                      "text": "udp_options",
                                      "type": "Struct(udp_opts)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener",
                                  "text": "udp_listener"
                                }
                              ],
                              "text": "udp",
                              "type": "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls",
                              "refs": [
                                {
                                  "doc": "Settings for DTLS listener.",
                                  "fields": [
                                    {
                                      "default": "16",
                                      "doc": "Acceptor 进程池大小。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text": "acceptors",
                                      "type": "Integer"
                                    },
                                    {
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for UDP sockets.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "doc": "Socket 在内核空间接收缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在内核空间发送缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在用户空间的缓冲区大小。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "text": "udp_opts"
                                        }
                                      ],
                                      "text": "udp_options",
                                      "type": "Struct(udp_opts)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "doc": "DTLS Socket 配置",
                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for DTLS protocol.",
                                          "fields": [
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text": "cacertfile",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Deprecated since 5.1.4.",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text": "cacerts",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text": "certfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                                              "doc": "PEM格式的私钥文件。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text": "keyfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "verify_none",
                                              "doc": "启用或禁用对等验证。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text": "verify",
                                              "type": "Enum(verify_peer,verify_none)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "启用 TLS 会话重用。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text": "reuse_sessions",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "10",
                                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text": "depth",
                                              "type": "Integer(0..+inf)"
                                            },
                                            {
                                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text": "password",
                                              "type": "String"
                                            },
                                            {
                                              "default": "[dtlsv1.2]",
                                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text": "versions",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "[]",
                                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text": "ciphers",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text": "secure_renegotiate",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "notice",
                                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text": "log_level",
                                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                            },
                                            {
                                              "default": "5s",
                                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text": "hibernate_after",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text": "dhfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text": "fail_if_no_peer_cert",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text": "honor_cipher_order",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text": "client_renegotiation",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "握手完成所允许的最长时间",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text": "handshake_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "内存使用调优。如果启用，将在TLS/SSL握手完成后立即执行垃圾回收。TLS/SSL握手建立后立即进行GC。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text": "gc_after_handshake",
                                              "type": "Boolean"
                                            },
                                            {
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "refs": [
                                                {
                                                  "doc": "Per listener OCSP Stapling configuration.",
                                                  "fields": [
                                                    {
                                                      "default": "false",
                                                      "doc": "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text": "enable_ocsp_stapling",
                                                      "type": "Boolean"
                                                    },
                                                    {
                                                      "doc": "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text": "responder_url",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "doc": "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text": "issuer_pem",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "5m",
                                                      "doc": "为服务器刷新OCSP响应的周期。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text": "refresh_interval",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "15s",
                                                      "doc": "检查 OCSP 响应时，HTTP 请求的超时。",
                                                      "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text": "refresh_http_timeout",
                                                      "type": "String"
                                                    }
                                                  ],
                                                  "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "text": "ocsp"
                                                }
                                              ],
                                              "text": "ocsp",
                                              "type": "Struct(ocsp)"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "是否为该监听器启用 CRL 检查。",
                                              "hash": "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text": "enable_crl_check",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "text": "dtls_opts"
                                        }
                                      ],
                                      "text": "dtls_options",
                                      "type": "Struct(dtls_opts)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener",
                                  "text": "dtls_listener"
                                }
                              ],
                              "text": "dtls",
                              "type": "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners",
                          "text": "tcp_udp_listeners"
                        }
                      ],
                      "text": "listeners",
                      "type": "Struct(tcp_udp_listeners)"
                    },
                    {
                      "default": "true",
                      "doc": "是否启用该网关",
                      "hash": "V-gateway-S-gateway-exproto-S-exproto-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "true",
                      "doc": "是否开启客户端统计",
                      "hash": "V-gateway-S-gateway-exproto-S-exproto-enable_stats",
                      "text": "enable_stats",
                      "type": "Boolean"
                    },
                    {
                      "default": "30s",
                      "doc": "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。",
                      "hash": "V-gateway-S-gateway-exproto-S-exproto-idle_timeout",
                      "text": "idle_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "ClientInfo 重写。",
                      "hash": "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override",
                      "refs": [
                        {
                          "doc": "ClientInfo override.",
                          "fields": [
                            {
                              "doc": "username 重写模板",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "password 重写模板",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "doc": "clientid 重写模板",
                              "hash": "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-clientid",
                              "text": "clientid",
                              "type": "String"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override",
                          "text": "clientinfo_override"
                        }
                      ],
                      "text": "clientinfo_override",
                      "type": "Struct(clientinfo_override)"
                    }
                  ],
                  "hash": "T-gateway-S-gateway-exproto-S-exproto",
                  "text": "exproto"
                }
              ],
              "text": "exproto",
              "type": "Struct(exproto)"
            },
            {
              "hash": "V-gateway-S-gateway-stomp",
              "refs": [
                {
                  "doc": "The STOMP protocol gateway provides EMQX with the ability to access STOMP\n(Simple (or Streaming) Text Orientated Messaging Protocol) protocol.",
                  "fields": [
                    {
                      "hash": "V-gateway-S-gateway-stomp-S-stomp-frame",
                      "refs": [
                        {
                          "doc": "Size limits for the STOMP frames.",
                          "fields": [
                            {
                              "default": "10",
                              "doc": "允许的 Header 最大数量",
                              "hash": "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_headers",
                              "text": "max_headers",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "default": "1024",
                              "doc": "允许的 Header 字符串的最大长度",
                              "hash": "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_headers_length",
                              "text": "max_headers_length",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "default": "65536",
                              "doc": "允许的 Stomp 报文 Body 的最大字节数",
                              "hash": "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_body_length",
                              "text": "max_body_length",
                              "type": "Integer"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame",
                          "text": "stomp_frame"
                        }
                      ],
                      "text": "frame",
                      "type": "Struct(stomp_frame)"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash": "V-gateway-S-gateway-stomp-S-stomp-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners",
                      "refs": [
                        {
                          "doc": "Settings for the TCP listeners.",
                          "fields": [
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp",
                              "refs": [
                                {
                                  "doc": "Settings for TCP listener.",
                                  "fields": [
                                    {
                                      "default": "16",
                                      "doc": "Acceptor 进程池大小。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-acceptors",
                                      "text": "acceptors",
                                      "type": "Integer"
                                    },
                                    {
                                      "doc": "TCP Socket 配置。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "refs": [
                                        {
                                          "doc": "TCP listener options.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "default": "1024",
                                              "doc": "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "text": "backlog",
                                              "type": "Integer(1..+inf)"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "连接的 TCP 发送超时。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text": "send_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "如果发送超时，则关闭连接。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text": "send_timeout_close",
                                              "type": "Boolean"
                                            },
                                            {
                                              "doc": "连接的 TCP 接收缓冲区（OS 内核）。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "连接的 TCP 发送缓冲区（OS 内核）。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "default": "4KB",
                                              "doc": "驱动程序使用的用户空间缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "1MB",
                                              "doc": "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text": "high_watermark",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "连接的 TCP_NODELAY 标识",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text": "nodelay",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "连接的 SO_REUSEADDR 标识。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "none",
                                              "doc": "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux默认值为75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text": "keepalive",
                                              "type": "String"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "text": "tcp_opts"
                                        }
                                      ],
                                      "text": "tcp_options",
                                      "type": "Struct(tcp_opts)"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "text": "proxy_protocol",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "15s",
                                      "doc": "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "text": "proxy_protocol_timeout",
                                      "type": "String"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener",
                                  "text": "tcp_listener"
                                }
                              ],
                              "text": "tcp",
                              "type": "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl",
                              "refs": [
                                {
                                  "doc": "Settings for SSL listener.",
                                  "fields": [
                                    {
                                      "default": "16",
                                      "doc": "Acceptor 进程池大小。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-acceptors",
                                      "text": "acceptors",
                                      "type": "Integer"
                                    },
                                    {
                                      "doc": "TCP Socket 配置。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "refs": [
                                        {
                                          "doc": "TCP listener options.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为此套接字指定{active，N}选项<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "default": "1024",
                                              "doc": "TCP backlog 定义了挂起连接队列可以增长到的最大长度。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "text": "backlog",
                                              "type": "Integer(1..+inf)"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "连接的 TCP 发送超时。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "text": "send_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "如果发送超时，则关闭连接。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "text": "send_timeout_close",
                                              "type": "Boolean"
                                            },
                                            {
                                              "doc": "连接的 TCP 接收缓冲区（OS 内核）。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "连接的 TCP 发送缓冲区（OS 内核）。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "default": "4KB",
                                              "doc": "驱动程序使用的用户空间缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "1MB",
                                              "doc": "当 VM 套接字实现内部排队的数据量达到此限制时，套接字将设置为忙碌状态。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "text": "high_watermark",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "连接的 TCP_NODELAY 标识",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "text": "nodelay",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "连接的 SO_REUSEADDR 标识。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "none",
                                              "doc": "为 MQTT 连接在 TCP 或 SSL 上启用 TCP 保活。\n值是以逗号分隔的三个数字，格式为 'Idle,Interval,Probes'\n - Idle: 在服务器开始发送保活探测之前，连接需要处于空闲状态的秒数（Linux 默认为7200）。\n - Interval: TCP 保活探测间隔的秒数（Linux默认值为75）。\n - Probes: 在放弃并终止连接之前，从另一端未获得响应时要发送的 TCP 保活探测的最大数量（Linux 默认值为 9 次）。\n例如 \"240,30,5\" 表示：在连接空闲 240 秒后发送 TCP 保活探测，每隔 30 秒发送一次，直到收到响应，如果连续丢失 5 个响应，连接应该被关闭。\n默认值为 'none'",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "text": "keepalive",
                                              "type": "String"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "text": "tcp_opts"
                                        }
                                      ],
                                      "text": "tcp_options",
                                      "type": "Struct(tcp_opts)"
                                    },
                                    {
                                      "default": "false",
                                      "doc": "是否开启 Proxy Protocol V1/2。当 EMQX 集群部署在 HAProxy 或 Nginx 后需要获取客户端真实 IP 时常用到该选项。参考：https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "text": "proxy_protocol",
                                      "type": "Boolean"
                                    },
                                    {
                                      "default": "15s",
                                      "doc": "接收 Proxy Protocol 报文头的超时时间。如果在超时内没有收到 Proxy Protocol 包，EMQX 将关闭 TCP 连接。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "text": "proxy_protocol_timeout",
                                      "type": "String"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "doc": "SSL Socket 配置。",
                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "refs": [
                                        {
                                          "doc": "Socket options for SSL connections.",
                                          "fields": [
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "text": "cacertfile",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Deprecated since 5.1.4.",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "text": "cacerts",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "text": "certfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                                              "doc": "PEM格式的私钥文件。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "text": "keyfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "verify_none",
                                              "doc": "启用或禁用对等验证。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "text": "verify",
                                              "type": "Enum(verify_peer,verify_none)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "启用 TLS 会话重用。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "text": "reuse_sessions",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "10",
                                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "text": "depth",
                                              "type": "Integer(0..+inf)"
                                            },
                                            {
                                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "text": "password",
                                              "type": "String"
                                            },
                                            {
                                              "default": "[tlsv1.3, tlsv1.2]",
                                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "text": "versions",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "[]",
                                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "text": "ciphers",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "text": "secure_renegotiate",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "notice",
                                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "text": "log_level",
                                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                            },
                                            {
                                              "default": "5s",
                                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "text": "hibernate_after",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "text": "dhfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "text": "fail_if_no_peer_cert",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "text": "honor_cipher_order",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "text": "client_renegotiation",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "握手完成所允许的最长时间",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "text": "handshake_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "内存使用调优。如果启用，将在TLS/SSL握手完成后立即执行垃圾回收。TLS/SSL握手建立后立即进行GC。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "text": "gc_after_handshake",
                                              "type": "Boolean"
                                            },
                                            {
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "refs": [
                                                {
                                                  "doc": "Per listener OCSP Stapling configuration.",
                                                  "fields": [
                                                    {
                                                      "default": "false",
                                                      "doc": "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text": "enable_ocsp_stapling",
                                                      "type": "Boolean"
                                                    },
                                                    {
                                                      "doc": "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "text": "responder_url",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "doc": "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text": "issuer_pem",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "5m",
                                                      "doc": "为服务器刷新OCSP响应的周期。",
                                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text": "refresh_interval",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "15s",
                                                      "doc": "检查 OCSP 响应时，HTTP 请求的超时。",
                                                      "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text": "refresh_http_timeout",
                                                      "type": "String"
                                                    }
                                                  ],
                                                  "hash": "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "text": "ocsp"
                                                }
                                              ],
                                              "text": "ocsp",
                                              "type": "Struct(ocsp)"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "是否为该监听器启用 CRL 检查。",
                                              "hash": "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "text": "enable_crl_check",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "text": "listener_ssl_opts"
                                        }
                                      ],
                                      "text": "ssl_options",
                                      "type": "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener",
                                  "text": "ssl_listener"
                                }
                              ],
                              "text": "ssl",
                              "type": "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners",
                          "text": "tcp_listeners"
                        }
                      ],
                      "text": "listeners",
                      "type": "Struct(tcp_listeners)"
                    },
                    {
                      "default": "true",
                      "doc": "是否启用该网关",
                      "hash": "V-gateway-S-gateway-stomp-S-stomp-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "true",
                      "doc": "是否开启客户端统计",
                      "hash": "V-gateway-S-gateway-stomp-S-stomp-enable_stats",
                      "text": "enable_stats",
                      "type": "Boolean"
                    },
                    {
                      "default": "30s",
                      "doc": "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。",
                      "hash": "V-gateway-S-gateway-stomp-S-stomp-idle_timeout",
                      "text": "idle_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "ClientInfo 重写。",
                      "hash": "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override",
                      "refs": [
                        {
                          "doc": "ClientInfo override.",
                          "fields": [
                            {
                              "doc": "username 重写模板",
                              "hash": "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "password 重写模板",
                              "hash": "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "doc": "clientid 重写模板",
                              "hash": "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-clientid",
                              "text": "clientid",
                              "type": "String"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override",
                          "text": "clientinfo_override"
                        }
                      ],
                      "text": "clientinfo_override",
                      "type": "Struct(clientinfo_override)"
                    }
                  ],
                  "hash": "T-gateway-S-gateway-stomp-S-stomp",
                  "text": "stomp"
                }
              ],
              "text": "stomp",
              "type": "Struct(stomp)"
            },
            {
              "hash": "V-gateway-S-gateway-mqttsn",
              "refs": [
                {
                  "doc": "The MQTT-SN (MQTT for Sensor Networks) protocol gateway.",
                  "fields": [
                    {
                      "default": "1",
                      "doc": "MQTT-SN 网关 ID。\n当 <code>broadcast</code> 打开时，MQTT-SN 网关会使用该 ID 来广播 ADVERTISE 消息。",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-gateway_id",
                      "text": "gateway_id",
                      "type": "Integer"
                    },
                    {
                      "default": "false",
                      "doc": "是否周期性广播 ADVERTISE 消息",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-broadcast",
                      "text": "broadcast",
                      "type": "Boolean"
                    },
                    {
                      "default": "true",
                      "doc": "是否允许无连接的客户端发送 QoS 等于 -1 的消息。\n该功能主要用于支持轻量的 MQTT-SN 客户端实现，它不会向网关建立连接，注册主题，也不会发起订阅；它只使用 QoS 为 -1 来发布消息。",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-enable_qos3",
                      "text": "enable_qos3",
                      "type": "Boolean"
                    },
                    {
                      "default": "false",
                      "doc": "在会话被重用后，网关是否主动向客户端注册对已订阅主题名称",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-subs_resume",
                      "text": "subs_resume",
                      "type": "Boolean"
                    },
                    {
                      "default": "[]",
                      "doc": "预定义主题列表。\n预定义的主题列表，是一组 主题 ID 和 主题名称 的映射关系。使用预先定义的主题列表，可以减少 MQTT-SN 客户端和网关对于固定主题的注册请求。",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined",
                      "refs": [
                        {
                          "doc": "The pre-defined topic name corresponding to the pre-defined topic\nID of N.\n\nNote: the pre-defined topic ID of 0 is reserved.",
                          "fields": [
                            {
                              "doc": "主题 ID。范围：1-65535",
                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined-id",
                              "text": "id",
                              "type": "Integer(1..1024)"
                            },
                            {
                              "doc": "主题名称。注：不支持通配符",
                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined-topic",
                              "text": "topic",
                              "type": "String"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined",
                          "text": "mqttsn_predefined"
                        }
                      ],
                      "text": "predefined",
                      "type": "Array(Struct(mqttsn_predefined))"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners",
                      "refs": [
                        {
                          "doc": "Settings for the UDP listeners.",
                          "fields": [
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp",
                              "refs": [
                                {
                                  "doc": "Settings for UDP listener.",
                                  "fields": [
                                    {
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for UDP sockets.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "doc": "Socket 在内核空间接收缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在内核空间发送缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在用户空间的缓冲区大小。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "text": "udp_opts"
                                        }
                                      ],
                                      "text": "udp_options",
                                      "type": "Struct(udp_opts)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "text": "udp_listener"
                                }
                              ],
                              "text": "udp",
                              "type": "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls",
                              "refs": [
                                {
                                  "doc": "Settings for DTLS listener.",
                                  "fields": [
                                    {
                                      "default": "16",
                                      "doc": "Acceptor 进程池大小。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text": "acceptors",
                                      "type": "Integer"
                                    },
                                    {
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for UDP sockets.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "doc": "Socket 在内核空间接收缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在内核空间发送缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在用户空间的缓冲区大小。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "text": "udp_opts"
                                        }
                                      ],
                                      "text": "udp_options",
                                      "type": "Struct(udp_opts)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "doc": "DTLS Socket 配置",
                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for DTLS protocol.",
                                          "fields": [
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text": "cacertfile",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Deprecated since 5.1.4.",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text": "cacerts",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text": "certfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                                              "doc": "PEM格式的私钥文件。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text": "keyfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "verify_none",
                                              "doc": "启用或禁用对等验证。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text": "verify",
                                              "type": "Enum(verify_peer,verify_none)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "启用 TLS 会话重用。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text": "reuse_sessions",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "10",
                                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text": "depth",
                                              "type": "Integer(0..+inf)"
                                            },
                                            {
                                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text": "password",
                                              "type": "String"
                                            },
                                            {
                                              "default": "[dtlsv1.2]",
                                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text": "versions",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "[]",
                                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text": "ciphers",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text": "secure_renegotiate",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "notice",
                                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text": "log_level",
                                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                            },
                                            {
                                              "default": "5s",
                                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text": "hibernate_after",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text": "dhfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text": "fail_if_no_peer_cert",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text": "honor_cipher_order",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text": "client_renegotiation",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "握手完成所允许的最长时间",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text": "handshake_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "内存使用调优。如果启用，将在TLS/SSL握手完成后立即执行垃圾回收。TLS/SSL握手建立后立即进行GC。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text": "gc_after_handshake",
                                              "type": "Boolean"
                                            },
                                            {
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "refs": [
                                                {
                                                  "doc": "Per listener OCSP Stapling configuration.",
                                                  "fields": [
                                                    {
                                                      "default": "false",
                                                      "doc": "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text": "enable_ocsp_stapling",
                                                      "type": "Boolean"
                                                    },
                                                    {
                                                      "doc": "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text": "responder_url",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "doc": "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text": "issuer_pem",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "5m",
                                                      "doc": "为服务器刷新OCSP响应的周期。",
                                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text": "refresh_interval",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "15s",
                                                      "doc": "检查 OCSP 响应时，HTTP 请求的超时。",
                                                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text": "refresh_http_timeout",
                                                      "type": "String"
                                                    }
                                                  ],
                                                  "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "text": "ocsp"
                                                }
                                              ],
                                              "text": "ocsp",
                                              "type": "Struct(ocsp)"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "是否为该监听器启用 CRL 检查。",
                                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text": "enable_crl_check",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "text": "dtls_opts"
                                        }
                                      ],
                                      "text": "dtls_options",
                                      "type": "Struct(dtls_opts)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "text": "dtls_listener"
                                }
                              ],
                              "text": "dtls",
                              "type": "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners",
                          "text": "udp_listeners"
                        }
                      ],
                      "text": "listeners",
                      "type": "Struct(udp_listeners)"
                    },
                    {
                      "default": "true",
                      "doc": "是否启用该网关",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "true",
                      "doc": "是否开启客户端统计",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-enable_stats",
                      "text": "enable_stats",
                      "type": "Boolean"
                    },
                    {
                      "default": "30s",
                      "doc": "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-idle_timeout",
                      "text": "idle_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "ClientInfo 重写。",
                      "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override",
                      "refs": [
                        {
                          "doc": "ClientInfo override.",
                          "fields": [
                            {
                              "doc": "username 重写模板",
                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "password 重写模板",
                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "doc": "clientid 重写模板",
                              "hash": "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-clientid",
                              "text": "clientid",
                              "type": "String"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override",
                          "text": "clientinfo_override"
                        }
                      ],
                      "text": "clientinfo_override",
                      "type": "Struct(clientinfo_override)"
                    }
                  ],
                  "hash": "T-gateway-S-gateway-mqttsn-S-mqttsn",
                  "text": "mqttsn"
                }
              ],
              "text": "mqttsn",
              "type": "Struct(mqttsn)"
            },
            {
              "hash": "V-gateway-S-gateway-coap",
              "refs": [
                {
                  "doc": "The CoAP protocol gateway provides EMQX with the access capability of the CoAP protocol.\nIt allows publishing, subscribing, and receiving messages to EMQX in accordance\nwith a certain defined CoAP message format.",
                  "fields": [
                    {
                      "default": "30s",
                      "doc": "CoAP 网关要求客户端的最小心跳间隔时间。\n当 <code>connection_required</code> 开启后，该参数用于检查客户端连接是否存活",
                      "hash": "V-gateway-S-gateway-coap-S-coap-heartbeat",
                      "text": "heartbeat",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "是否开启连接模式。\n连接模式是非标准协议的功能。它维护 CoAP 客户端上线、认证、和连接状态的保持",
                      "hash": "V-gateway-S-gateway-coap-S-coap-connection_required",
                      "text": "connection_required",
                      "type": "Boolean"
                    },
                    {
                      "default": "qos",
                      "doc": "投递给 CoAP 客户端的通知消息类型。当客户端 Observe 一个资源（或订阅某个主题）时，网关会向客户端推送新产生的消息。其消息类型可设置为：<br />\n\n  - non: 不需要客户端返回确认消息;<br />\n  - con: 需要客户端返回一个确认消息;<br />\n  - qos: 取决于消息的 QoS 等级; QoS 0 会以 `non` 类型下发，QoS 1/2 会以 `con` 类型下发",
                      "hash": "V-gateway-S-gateway-coap-S-coap-notify_type",
                      "text": "notify_type",
                      "type": "Enum(non,con,qos)"
                    },
                    {
                      "default": "coap",
                      "doc": "客户端订阅请求的默认 QoS 等级。\n当 CoAP 客户端发起订阅请求时，如果未携带 `qos` 参数则会使用该默认值。默认值可设置为：<br/>\n  - qos0、 qos1、qos2: 设置为固定的 QoS 等级<br/>\n  - coap: 依据订阅操作的 CoAP 报文类型来动态决定<br/>\n    * 当订阅请求为 `non-confirmable` 类型时，取值为 qos0<br/>\n    * 当订阅请求为 `confirmable` 类型时，取值为 qos1",
                      "hash": "V-gateway-S-gateway-coap-S-coap-subscribe_qos",
                      "text": "subscribe_qos",
                      "type": "Enum(qos0,qos1,qos2,coap)"
                    },
                    {
                      "default": "coap",
                      "doc": "客户端发布请求的默认 QoS 等级。\n当 CoAP 客户端发起发布请求时，如果未携带 `qos` 参数则会使用该默认值。默认值可设置为：<br />\n\n  - qos0、qos1、qos2: 设置为固定的 QoS 等级<br />\n  - coap: 依据发布操作的 CoAP 报文类型来动态决定<br />\n    * 当发布请求为 `non-confirmable` 类型时，取值为 qos0<br />\n    * 当发布请求为 `confirmable` 类型时，取值为 qos1",
                      "hash": "V-gateway-S-gateway-coap-S-coap-publish_qos",
                      "text": "publish_qos",
                      "type": "Enum(qos0,qos1,qos2,coap)"
                    },
                    {
                      "default": "\"\"",
                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash": "V-gateway-S-gateway-coap-S-coap-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners",
                      "refs": [
                        {
                          "doc": "Settings for the UDP listeners.",
                          "fields": [
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp",
                              "refs": [
                                {
                                  "doc": "Settings for UDP listener.",
                                  "fields": [
                                    {
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for UDP sockets.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "doc": "Socket 在内核空间接收缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在内核空间发送缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在用户空间的缓冲区大小。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "text": "udp_opts"
                                        }
                                      ],
                                      "text": "udp_options",
                                      "type": "Struct(udp_opts)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "text": "udp_listener"
                                }
                              ],
                              "text": "udp",
                              "type": "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls",
                              "refs": [
                                {
                                  "doc": "Settings for DTLS listener.",
                                  "fields": [
                                    {
                                      "default": "16",
                                      "doc": "Acceptor 进程池大小。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text": "acceptors",
                                      "type": "Integer"
                                    },
                                    {
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for UDP sockets.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "doc": "Socket 在内核空间接收缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在内核空间发送缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在用户空间的缓冲区大小。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "text": "udp_opts"
                                        }
                                      ],
                                      "text": "udp_options",
                                      "type": "Struct(udp_opts)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "doc": "DTLS Socket 配置",
                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for DTLS protocol.",
                                          "fields": [
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text": "cacertfile",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Deprecated since 5.1.4.",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text": "cacerts",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text": "certfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                                              "doc": "PEM格式的私钥文件。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text": "keyfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "verify_none",
                                              "doc": "启用或禁用对等验证。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text": "verify",
                                              "type": "Enum(verify_peer,verify_none)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "启用 TLS 会话重用。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text": "reuse_sessions",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "10",
                                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text": "depth",
                                              "type": "Integer(0..+inf)"
                                            },
                                            {
                                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text": "password",
                                              "type": "String"
                                            },
                                            {
                                              "default": "[dtlsv1.2]",
                                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text": "versions",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "[]",
                                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text": "ciphers",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text": "secure_renegotiate",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "notice",
                                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text": "log_level",
                                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                            },
                                            {
                                              "default": "5s",
                                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text": "hibernate_after",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text": "dhfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text": "fail_if_no_peer_cert",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text": "honor_cipher_order",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text": "client_renegotiation",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "握手完成所允许的最长时间",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text": "handshake_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "内存使用调优。如果启用，将在TLS/SSL握手完成后立即执行垃圾回收。TLS/SSL握手建立后立即进行GC。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text": "gc_after_handshake",
                                              "type": "Boolean"
                                            },
                                            {
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "refs": [
                                                {
                                                  "doc": "Per listener OCSP Stapling configuration.",
                                                  "fields": [
                                                    {
                                                      "default": "false",
                                                      "doc": "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text": "enable_ocsp_stapling",
                                                      "type": "Boolean"
                                                    },
                                                    {
                                                      "doc": "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text": "responder_url",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "doc": "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text": "issuer_pem",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "5m",
                                                      "doc": "为服务器刷新OCSP响应的周期。",
                                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text": "refresh_interval",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "15s",
                                                      "doc": "检查 OCSP 响应时，HTTP 请求的超时。",
                                                      "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text": "refresh_http_timeout",
                                                      "type": "String"
                                                    }
                                                  ],
                                                  "hash": "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "text": "ocsp"
                                                }
                                              ],
                                              "text": "ocsp",
                                              "type": "Struct(ocsp)"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "是否为该监听器启用 CRL 检查。",
                                              "hash": "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text": "enable_crl_check",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "text": "dtls_opts"
                                        }
                                      ],
                                      "text": "dtls_options",
                                      "type": "Struct(dtls_opts)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "text": "dtls_listener"
                                }
                              ],
                              "text": "dtls",
                              "type": "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners",
                          "text": "udp_listeners"
                        }
                      ],
                      "text": "listeners",
                      "type": "Struct(udp_listeners)"
                    },
                    {
                      "default": "true",
                      "doc": "是否启用该网关",
                      "hash": "V-gateway-S-gateway-coap-S-coap-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "true",
                      "doc": "是否开启客户端统计",
                      "hash": "V-gateway-S-gateway-coap-S-coap-enable_stats",
                      "text": "enable_stats",
                      "type": "Boolean"
                    },
                    {
                      "default": "30s",
                      "doc": "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。",
                      "hash": "V-gateway-S-gateway-coap-S-coap-idle_timeout",
                      "text": "idle_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "ClientInfo 重写。",
                      "hash": "V-gateway-S-gateway-coap-S-coap-clientinfo_override",
                      "refs": [
                        {
                          "doc": "ClientInfo override.",
                          "fields": [
                            {
                              "doc": "username 重写模板",
                              "hash": "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "password 重写模板",
                              "hash": "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "doc": "clientid 重写模板",
                              "hash": "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-clientid",
                              "text": "clientid",
                              "type": "String"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override",
                          "text": "clientinfo_override"
                        }
                      ],
                      "text": "clientinfo_override",
                      "type": "Struct(clientinfo_override)"
                    }
                  ],
                  "hash": "T-gateway-S-gateway-coap-S-coap",
                  "text": "coap"
                }
              ],
              "text": "coap",
              "type": "Struct(coap)"
            },
            {
              "hash": "V-gateway-S-gateway-lwm2m",
              "refs": [
                {
                  "doc": "The LwM2M protocol gateway.",
                  "fields": [
                    {
                      "doc": "LwM2M Resource 定义的 XML 文件目录路径。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-xml_dir",
                      "text": "xml_dir",
                      "type": "String"
                    },
                    {
                      "default": "15s",
                      "doc": "允许 LwM2M 客户端允许设置的心跳最小值。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-lifetime_min",
                      "text": "lifetime_min",
                      "type": "String"
                    },
                    {
                      "default": "86400s",
                      "doc": "允许 LwM2M 客户端允许设置的心跳最大值。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-lifetime_max",
                      "text": "lifetime_max",
                      "type": "String"
                    },
                    {
                      "default": "22s",
                      "doc": "在QMode模式下，LwM2M网关认为网络链接有效的时间窗口的值。\n例如，在收到客户端的更新信息后，在这个时间窗口内的任何信息都会直接发送到LwM2M客户端，而超过这个时间窗口的所有信息都会暂时储存在内存中。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-qmode_time_window",
                      "text": "qmode_time_window",
                      "type": "String"
                    },
                    {
                      "default": "false",
                      "doc": "自动 Observe REGISTER 数据包的 Object 列表。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-auto_observe",
                      "text": "auto_observe",
                      "type": "Boolean"
                    },
                    {
                      "default": "contains_object_list",
                      "doc": "发布UPDATE事件消息的策略。<br/>\n  - always: 只要收到 UPDATE 请求，就发送更新事件。<br/>\n  - contains_object_list: 仅当 UPDATE 请求携带 Object 列表时才发送更新事件。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-update_msg_publish_condition",
                      "text": "update_msg_publish_condition",
                      "type": "Enum(always,contains_object_list)"
                    },
                    {
                      "doc": "LwM2M 网关订阅/发布消息的主题映射配置。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators",
                      "refs": [
                        {
                          "doc": "MQTT topics that correspond to LwM2M events.",
                          "fields": [
                            {
                              "doc": "下行命令主题。\n对于每个成功上线的新 LwM2M 客户端，网关会创建一个订阅关系来接收下行消息并将其发送给客户端。",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command",
                              "refs": [
                                {
                                  "doc": "MQTT topic that corresponds to a particular type of event.",
                                  "fields": [
                                    {
                                      "doc": "主题名称",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator-topic",
                                      "text": "topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "0",
                                      "doc": "QoS 等级",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator-qos",
                                      "text": "qos",
                                      "type": "Integer(0..2)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator",
                                  "text": "translator"
                                }
                              ],
                              "text": "command",
                              "type": "Struct(translator)"
                            },
                            {
                              "doc": "用于网关发布来自 LwM2M 客户端的确认事件的主题。",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response",
                              "refs": [
                                {
                                  "doc": "MQTT topic that corresponds to a particular type of event.",
                                  "fields": [
                                    {
                                      "doc": "主题名称",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator-topic",
                                      "text": "topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "0",
                                      "doc": "QoS 等级",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator-qos",
                                      "text": "qos",
                                      "type": "Integer(0..2)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator",
                                  "text": "translator"
                                }
                              ],
                              "text": "response",
                              "type": "Struct(translator)"
                            },
                            {
                              "doc": "用于发布来自 LwM2M 客户端的通知事件的主题。\n在成功 Observe 到 LwM2M 客户端的资源后，如果客户端报告任何资源状态的变化，网关将通过该主题发送通知事件。",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify",
                              "refs": [
                                {
                                  "doc": "MQTT topic that corresponds to a particular type of event.",
                                  "fields": [
                                    {
                                      "doc": "主题名称",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator-topic",
                                      "text": "topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "0",
                                      "doc": "QoS 等级",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator-qos",
                                      "text": "qos",
                                      "type": "Integer(0..2)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator",
                                  "text": "translator"
                                }
                              ],
                              "text": "notify",
                              "type": "Struct(translator)"
                            },
                            {
                              "doc": "用于发布来自 LwM2M 客户端的注册事件的主题。",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register",
                              "refs": [
                                {
                                  "doc": "MQTT topic that corresponds to a particular type of event.",
                                  "fields": [
                                    {
                                      "doc": "主题名称",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator-topic",
                                      "text": "topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "0",
                                      "doc": "QoS 等级",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator-qos",
                                      "text": "qos",
                                      "type": "Integer(0..2)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator",
                                  "text": "translator"
                                }
                              ],
                              "text": "register",
                              "type": "Struct(translator)"
                            },
                            {
                              "doc": "用于发布来自LwM2M客户端的更新事件的主题。",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update",
                              "refs": [
                                {
                                  "doc": "MQTT topic that corresponds to a particular type of event.",
                                  "fields": [
                                    {
                                      "doc": "主题名称",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator-topic",
                                      "text": "topic",
                                      "type": "String"
                                    },
                                    {
                                      "default": "0",
                                      "doc": "QoS 等级",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator-qos",
                                      "text": "qos",
                                      "type": "Integer(0..2)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator",
                                  "text": "translator"
                                }
                              ],
                              "text": "update",
                              "type": "Struct(translator)"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators",
                          "text": "lwm2m_translators"
                        }
                      ],
                      "text": "translators",
                      "type": "Struct(lwm2m_translators)"
                    },
                    {
                      "default": "\"lwm2m/${endpoint_name}/\"",
                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-mountpoint",
                      "text": "mountpoint",
                      "type": "String"
                    },
                    {
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners",
                      "refs": [
                        {
                          "doc": "Settings for the UDP listeners.",
                          "fields": [
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp",
                              "refs": [
                                {
                                  "doc": "Settings for UDP listener.",
                                  "fields": [
                                    {
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for UDP sockets.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "doc": "Socket 在内核空间接收缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在内核空间发送缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在用户空间的缓冲区大小。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "text": "udp_opts"
                                        }
                                      ],
                                      "text": "udp_options",
                                      "type": "Struct(udp_opts)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "text": "udp_listener"
                                }
                              ],
                              "text": "udp",
                              "type": "Map($name->Struct(udp_listener))"
                            },
                            {
                              "doc": "从监听器名称到配置参数的映射。",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls",
                              "refs": [
                                {
                                  "doc": "Settings for DTLS listener.",
                                  "fields": [
                                    {
                                      "default": "16",
                                      "doc": "Acceptor 进程池大小。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "text": "acceptors",
                                      "type": "Integer"
                                    },
                                    {
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for UDP sockets.",
                                          "fields": [
                                            {
                                              "default": "100",
                                              "doc": "为 Socket 指定 {active, N} 选项。\n参见：https://erlang.org/doc/man/inet.html#setopts-2",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "text": "active_n",
                                              "type": "Integer"
                                            },
                                            {
                                              "doc": "Socket 在内核空间接收缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "text": "recbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在内核空间发送缓冲区的大小。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "text": "sndbuf",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Socket 在用户空间的缓冲区大小。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "text": "buffer",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "允许重用本地处于 TIME_WAIT 的端口号。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "text": "reuseaddr",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "text": "udp_opts"
                                        }
                                      ],
                                      "text": "udp_options",
                                      "type": "Struct(udp_opts)"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "是否启用该监听器。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-enable",
                                      "text": "enable",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "监听器绑定的 IP 地址或端口。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "text": "bind",
                                      "type": "String"
                                    },
                                    {
                                      "default": "1024",
                                      "doc": "监听器支持的最大连接数。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "text": "max_connections",
                                      "type": "OneOf(Integer(1..+inf),String(\"infinity\"))"
                                    },
                                    {
                                      "default": "1000",
                                      "doc": "监听器支持的最大连接速率。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "text": "max_conn_rate",
                                      "type": "Integer"
                                    },
                                    {
                                      "default": "true",
                                      "doc": "配置 <code>true</code> （默认值）启用客户端进行身份认证。\n配置 <code>false</code> 时，将不对客户端做任何认证。",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "text": "enable_authn",
                                      "type": "Boolean"
                                    },
                                    {
                                      "doc": "发布或订阅时，在所有主题前增加前缀字符串。\n当消息投递给订阅者时，前缀字符串将从主题名称中删除。挂载点是用户可以用来实现不同监听器之间的消息路由隔离的一种方式。\n例如，如果客户端 A 在 `listeners.tcp.\\<name>.mountpoint` 设置为 `some_tenant` 的情况下订阅 `t`，\n则客户端实际上订阅了 `some_tenant/t` 主题。\n类似地，如果另一个客户端 B（连接到与客户端 A 相同的侦听器）向主题 `t` 发送消息，\n则该消息被路由到所有订阅了 `some_tenant/t` 的客户端，因此客户端 A 将收到该消息，带有 主题名称`t`。 设置为 `\"\"` 以禁用该功能。\n挂载点字符串中可用的变量：<br/>\n   - <code>${clientid}</code>：clientid<br/>\n   - <code>${username}</code>：用户名",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "text": "mountpoint",
                                      "type": "String"
                                    },
                                    {
                                      "default": "[]",
                                      "doc": "配置监听器的访问控制规则。\n见：https://github.com/emqtt/esockd#allowdeny",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "text": "access_rules",
                                      "type": "Array(String)"
                                    },
                                    {
                                      "doc": "DTLS Socket 配置",
                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "refs": [
                                        {
                                          "doc": "Settings for DTLS protocol.",
                                          "fields": [
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cacert.pem\"",
                                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "text": "cacertfile",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "Deprecated since 5.1.4.",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "text": "cacerts",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/cert.pem\"",
                                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "text": "certfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "\"${EMQX_ETC_DIR}/certs/key.pem\"",
                                              "doc": "PEM格式的私钥文件。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "text": "keyfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "verify_none",
                                              "doc": "启用或禁用对等验证。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "text": "verify",
                                              "type": "Enum(verify_peer,verify_none)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "启用 TLS 会话重用。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "text": "reuse_sessions",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "10",
                                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "text": "depth",
                                              "type": "Integer(0..+inf)"
                                            },
                                            {
                                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "text": "password",
                                              "type": "String"
                                            },
                                            {
                                              "default": "[dtlsv1.2]",
                                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "text": "versions",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "[]",
                                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "text": "ciphers",
                                              "type": "Array(String)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "text": "secure_renegotiate",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "notice",
                                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "text": "log_level",
                                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                            },
                                            {
                                              "default": "5s",
                                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "text": "hibernate_after",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "如果协商使用 Diffie-Hellman 密钥交换的密码套件，则服务器将使用包含PEM编码的Diffie-Hellman参数的文件的路径。如果未指定，则使用默认参数。<br/>\n注意：TLS 1.3不支持<code>dhfile</code>选项。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "text": "dhfile",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "TLS/DTLS 服务器与 {verify，verify_peer} 一起使用。\n如果设置为true，则如果客户端没有要发送的证书，即发送空证书，服务器将失败。\n如果设置为false，则仅当客户端发送无效证书（空证书被视为有效证书）时才会失败。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "text": "fail_if_no_peer_cert",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "一个重要的安全设置，它强制根据服务器指定的顺序而不是客户机指定的顺序设置密码，从而强制服务器管理员执行（通常配置得更正确）安全顺序。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "text": "honor_cipher_order",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "在支持客户机发起的重新协商的协议中，这种操作的资源成本对于服务器来说高于客户机。\n这可能会成为拒绝服务攻击的载体。\nSSL 应用程序已经采取措施来反击此类尝试，但通过将此选项设置为 false，可以严格禁用客户端发起的重新协商。\n默认值为 true。请注意，由于基础密码套件可以加密的消息数量有限，禁用重新协商可能会导致长期连接变得不可用。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "text": "client_renegotiation",
                                              "type": "Boolean"
                                            },
                                            {
                                              "default": "15s",
                                              "doc": "握手完成所允许的最长时间",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "text": "handshake_timeout",
                                              "type": "String"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "内存使用调优。如果启用，将在TLS/SSL握手完成后立即执行垃圾回收。TLS/SSL握手建立后立即进行GC。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "text": "gc_after_handshake",
                                              "type": "Boolean"
                                            },
                                            {
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "refs": [
                                                {
                                                  "doc": "Per listener OCSP Stapling configuration.",
                                                  "fields": [
                                                    {
                                                      "default": "false",
                                                      "doc": "是否为监听器启用 OCSP Stapling 功能。 如果设置为 true，需要定义 OCSP Responder 的 URL 和证书签发者的 PEM 文件路径。",
                                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "text": "enable_ocsp_stapling",
                                                      "type": "Boolean"
                                                    },
                                                    {
                                                      "doc": "用于检查服务器证书的 OCSP Responder 的 URL。",
                                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "text": "responder_url",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "doc": "服务器证书的 OCSP 签发者的 PEM 编码证书。",
                                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "text": "issuer_pem",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "5m",
                                                      "doc": "为服务器刷新OCSP响应的周期。",
                                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "text": "refresh_interval",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "15s",
                                                      "doc": "检查 OCSP 响应时，HTTP 请求的超时。",
                                                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "text": "refresh_http_timeout",
                                                      "type": "String"
                                                    }
                                                  ],
                                                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "text": "ocsp"
                                                }
                                              ],
                                              "text": "ocsp",
                                              "type": "Struct(ocsp)"
                                            },
                                            {
                                              "default": "false",
                                              "doc": "是否为该监听器启用 CRL 检查。",
                                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "text": "enable_crl_check",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "text": "dtls_opts"
                                        }
                                      ],
                                      "text": "dtls_options",
                                      "type": "Struct(dtls_opts)"
                                    }
                                  ],
                                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "text": "dtls_listener"
                                }
                              ],
                              "text": "dtls",
                              "type": "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners",
                          "text": "udp_listeners"
                        }
                      ],
                      "text": "listeners",
                      "type": "Struct(udp_listeners)"
                    },
                    {
                      "default": "true",
                      "doc": "是否启用该网关",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "default": "true",
                      "doc": "是否开启客户端统计",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-enable_stats",
                      "text": "enable_stats",
                      "type": "Boolean"
                    },
                    {
                      "default": "30s",
                      "doc": "客户端连接过程的空闲时间。该配置用于：\n  1. 一个新创建的客户端进程如果在该时间间隔内没有收到任何客户端请求，将被直接关闭。\n  2. 一个正在运行的客户进程如果在这段时间后没有收到任何客户请求，将进入休眠状态以节省资源。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-idle_timeout",
                      "text": "idle_timeout",
                      "type": "String"
                    },
                    {
                      "doc": "ClientInfo 重写。",
                      "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override",
                      "refs": [
                        {
                          "doc": "ClientInfo override.",
                          "fields": [
                            {
                              "doc": "username 重写模板",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-username",
                              "text": "username",
                              "type": "String"
                            },
                            {
                              "doc": "password 重写模板",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "doc": "clientid 重写模板",
                              "hash": "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-clientid",
                              "text": "clientid",
                              "type": "String"
                            }
                          ],
                          "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override",
                          "text": "clientinfo_override"
                        }
                      ],
                      "text": "clientinfo_override",
                      "type": "Struct(clientinfo_override)"
                    }
                  ],
                  "hash": "T-gateway-S-gateway-lwm2m-S-lwm2m",
                  "text": "lwm2m"
                }
              ],
              "text": "lwm2m",
              "type": "Struct(lwm2m)"
            }
          ],
          "hash": "T-gateway-S-gateway",
          "text": "gateway"
        }
      ],
      "text": "gateway",
      "type": "Struct(gateway)"
    },
    {
      "hash": "V-prometheus",
      "refs": [
        {
          "doc": "Prometheus 监控数据推送",
          "fields": [
            {
              "default": "\"http://127.0.0.1:9091\"",
              "doc": "Prometheus 服务器地址",
              "hash": "V-prometheus-S-prometheus-push_gateway_server",
              "text": "push_gateway_server",
              "type": "String"
            },
            {
              "default": "15s",
              "doc": "数据推送间隔",
              "hash": "V-prometheus-S-prometheus-interval",
              "text": "interval",
              "type": "String"
            },
            {
              "default": "{}",
              "doc": "推送到 Push Gateway 的 HTTP Headers 列表。<br/>\n例如，<code> { Authorization = \"some-authz-tokens\"}</code>",
              "hash": "V-prometheus-S-prometheus-headers",
              "text": "headers",
              "type": "Map"
            },
            {
              "default": "\"${name}/instance/${name}~${host}\"",
              "doc": "推送到 Push Gateway 的 Job 名称。可用变量为：<br/>\n- ${name}: EMQX 节点的名称。\n- ${host}: EMQX 节点主机名。\n例如，当 EMQX 节点名为 <code>emqx@127.0.0.1</code> 则 name 变量的值为 <code>emqx</code>，host 变量的值为 <code>127.0.0.1</code>。<br/>\n默认值为: <code>${name}/instance/${name}~${host}</code>",
              "hash": "V-prometheus-S-prometheus-job_name",
              "text": "job_name",
              "type": "String"
            },
            {
              "default": "false",
              "doc": "开启或关闭 Prometheus 数据推送",
              "hash": "V-prometheus-S-prometheus-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "disabled",
              "doc": "开启或关闭 VM 分布采集器，收集 Erlang 分布机制中涉及的套接字和进程的信息。",
              "hash": "V-prometheus-S-prometheus-vm_dist_collector",
              "text": "vm_dist_collector",
              "type": "Enum(disabled,enabled)"
            },
            {
              "default": "disabled",
              "doc": "开启或关闭 Mnesia 采集器, 使用 mnesia:system_info/1 收集 Mnesia 相关指标",
              "hash": "V-prometheus-S-prometheus-mnesia_collector",
              "text": "mnesia_collector",
              "type": "Enum(enabled,disabled)"
            },
            {
              "default": "disabled",
              "doc": "开启或关闭 VM 统计采集器, 使用 erlang:statistics/1 收集 Erlang VM 相关指标",
              "hash": "V-prometheus-S-prometheus-vm_statistics_collector",
              "text": "vm_statistics_collector",
              "type": "Enum(enabled,disabled)"
            },
            {
              "default": "disabled",
              "doc": "开启或关闭 VM 系统信息采集器, 使用 erlang:system_info/1 收集 Erlang VM 相关指标",
              "hash": "V-prometheus-S-prometheus-vm_system_info_collector",
              "text": "vm_system_info_collector",
              "type": "Enum(enabled,disabled)"
            },
            {
              "default": "disabled",
              "doc": "开启或关闭 VM 内存采集器, 使用 erlang:memory/0 收集 Erlang 虚拟机动态分配的内存信息，同时提供基本的 (D)ETS 统计信息",
              "hash": "V-prometheus-S-prometheus-vm_memory_collector",
              "text": "vm_memory_collector",
              "type": "Enum(enabled,disabled)"
            },
            {
              "default": "disabled",
              "doc": "开启或关闭 VM msacc 采集器, 使用 erlang:statistics(microstate_accounting) 收集微状态计数指标",
              "hash": "V-prometheus-S-prometheus-vm_msacc_collector",
              "text": "vm_msacc_collector",
              "type": "Enum(enabled,disabled)"
            }
          ],
          "hash": "T-prometheus-S-prometheus",
          "text": "prometheus"
        }
      ],
      "text": "prometheus",
      "type": "Struct(prometheus)"
    },
    {
      "hash": "V-exhook",
      "refs": [
        {
          "doc": "External hook (exhook) configuration.",
          "fields": [
            {
              "default": "[]",
              "doc": "ExHook 服务器列表",
              "hash": "V-exhook-S-exhook-servers",
              "refs": [
                {
                  "doc": "gRPC server configuration.",
                  "fields": [
                    {
                      "doc": "ExHook 服务器名称",
                      "hash": "V-exhook-S-exhook-servers-S-server-name",
                      "text": "name",
                      "type": "String"
                    },
                    {
                      "default": "true",
                      "doc": "开启这个 Exhook 服务器",
                      "hash": "V-exhook-S-exhook-servers-S-server-enable",
                      "text": "enable",
                      "type": "Boolean"
                    },
                    {
                      "doc": "gRPC 服务器地址",
                      "hash": "V-exhook-S-exhook-servers-S-server-url",
                      "text": "url",
                      "type": "String"
                    },
                    {
                      "default": "5s",
                      "doc": "gRPC 服务器请求超时",
                      "hash": "V-exhook-S-exhook-servers-S-server-request_timeout",
                      "text": "request_timeout",
                      "type": "String"
                    },
                    {
                      "default": "deny",
                      "doc": "当 gRPC 请求失败后的操作",
                      "hash": "V-exhook-S-exhook-servers-S-server-failed_action",
                      "text": "failed_action",
                      "type": "Enum(deny,ignore)"
                    },
                    {
                      "hash": "V-exhook-S-exhook-servers-S-server-ssl",
                      "refs": [
                        {
                          "doc": "SSL client configuration.",
                          "fields": [
                            {
                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-cacertfile",
                              "text": "cacertfile",
                              "type": "String"
                            },
                            {
                              "doc": "Deprecated since 5.1.4.",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-cacerts",
                              "text": "cacerts",
                              "type": "Boolean"
                            },
                            {
                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-certfile",
                              "text": "certfile",
                              "type": "String"
                            },
                            {
                              "doc": "PEM格式的私钥文件。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-keyfile",
                              "text": "keyfile",
                              "type": "String"
                            },
                            {
                              "default": "verify_none",
                              "doc": "启用或禁用对等验证。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-verify",
                              "text": "verify",
                              "type": "Enum(verify_peer,verify_none)"
                            },
                            {
                              "default": "true",
                              "doc": "启用 TLS 会话重用。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-reuse_sessions",
                              "text": "reuse_sessions",
                              "type": "Boolean"
                            },
                            {
                              "default": "10",
                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-depth",
                              "text": "depth",
                              "type": "Integer(0..+inf)"
                            },
                            {
                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-password",
                              "text": "password",
                              "type": "String"
                            },
                            {
                              "default": "[tlsv1.3, tlsv1.2]",
                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-versions",
                              "text": "versions",
                              "type": "Array(String)"
                            },
                            {
                              "default": "[]",
                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-ciphers",
                              "text": "ciphers",
                              "type": "Array(String)"
                            },
                            {
                              "default": "true",
                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-secure_renegotiate",
                              "text": "secure_renegotiate",
                              "type": "Boolean"
                            },
                            {
                              "default": "notice",
                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-log_level",
                              "text": "log_level",
                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                            },
                            {
                              "default": "5s",
                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-hibernate_after",
                              "text": "hibernate_after",
                              "type": "String"
                            },
                            {
                              "default": "false",
                              "doc": "启用 TLS。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-enable",
                              "text": "enable",
                              "type": "Boolean"
                            },
                            {
                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                              "hash": "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-server_name_indication",
                              "text": "server_name_indication",
                              "type": "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "hash": "T-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf",
                          "text": "ssl_conf"
                        }
                      ],
                      "text": "ssl",
                      "type": "Struct(ssl_conf)"
                    },
                    {
                      "default": "{keepalive = true, nodelay = true}",
                      "hash": "V-exhook-S-exhook-servers-S-server-socket_options",
                      "refs": [
                        {
                          "doc": "连接套接字设置",
                          "fields": [
                            {
                              "default": "true",
                              "doc": "当没有其他数据交换时，是否向连接的对端套接字定期的发送探测包。如果另一端没有响应，则认为连接断开，并向控制进程发送错误消息。",
                              "hash": "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-keepalive",
                              "text": "keepalive",
                              "type": "Boolean"
                            },
                            {
                              "default": "true",
                              "doc": "如果为 true，则为套接字设置 TCP_NODELAY 选项，这意味着会立即发送数据包。",
                              "hash": "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-nodelay",
                              "text": "nodelay",
                              "type": "Boolean"
                            },
                            {
                              "doc": "套接字的最小接收缓冲区大小",
                              "hash": "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-recbuf",
                              "text": "recbuf",
                              "type": "String"
                            },
                            {
                              "doc": "套接字的最小发送缓冲区大小",
                              "hash": "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-sndbuf",
                              "text": "sndbuf",
                              "type": "String"
                            }
                          ],
                          "hash": "T-exhook-S-exhook-servers-S-server-socket_options-S-socket_options",
                          "text": "socket_options"
                        }
                      ],
                      "text": "socket_options",
                      "type": "Struct(socket_options)"
                    },
                    {
                      "default": "60s",
                      "doc": "自动重连到 gRPC 服务器的设置。\n当 gRPC 服务器不可用时，Exhook 将会按照这里设置的间隔时间进行重连，并重新初始化注册的钩子",
                      "hash": "V-exhook-S-exhook-servers-S-server-auto_reconnect",
                      "text": "auto_reconnect",
                      "type": "OneOf(String(\"false\"),String)"
                    },
                    {
                      "default": "8",
                      "doc": "gRPC 客户端进程池大小",
                      "hash": "V-exhook-S-exhook-servers-S-server-pool_size",
                      "text": "pool_size",
                      "type": "Integer(1..+inf)"
                    }
                  ],
                  "hash": "T-exhook-S-exhook-servers-S-server",
                  "text": "server"
                }
              ],
              "text": "servers",
              "type": "Array(Struct(server))"
            }
          ],
          "hash": "T-exhook-S-exhook",
          "text": "exhook"
        }
      ],
      "text": "exhook",
      "type": "Struct(exhook)"
    },
    {
      "hash": "V-psk_authentication",
      "refs": [
        {
          "doc": "此配置用于启用 TLS-PSK 身份验证。\n\nPSK 是 “Pre-Shared-Keys” 的缩写。\n\n注意: 确保 SSL 监听器仅启用了 'tlsv1.2'，并且配置了PSK 密码套件，例如 'RSA-PSK-AES256-GCM-SHA384'。\n\n可以通过查看监听器中的 SSL 选项，了解更多详细信息。\n\n可以通过配置 'init_file' 来设置初始化的 ID 和 密钥",
          "fields": [
            {
              "default": "false",
              "doc": "是否开启 TLS PSK 支持",
              "hash": "V-psk_authentication-S-psk_authentication-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "doc": "如果设置了初始化文件，EMQX 将在启动时从初始化文件中导入 PSK 信息到内建数据库中。\n这个文件需要按行进行组织，每一行必须遵守如下格式: <code>PSKIdentity:SharedSecret</code>\n例如: <code>mydevice1:c2VjcmV0</code>",
              "hash": "V-psk_authentication-S-psk_authentication-init_file",
              "text": "init_file",
              "type": "String"
            },
            {
              "default": "\":\"",
              "doc": "PSK 文件中 <code>PSKIdentity</code> 和 <code>SharedSecret</code> 之间的分隔符",
              "hash": "V-psk_authentication-S-psk_authentication-separator",
              "text": "separator",
              "type": "String"
            },
            {
              "default": "50",
              "doc": "将 PSK 文件导入到内建数据时每个块的大小",
              "hash": "V-psk_authentication-S-psk_authentication-chunk_size",
              "text": "chunk_size",
              "type": "Integer"
            }
          ],
          "hash": "T-psk_authentication-S-psk_authentication",
          "text": "psk_authentication"
        }
      ],
      "text": "psk_authentication",
      "type": "Struct(psk_authentication)"
    },
    {
      "hash": "V-slow_subs",
      "refs": [
        {
          "doc": "Configuration for `slow_subs` feature.",
          "fields": [
            {
              "default": "false",
              "doc": "开启慢订阅",
              "hash": "V-slow_subs-S-slow_subs-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "500ms",
              "doc": "慢订阅统计的阈值",
              "hash": "V-slow_subs-S-slow_subs-threshold",
              "text": "threshold",
              "type": "String"
            },
            {
              "default": "300s",
              "doc": "慢订阅记录的有效时间",
              "hash": "V-slow_subs-S-slow_subs-expire_interval",
              "text": "expire_interval",
              "type": "String"
            },
            {
              "default": "10",
              "doc": "慢订阅统计表的记录数量上限",
              "hash": "V-slow_subs-S-slow_subs-top_k_num",
              "text": "top_k_num",
              "type": "Integer(1..+inf)"
            },
            {
              "default": "whole",
              "doc": "慢订阅的统计类型",
              "hash": "V-slow_subs-S-slow_subs-stats_type",
              "text": "stats_type",
              "type": "Enum(whole,internal,response)"
            }
          ],
          "hash": "T-slow_subs-S-slow_subs",
          "text": "slow_subs"
        }
      ],
      "text": "slow_subs",
      "type": "Struct(slow_subs)"
    },
    {
      "hash": "V-opentelemetry",
      "refs": [
        {
          "doc": "Open Telemetry 工具包配置",
          "fields": [
            {
              "doc": "Open Telemetry 导出",
              "hash": "V-opentelemetry-S-opentelemetry-exporter",
              "refs": [
                {
                  "doc": "Open Telemetry 导出",
                  "fields": [
                    {
                      "default": "\"http://localhost:4317\"",
                      "doc": "Open Telemetry 导出端点",
                      "hash": "V-opentelemetry-S-opentelemetry-exporter-S-exporter-endpoint",
                      "text": "endpoint",
                      "type": "String"
                    },
                    {
                      "default": "10s",
                      "doc": "发送指标到 Open Telemetry 端点的时间间隔",
                      "hash": "V-opentelemetry-S-opentelemetry-exporter-S-exporter-interval",
                      "text": "interval",
                      "type": "String"
                    }
                  ],
                  "hash": "T-opentelemetry-S-opentelemetry-exporter-S-exporter",
                  "text": "exporter"
                }
              ],
              "text": "exporter",
              "type": "Struct(exporter)"
            },
            {
              "default": "false",
              "doc": "启用或禁用 open telemetry 指标",
              "hash": "V-opentelemetry-S-opentelemetry-enable",
              "text": "enable",
              "type": "Boolean"
            }
          ],
          "hash": "T-opentelemetry-S-opentelemetry",
          "text": "opentelemetry"
        }
      ],
      "text": "opentelemetry",
      "type": "Struct(opentelemetry)"
    },
    {
      "hash": "V-api_key",
      "refs": [
        {
          "doc": "API 密钥， 可用于请求除管理 API 密钥及 Dashboard 用户管理 API 的其它接口",
          "fields": [
            {
              "default": "\"\"",
              "doc": "用于在启动 EMQX 时，添加 API 密钥，其格式为 {appid}:{secret}，多个密钥用换行分隔。：\n      ```\n      7e729ae70d23144b:2QILI9AcQ9BYlVqLDHQNWN2saIjBV4egr1CZneTNKr9CpK\n      ec3907f865805db0:Ee3taYltUKtoBVD9C3XjQl9C6NXheip8Z9B69BpUv5JxVHL\n      ```",
              "hash": "V-api_key-S-api_key-bootstrap_file",
              "text": "bootstrap_file",
              "type": "String"
            }
          ],
          "hash": "T-api_key-S-api_key",
          "text": "api_key"
        }
      ],
      "text": "api_key",
      "type": "Struct(api_key)"
    },
    {
      "doc": "EMQX 企业版 License 。\nEMQX 自带一个默认的试用 License，允许最多接入 100 个连接，签发时间是 2023 年 1 月 9 日，有效期是 5 年（1825 天）。若需要在生产环境部署，\n请购买 License 或访问 https://www.emqx.com/apply-licenses/emqx 申请。",
      "hash": "V-license",
      "refs": [
        {
          "doc": "License provisioned as a string.",
          "fields": [
            {
              "default": "\"MjIwMTExCjAKMTAKRXZhbHVhdGlvbgpjb250YWN0QGVtcXguaW8KZGVmYXVsdAoyMDIzMDEwOQoxODI1CjEwMAo=.MEUCIG62t8W15g05f1cKx3tA3YgJoR0dmyHOPCdbUxBGxgKKAiEAhHKh8dUwhU+OxNEaOn8mgRDtiT3R8RZooqy6dEsOmDI=\"",
              "doc": "申请或购买 License 时获得的密钥字符串",
              "hash": "V-license-S-key_license-key",
              "text": "key",
              "type": "String"
            },
            {
              "default": "75%",
              "doc": "连接数低于此值是，系统会清除连接配额使用告警",
              "hash": "V-license-S-key_license-connection_low_watermark",
              "text": "connection_low_watermark",
              "type": "String"
            },
            {
              "default": "80%",
              "doc": "连接数超过该值时，系统会触发 License 连接配额使用告警",
              "hash": "V-license-S-key_license-connection_high_watermark",
              "text": "connection_high_watermark",
              "type": "String"
            }
          ],
          "hash": "T-license-S-key_license",
          "text": "key_license"
        }
      ],
      "text": "license",
      "type": "Struct(key_license)"
    },
    {
      "hash": "V-schema_registry",
      "refs": [
        {
          "doc": "Schema registry configurations.",
          "fields": [
            {
              "default": "{}",
              "doc": "Registered schemas.",
              "hash": "V-schema_registry-S-schema_registry-schemas",
              "refs": [
                {
                  "doc": "[Apache Avro](https://avro.apache.org/) serialization format.",
                  "fields": [
                    {
                      "doc": "Schema type.",
                      "hash": "V-schema_registry-S-schema_registry-schemas-S-avro-type",
                      "text": "type",
                      "type": "String(\"avro\")"
                    },
                    {
                      "doc": "Source text for the schema.",
                      "hash": "V-schema_registry-S-schema_registry-schemas-S-avro-source",
                      "text": "source",
                      "type": "String"
                    },
                    {
                      "default": "\"\"",
                      "doc": "A description for this schema.",
                      "hash": "V-schema_registry-S-schema_registry-schemas-S-avro-description",
                      "text": "description",
                      "type": "String"
                    }
                  ],
                  "hash": "T-schema_registry-S-schema_registry-schemas-S-avro",
                  "text": "avro"
                },
                {
                  "doc": "[Protocol Buffers](https://protobuf.dev/) serialization format.",
                  "fields": [
                    {
                      "doc": "Schema type.",
                      "hash": "V-schema_registry-S-schema_registry-schemas-S-protobuf-type",
                      "text": "type",
                      "type": "String(\"protobuf\")"
                    },
                    {
                      "doc": "Source text for the schema.",
                      "hash": "V-schema_registry-S-schema_registry-schemas-S-protobuf-source",
                      "text": "source",
                      "type": "String"
                    },
                    {
                      "default": "\"\"",
                      "doc": "A description for this schema.",
                      "hash": "V-schema_registry-S-schema_registry-schemas-S-protobuf-description",
                      "text": "description",
                      "type": "String"
                    }
                  ],
                  "hash": "T-schema_registry-S-schema_registry-schemas-S-protobuf",
                  "text": "protobuf"
                }
              ],
              "text": "schemas",
              "type": "Map($name->OneOf(Struct(avro),Struct(protobuf)))"
            }
          ],
          "hash": "T-schema_registry-S-schema_registry",
          "text": "schema_registry"
        }
      ],
      "text": "schema_registry",
      "type": "Struct(schema_registry)"
    },
    {
      "hash": "V-file_transfer",
      "refs": [
        {
          "doc": "File transfer settings",
          "fields": [
            {
              "default": "false",
              "doc": "启用文件传输（File Transfer）服务。<br/>\n文件传输服务允许客户端使用 `$file` 主题将分片上传到 EMQX。\n启用文件传输服务表示 `$file` 主题前缀已被预留，用于提供文件传输服务。<br/>\n这个开关也会影响文件传输 REST API 的可用性，以及依赖存储的后台任务（例如垃圾回收）。",
              "hash": "V-file_transfer-S-file_transfer-enable",
              "text": "enable",
              "type": "Boolean"
            },
            {
              "default": "10s",
              "doc": "指定文件传输初始化的时间限制。在<br/>\nEMQX 服务器过载时可能发生初始化超时。超时后给 `init` 的 PUBACK 中包含一个错误码 （0x80）。",
              "hash": "V-file_transfer-S-file_transfer-init_timeout",
              "text": "init_timeout",
              "type": "String"
            },
            {
              "default": "5m",
              "doc": "文件片段保存超时。<br/>\nEMQX 收到文件分片后，会对它进行保存，如果发生超时（例如系统过载），则会给这个发布消息的 PUBACK 中包含一个错误码（0x80）。",
              "hash": "V-file_transfer-S-file_transfer-store_segment_timeout",
              "text": "store_segment_timeout",
              "type": "String"
            },
            {
              "default": "5m",
              "doc": "文件拼接超时。<br/>\n在收到 'fin' 消息后 EMQX 会对文件进行拼接，如果发生超时（例如系统过载），则会给 'fin' 的 PUBACK 中包含一个错误码（0x80）。",
              "hash": "V-file_transfer-S-file_transfer-assemble_timeout",
              "text": "assemble_timeout",
              "type": "String"
            },
            {
              "default": "{\n  local {}\n}\n",
              "doc": "文件后端存储配置",
              "hash": "V-file_transfer-S-file_transfer-storage",
              "refs": [
                {
                  "doc": "Storage backend settings for file transfer",
                  "fields": [
                    {
                      "doc": "EMQX 节点本地用文件系统于存储文件分片的相关配置。",
                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local",
                      "refs": [
                        {
                          "doc": "File transfer local storage settings",
                          "fields": [
                            {
                              "default": "{\n  gc {}\n}\n",
                              "doc": "本地文件系统存储配置，包括已上传的文件分片和临时数据。",
                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments",
                              "refs": [
                                {
                                  "doc": "File transfer local segments storage settings",
                                  "fields": [
                                    {
                                      "doc": "文件分片存储的根目录。",
                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-root",
                                      "text": "root",
                                      "type": "String"
                                    },
                                    {
                                      "doc": "文件系统中临时文件的垃圾回收配置。",
                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc",
                                      "refs": [
                                        {
                                          "doc": "Garbage collection settings for the File transfer local segments storage",
                                          "fields": [
                                            {
                                              "default": "1h",
                                              "doc": "运行垃圾回收的时间间隔。",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-interval",
                                              "text": "interval",
                                              "type": "String"
                                            },
                                            {
                                              "default": "24h",
                                              "doc": "分片的临时存储的最大 TTL。<br/>\n该配置为系统全局上限，所有的分片都不会超过这个 TTL，即使某些文件传输指定了一个更大的 TTL。",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-maximum_segments_ttl",
                                              "text": "maximum_segments_ttl",
                                              "type": "String"
                                            },
                                            {
                                              "default": "5m",
                                              "doc": "分片的临时存储的最小 TTL。<br/>\n分片在超过这个 TTL 之前不被垃圾回收。\n该配置为系统全局下限，所有的分片都不会低于这个 TTL，即使某些文件传输指定了一个更小的 TTL。",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-minimum_segments_ttl",
                                              "text": "minimum_segments_ttl",
                                              "type": "String"
                                            }
                                          ],
                                          "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc",
                                          "text": "local_storage_segments_gc"
                                        }
                                      ],
                                      "text": "gc",
                                      "type": "Struct(local_storage_segments_gc)"
                                    }
                                  ],
                                  "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments",
                                  "text": "local_storage_segments"
                                }
                              ],
                              "text": "segments",
                              "type": "Struct(local_storage_segments)"
                            },
                            {
                              "default": "{\n  local {}\n}\n",
                              "doc": "将文件导出到本地存储<br/>\n该配置项指定所有分片都传输完成了的文件进行导出到本地存储的相关行为。",
                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter",
                              "refs": [
                                {
                                  "doc": "Exporter for the local file system storage backend",
                                  "fields": [
                                    {
                                      "doc": "将文件导出到本地存储。",
                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local",
                                      "refs": [
                                        {
                                          "doc": "Local Exporter settings for the File transfer local storage backend",
                                          "fields": [
                                            {
                                              "doc": "导出到本地文件时使用的根目录。",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local-S-local_storage_exporter-root",
                                              "text": "root",
                                              "type": "String"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "是否启用该后端",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local-S-local_storage_exporter-enable",
                                              "text": "enable",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local-S-local_storage_exporter",
                                          "text": "local_storage_exporter"
                                        }
                                      ],
                                      "text": "local",
                                      "type": "Struct(local_storage_exporter)"
                                    },
                                    {
                                      "doc": "将文件导出到 AWS s3 API 兼容的对象存储服务。",
                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3",
                                      "refs": [
                                        {
                                          "doc": "S3 Exporter settings for the File transfer local storage backend",
                                          "fields": [
                                            {
                                              "doc": "The access key ID of the S3 bucket.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-access_key_id",
                                              "text": "access_key_id",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "The secret access key of the S3 bucket.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-secret_access_key",
                                              "text": "secret_access_key",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "The name of the S3 bucket.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-bucket",
                                              "text": "bucket",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "The host of the S3 endpoint.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-host",
                                              "text": "host",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "The port of the S3 endpoint.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-port",
                                              "text": "port",
                                              "type": "Integer(1..+inf)"
                                            },
                                            {
                                              "default": "1h",
                                              "doc": "The time in seconds for which the signed URLs to the S3 objects are valid.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-url_expire_time",
                                              "text": "url_expire_time",
                                              "type": "String"
                                            },
                                            {
                                              "default": "5mb",
                                              "doc": "The minimum part size for multipart uploads.<br/>\nUploaded data will be accumulated in memory until this size is reached.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-min_part_size",
                                              "text": "min_part_size",
                                              "type": "String"
                                            },
                                            {
                                              "default": "5gb",
                                              "doc": "The maximum part size for multipart uploads.<br/>\nS3 uploader won't try to upload parts larger than this size.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-max_part_size",
                                              "text": "max_part_size",
                                              "type": "String"
                                            },
                                            {
                                              "doc": "The ACL to use for the uploaded objects.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-acl",
                                              "text": "acl",
                                              "type": "Enum(private,public_read,public_read_write,authenticated_read,bucket_owner_read,bucket_owner_full_control)"
                                            },
                                            {
                                              "doc": "Options for the HTTP transport layer used by the S3 client.",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options",
                                              "refs": [
                                                {
                                                  "doc": "Options for the HTTP transport layer used by the S3 client",
                                                  "fields": [
                                                    {
                                                      "default": "false",
                                                      "doc": "Whether to probe for IPv6 support.",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ipv6_probe",
                                                      "text": "ipv6_probe",
                                                      "type": "Boolean"
                                                    },
                                                    {
                                                      "default": "15s",
                                                      "doc": "The timeout when connecting to the HTTP server.",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-connect_timeout",
                                                      "text": "connect_timeout",
                                                      "type": "String"
                                                    },
                                                    {
                                                      "default": "random",
                                                      "doc": "The type of the pool. Can be one of `random`, `hash`.",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-pool_type",
                                                      "text": "pool_type",
                                                      "type": "Enum(random,hash)"
                                                    },
                                                    {
                                                      "default": "8",
                                                      "doc": "The pool size.",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-pool_size",
                                                      "text": "pool_size",
                                                      "type": "Integer(1..+inf)"
                                                    },
                                                    {
                                                      "default": "100",
                                                      "doc": "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-enable_pipelining",
                                                      "text": "enable_pipelining",
                                                      "type": "Integer(1..+inf)"
                                                    },
                                                    {
                                                      "default": "{enable = false}",
                                                      "doc": "启用 SSL 连接。",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl",
                                                      "refs": [
                                                        {
                                                          "doc": "Socket options for SSL clients.",
                                                          "fields": [
                                                            {
                                                              "doc": "受信任的PEM格式 CA  证书捆绑文件<br/>\n此文件中的证书用于验证TLS对等方的证书。\n如果要信任新 CA，请将新证书附加到文件中。\n无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/>\n注意：从文件中失效（删除）证书不会影响已建立的连接。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacertfile",
                                                              "text": "cacertfile",
                                                              "type": "String"
                                                            },
                                                            {
                                                              "doc": "Deprecated since 5.1.4.",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacerts",
                                                              "text": "cacerts",
                                                              "type": "Boolean"
                                                            },
                                                            {
                                                              "doc": "PEM格式证书链文件<br/>\n此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，\n然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。\n根 CA 证书是可选的，如果想要添加，应加到文件到最末端。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-certfile",
                                                              "text": "certfile",
                                                              "type": "String"
                                                            },
                                                            {
                                                              "doc": "PEM格式的私钥文件。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-keyfile",
                                                              "text": "keyfile",
                                                              "type": "String"
                                                            },
                                                            {
                                                              "default": "verify_none",
                                                              "doc": "启用或禁用对等验证。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify",
                                                              "text": "verify",
                                                              "type": "Enum(verify_peer,verify_none)"
                                                            },
                                                            {
                                                              "default": "true",
                                                              "doc": "启用 TLS 会话重用。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-reuse_sessions",
                                                              "text": "reuse_sessions",
                                                              "type": "Boolean"
                                                            },
                                                            {
                                                              "default": "10",
                                                              "doc": "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。\n因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/>\n如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/>\n如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-depth",
                                                              "text": "depth",
                                                              "type": "Integer(0..+inf)"
                                                            },
                                                            {
                                                              "doc": "包含用户密码的字符串。仅在私钥文件受密码保护时使用。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-password",
                                                              "text": "password",
                                                              "type": "String"
                                                            },
                                                            {
                                                              "default": "[tlsv1.3, tlsv1.2]",
                                                              "doc": "支持所有TLS/DTLS版本<br/>\n注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-versions",
                                                              "text": "versions",
                                                              "type": "Array(String)"
                                                            },
                                                            {
                                                              "default": "[]",
                                                              "doc": "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。\n<br/>\n密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。\n选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。\n\n名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。\nEMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/>\n注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。\n不兼容的密码套件将被自动删除。\n\n例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。\n\n<br/>\n注：PSK 的 Ciphers 不支持 tlsv1.3<br/>\n如果打算使用PSK密码套件, <code>tlsv1.3</code> 应在<code>ssl.versions</code>中禁用。\n\n<br/>\nPSK 密码套件：\n<code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-ciphers",
                                                              "text": "ciphers",
                                                              "type": "Array(String)"
                                                            },
                                                            {
                                                              "default": "true",
                                                              "doc": "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。\nRFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-secure_renegotiate",
                                                              "text": "secure_renegotiate",
                                                              "type": "Boolean"
                                                            },
                                                            {
                                                              "default": "notice",
                                                              "doc": "SSL 握手的日志级别。默认值是 'notice'，可以设置为 'debug' 用来调查 SSL 握手的问题。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-log_level",
                                                              "text": "log_level",
                                                              "type": "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)"
                                                            },
                                                            {
                                                              "default": "5s",
                                                              "doc": "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-hibernate_after",
                                                              "text": "hibernate_after",
                                                              "type": "String"
                                                            },
                                                            {
                                                              "default": "false",
                                                              "doc": "启用 TLS。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-enable",
                                                              "text": "enable",
                                                              "type": "Boolean"
                                                            },
                                                            {
                                                              "doc": "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/>\n例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，\n例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/>\n如果未指定，它将默认为使用的主机名字符串\n建立连接，除非使用 IP 地址<br/>\n然后，主机名也用于对等机的主机名验证证书<br/>\n特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。",
                                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-server_name_indication",
                                                              "text": "server_name_indication",
                                                              "type": "OneOf(String(\"disable\"),String)"
                                                            }
                                                          ],
                                                          "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts",
                                                          "text": "ssl_client_opts"
                                                        }
                                                      ],
                                                      "text": "ssl",
                                                      "type": "Struct(ssl_client_opts)"
                                                    },
                                                    {
                                                      "doc": "List of HTTP headers.",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-headers",
                                                      "text": "headers",
                                                      "type": "Map"
                                                    },
                                                    {
                                                      "doc": "Max retry times if error on sending request.",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-max_retries",
                                                      "text": "max_retries",
                                                      "type": "Integer(0..+inf)"
                                                    },
                                                    {
                                                      "doc": "HTTP request timeout.",
                                                      "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-request_timeout",
                                                      "text": "request_timeout",
                                                      "type": "String"
                                                    }
                                                  ],
                                                  "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options",
                                                  "text": "transport_options"
                                                }
                                              ],
                                              "text": "transport_options",
                                              "type": "Struct(transport_options)"
                                            },
                                            {
                                              "default": "true",
                                              "doc": "是否启用该后端",
                                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-enable",
                                              "text": "enable",
                                              "type": "Boolean"
                                            }
                                          ],
                                          "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter",
                                          "text": "s3_exporter"
                                        }
                                      ],
                                      "text": "s3",
                                      "type": "Struct(s3_exporter)"
                                    }
                                  ],
                                  "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend",
                                  "text": "local_storage_exporter_backend"
                                }
                              ],
                              "text": "exporter",
                              "type": "Struct(local_storage_exporter_backend)"
                            },
                            {
                              "default": "true",
                              "doc": "是否启用该后端",
                              "hash": "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-enable",
                              "text": "enable",
                              "type": "Boolean"
                            }
                          ],
                          "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage",
                          "text": "local_storage"
                        }
                      ],
                      "text": "local",
                      "type": "Struct(local_storage)"
                    }
                  ],
                  "hash": "T-file_transfer-S-file_transfer-storage-S-storage_backend",
                  "text": "storage_backend"
                }
              ],
              "text": "storage",
              "type": "Struct(storage_backend)"
            }
          ],
          "hash": "T-file_transfer-S-file_transfer",
          "text": "file_transfer"
        }
      ],
      "text": "file_transfer",
      "type": "Struct(file_transfer)"
    }
  ],
  "hash": "T-root",
  "text": "root"
}
